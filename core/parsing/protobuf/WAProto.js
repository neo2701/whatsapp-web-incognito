'use strict'; // code generated by pbf v3.2.1

var ADVEncryptionType = self.ADVEncryptionType = {
    "E2EE": {
        "value": 0,
        "options": {}
    },
    "HOSTED": {
        "value": 1,
        "options": {}
    }
};

var KeepType = self.KeepType = {
    "UNKNOWN": {
        "value": 0,
        "options": {}
    },
    "KEEP_FOR_ALL": {
        "value": 1,
        "options": {}
    },
    "UNDO_KEEP_FOR_ALL": {
        "value": 2,
        "options": {}
    }
};

var MediaVisibility = self.MediaVisibility = {
    "DEFAULT": {
        "value": 0,
        "options": {}
    },
    "OFF": {
        "value": 1,
        "options": {}
    },
    "ON": {
        "value": 2,
        "options": {}
    }
};

// ADVDeviceIdentity ========================================

var ADVDeviceIdentity = self.ADVDeviceIdentity = {};

ADVDeviceIdentity.read = function (pbf, end) {
    return pbf.readFields(ADVDeviceIdentity._readField, {rawId: 0, timestamp: 0, keyIndex: 0, accountType: 0, deviceType: 0}, end);
};
ADVDeviceIdentity._readField = function (tag, obj, pbf) {
    if (tag === 1) obj.rawId = pbf.readVarint();
    else if (tag === 2) obj.timestamp = pbf.readVarint();
    else if (tag === 3) obj.keyIndex = pbf.readVarint();
    else if (tag === 4) obj.accountType = pbf.readVarint();
    else if (tag === 5) obj.deviceType = pbf.readVarint();
};
ADVDeviceIdentity.write = function (obj, pbf) {
    if (obj.rawId) pbf.writeVarintField(1, obj.rawId);
    if (obj.timestamp) pbf.writeVarintField(2, obj.timestamp);
    if (obj.keyIndex) pbf.writeVarintField(3, obj.keyIndex);
    if (obj.accountType) pbf.writeVarintField(4, obj.accountType);
    if (obj.deviceType) pbf.writeVarintField(5, obj.deviceType);
};

// ADVKeyIndexList ========================================

var ADVKeyIndexList = self.ADVKeyIndexList = {};

ADVKeyIndexList.read = function (pbf, end) {
    return pbf.readFields(ADVKeyIndexList._readField, {rawId: 0, timestamp: 0, currentIndex: 0, validIndexes: [], accountType: 0}, end);
};
ADVKeyIndexList._readField = function (tag, obj, pbf) {
    if (tag === 1) obj.rawId = pbf.readVarint();
    else if (tag === 2) obj.timestamp = pbf.readVarint();
    else if (tag === 3) obj.currentIndex = pbf.readVarint();
    else if (tag === 4) pbf.readPackedVarint(obj.validIndexes);
    else if (tag === 5) obj.accountType = pbf.readVarint();
};
ADVKeyIndexList.write = function (obj, pbf) {
    if (obj.rawId) pbf.writeVarintField(1, obj.rawId);
    if (obj.timestamp) pbf.writeVarintField(2, obj.timestamp);
    if (obj.currentIndex) pbf.writeVarintField(3, obj.currentIndex);
    if (obj.validIndexes) pbf.writePackedVarint(4, obj.validIndexes);
    if (obj.accountType) pbf.writeVarintField(5, obj.accountType);
};

// ADVSignedDeviceIdentity ========================================

var ADVSignedDeviceIdentity = self.ADVSignedDeviceIdentity = {};

ADVSignedDeviceIdentity.read = function (pbf, end) {
    return pbf.readFields(ADVSignedDeviceIdentity._readField, {details: null, accountSignatureKey: null, accountSignature: null, deviceSignature: null}, end);
};
ADVSignedDeviceIdentity._readField = function (tag, obj, pbf) {
    if (tag === 1) obj.details = pbf.readBytes();
    else if (tag === 2) obj.accountSignatureKey = pbf.readBytes();
    else if (tag === 3) obj.accountSignature = pbf.readBytes();
    else if (tag === 4) obj.deviceSignature = pbf.readBytes();
};
ADVSignedDeviceIdentity.write = function (obj, pbf) {
    if (obj.details) pbf.writeBytesField(1, obj.details);
    if (obj.accountSignatureKey) pbf.writeBytesField(2, obj.accountSignatureKey);
    if (obj.accountSignature) pbf.writeBytesField(3, obj.accountSignature);
    if (obj.deviceSignature) pbf.writeBytesField(4, obj.deviceSignature);
};

// ADVSignedDeviceIdentityHMAC ========================================

var ADVSignedDeviceIdentityHMAC = self.ADVSignedDeviceIdentityHMAC = {};

ADVSignedDeviceIdentityHMAC.read = function (pbf, end) {
    return pbf.readFields(ADVSignedDeviceIdentityHMAC._readField, {details: null, hmac: null}, end);
};
ADVSignedDeviceIdentityHMAC._readField = function (tag, obj, pbf) {
    if (tag === 1) obj.details = pbf.readBytes();
    else if (tag === 2) obj.hmac = pbf.readBytes();
};
ADVSignedDeviceIdentityHMAC.write = function (obj, pbf) {
    if (obj.details) pbf.writeBytesField(1, obj.details);
    if (obj.hmac) pbf.writeBytesField(2, obj.hmac);
};

// ADVSignedKeyIndexList ========================================

var ADVSignedKeyIndexList = self.ADVSignedKeyIndexList = {};

ADVSignedKeyIndexList.read = function (pbf, end) {
    return pbf.readFields(ADVSignedKeyIndexList._readField, {details: null, accountSignature: null}, end);
};
ADVSignedKeyIndexList._readField = function (tag, obj, pbf) {
    if (tag === 1) obj.details = pbf.readBytes();
    else if (tag === 2) obj.accountSignature = pbf.readBytes();
};
ADVSignedKeyIndexList.write = function (obj, pbf) {
    if (obj.details) pbf.writeBytesField(1, obj.details);
    if (obj.accountSignature) pbf.writeBytesField(2, obj.accountSignature);
};

// ActionLink ========================================

var ActionLink = self.ActionLink = {};

ActionLink.read = function (pbf, end) {
    return pbf.readFields(ActionLink._readField, {url: "", buttonTitle: ""}, end);
};
ActionLink._readField = function (tag, obj, pbf) {
    if (tag === 1) obj.url = pbf.readString();
    else if (tag === 2) obj.buttonTitle = pbf.readString();
};
ActionLink.write = function (obj, pbf) {
    if (obj.url) pbf.writeStringField(1, obj.url);
    if (obj.buttonTitle) pbf.writeStringField(2, obj.buttonTitle);
};

// AutoDownloadSettings ========================================

var AutoDownloadSettings = self.AutoDownloadSettings = {};

AutoDownloadSettings.read = function (pbf, end) {
    return pbf.readFields(AutoDownloadSettings._readField, {downloadImages: false, downloadAudio: false, downloadVideo: false, downloadDocuments: false}, end);
};
AutoDownloadSettings._readField = function (tag, obj, pbf) {
    if (tag === 1) obj.downloadImages = pbf.readBoolean();
    else if (tag === 2) obj.downloadAudio = pbf.readBoolean();
    else if (tag === 3) obj.downloadVideo = pbf.readBoolean();
    else if (tag === 4) obj.downloadDocuments = pbf.readBoolean();
};
AutoDownloadSettings.write = function (obj, pbf) {
    if (obj.downloadImages) pbf.writeBooleanField(1, obj.downloadImages);
    if (obj.downloadAudio) pbf.writeBooleanField(2, obj.downloadAudio);
    if (obj.downloadVideo) pbf.writeBooleanField(3, obj.downloadVideo);
    if (obj.downloadDocuments) pbf.writeBooleanField(4, obj.downloadDocuments);
};

// AvatarUserSettings ========================================

var AvatarUserSettings = self.AvatarUserSettings = {};

AvatarUserSettings.read = function (pbf, end) {
    return pbf.readFields(AvatarUserSettings._readField, {fbid: "", password: ""}, end);
};
AvatarUserSettings._readField = function (tag, obj, pbf) {
    if (tag === 1) obj.fbid = pbf.readString();
    else if (tag === 2) obj.password = pbf.readString();
};
AvatarUserSettings.write = function (obj, pbf) {
    if (obj.fbid) pbf.writeStringField(1, obj.fbid);
    if (obj.password) pbf.writeStringField(2, obj.password);
};

// BizAccountLinkInfo ========================================

var BizAccountLinkInfo = self.BizAccountLinkInfo = {};

BizAccountLinkInfo.read = function (pbf, end) {
    return pbf.readFields(BizAccountLinkInfo._readField, {whatsappBizAcctFbid: 0, whatsappAcctNumber: "", issueTime: 0, hostStorage: 0, accountType: 0}, end);
};
BizAccountLinkInfo._readField = function (tag, obj, pbf) {
    if (tag === 1) obj.whatsappBizAcctFbid = pbf.readVarint();
    else if (tag === 2) obj.whatsappAcctNumber = pbf.readString();
    else if (tag === 3) obj.issueTime = pbf.readVarint();
    else if (tag === 4) obj.hostStorage = pbf.readVarint();
    else if (tag === 5) obj.accountType = pbf.readVarint();
};
BizAccountLinkInfo.write = function (obj, pbf) {
    if (obj.whatsappBizAcctFbid) pbf.writeVarintField(1, obj.whatsappBizAcctFbid);
    if (obj.whatsappAcctNumber) pbf.writeStringField(2, obj.whatsappAcctNumber);
    if (obj.issueTime) pbf.writeVarintField(3, obj.issueTime);
    if (obj.hostStorage) pbf.writeVarintField(4, obj.hostStorage);
    if (obj.accountType) pbf.writeVarintField(5, obj.accountType);
};

BizAccountLinkInfo.AccountType = {
    "ENTERPRISE": {
        "value": 0,
        "options": {}
    }
};

BizAccountLinkInfo.HostStorageType = {
    "ON_PREMISE": {
        "value": 0,
        "options": {}
    },
    "FACEBOOK": {
        "value": 1,
        "options": {}
    }
};

// BizAccountPayload ========================================

var BizAccountPayload = self.BizAccountPayload = {};

BizAccountPayload.read = function (pbf, end) {
    return pbf.readFields(BizAccountPayload._readField, {vnameCert: null, bizAcctLinkInfo: null}, end);
};
BizAccountPayload._readField = function (tag, obj, pbf) {
    if (tag === 1) obj.vnameCert = VerifiedNameCertificate.read(pbf, pbf.readVarint() + pbf.pos);
    else if (tag === 2) obj.bizAcctLinkInfo = pbf.readBytes();
};
BizAccountPayload.write = function (obj, pbf) {
    if (obj.vnameCert) pbf.writeMessage(1, VerifiedNameCertificate.write, obj.vnameCert);
    if (obj.bizAcctLinkInfo) pbf.writeBytesField(2, obj.bizAcctLinkInfo);
};

// BizIdentityInfo ========================================

var BizIdentityInfo = self.BizIdentityInfo = {};

BizIdentityInfo.read = function (pbf, end) {
    return pbf.readFields(BizIdentityInfo._readField, {vlevel: 0, vnameCert: null, signed: false, revoked: false, hostStorage: 0, actualActors: 0, privacyModeTs: 0, featureControls: 0}, end);
};
BizIdentityInfo._readField = function (tag, obj, pbf) {
    if (tag === 1) obj.vlevel = pbf.readVarint();
    else if (tag === 2) obj.vnameCert = VerifiedNameCertificate.read(pbf, pbf.readVarint() + pbf.pos);
    else if (tag === 3) obj.signed = pbf.readBoolean();
    else if (tag === 4) obj.revoked = pbf.readBoolean();
    else if (tag === 5) obj.hostStorage = pbf.readVarint();
    else if (tag === 6) obj.actualActors = pbf.readVarint();
    else if (tag === 7) obj.privacyModeTs = pbf.readVarint();
    else if (tag === 8) obj.featureControls = pbf.readVarint();
};
BizIdentityInfo.write = function (obj, pbf) {
    if (obj.vlevel) pbf.writeVarintField(1, obj.vlevel);
    if (obj.vnameCert) pbf.writeMessage(2, VerifiedNameCertificate.write, obj.vnameCert);
    if (obj.signed) pbf.writeBooleanField(3, obj.signed);
    if (obj.revoked) pbf.writeBooleanField(4, obj.revoked);
    if (obj.hostStorage) pbf.writeVarintField(5, obj.hostStorage);
    if (obj.actualActors) pbf.writeVarintField(6, obj.actualActors);
    if (obj.privacyModeTs) pbf.writeVarintField(7, obj.privacyModeTs);
    if (obj.featureControls) pbf.writeVarintField(8, obj.featureControls);
};

BizIdentityInfo.ActualActorsType = {
    "SELF": {
        "value": 0,
        "options": {}
    },
    "BSP": {
        "value": 1,
        "options": {}
    }
};

BizIdentityInfo.HostStorageType = {
    "ON_PREMISE": {
        "value": 0,
        "options": {}
    },
    "FACEBOOK": {
        "value": 1,
        "options": {}
    }
};

BizIdentityInfo.VerifiedLevelValue = {
    "UNKNOWN": {
        "value": 0,
        "options": {}
    },
    "LOW": {
        "value": 1,
        "options": {}
    },
    "HIGH": {
        "value": 2,
        "options": {}
    }
};

// CertChain ========================================

var CertChain = self.CertChain = {};

CertChain.read = function (pbf, end) {
    return pbf.readFields(CertChain._readField, {leaf: null, intermediate: null}, end);
};
CertChain._readField = function (tag, obj, pbf) {
    if (tag === 1) obj.leaf = CertChain.NoiseCertificate.read(pbf, pbf.readVarint() + pbf.pos);
    else if (tag === 2) obj.intermediate = CertChain.NoiseCertificate.read(pbf, pbf.readVarint() + pbf.pos);
};
CertChain.write = function (obj, pbf) {
    if (obj.leaf) pbf.writeMessage(1, CertChain.NoiseCertificate.write, obj.leaf);
    if (obj.intermediate) pbf.writeMessage(2, CertChain.NoiseCertificate.write, obj.intermediate);
};

// CertChain.NoiseCertificate ========================================

CertChain.NoiseCertificate = {};

CertChain.NoiseCertificate.read = function (pbf, end) {
    return pbf.readFields(CertChain.NoiseCertificate._readField, {details: null, signature: null}, end);
};
CertChain.NoiseCertificate._readField = function (tag, obj, pbf) {
    if (tag === 1) obj.details = pbf.readBytes();
    else if (tag === 2) obj.signature = pbf.readBytes();
};
CertChain.NoiseCertificate.write = function (obj, pbf) {
    if (obj.details) pbf.writeBytesField(1, obj.details);
    if (obj.signature) pbf.writeBytesField(2, obj.signature);
};

// CertChain.NoiseCertificate.Details ========================================

CertChain.NoiseCertificate.Details = {};

CertChain.NoiseCertificate.Details.read = function (pbf, end) {
    return pbf.readFields(CertChain.NoiseCertificate.Details._readField, {serial: 0, issuerSerial: 0, key: null, notBefore: 0, notAfter: 0}, end);
};
CertChain.NoiseCertificate.Details._readField = function (tag, obj, pbf) {
    if (tag === 1) obj.serial = pbf.readVarint();
    else if (tag === 2) obj.issuerSerial = pbf.readVarint();
    else if (tag === 3) obj.key = pbf.readBytes();
    else if (tag === 4) obj.notBefore = pbf.readVarint();
    else if (tag === 5) obj.notAfter = pbf.readVarint();
};
CertChain.NoiseCertificate.Details.write = function (obj, pbf) {
    if (obj.serial) pbf.writeVarintField(1, obj.serial);
    if (obj.issuerSerial) pbf.writeVarintField(2, obj.issuerSerial);
    if (obj.key) pbf.writeBytesField(3, obj.key);
    if (obj.notBefore) pbf.writeVarintField(4, obj.notBefore);
    if (obj.notAfter) pbf.writeVarintField(5, obj.notAfter);
};

// ChatRowOpaqueData ========================================

var ChatRowOpaqueData = self.ChatRowOpaqueData = {};

ChatRowOpaqueData.read = function (pbf, end) {
    return pbf.readFields(ChatRowOpaqueData._readField, {draftMessage: null}, end);
};
ChatRowOpaqueData._readField = function (tag, obj, pbf) {
    if (tag === 1) obj.draftMessage = ChatRowOpaqueData.DraftMessage.read(pbf, pbf.readVarint() + pbf.pos);
};
ChatRowOpaqueData.write = function (obj, pbf) {
    if (obj.draftMessage) pbf.writeMessage(1, ChatRowOpaqueData.DraftMessage.write, obj.draftMessage);
};

// ChatRowOpaqueData.DraftMessage ========================================

ChatRowOpaqueData.DraftMessage = {};

ChatRowOpaqueData.DraftMessage.read = function (pbf, end) {
    return pbf.readFields(ChatRowOpaqueData.DraftMessage._readField, {text: "", omittedUrl: "", ctwaContextLinkData: null, ctwaContext: null, timestamp: 0}, end);
};
ChatRowOpaqueData.DraftMessage._readField = function (tag, obj, pbf) {
    if (tag === 1) obj.text = pbf.readString();
    else if (tag === 2) obj.omittedUrl = pbf.readString();
    else if (tag === 3) obj.ctwaContextLinkData = ChatRowOpaqueData.DraftMessage.CtwaContextLinkData.read(pbf, pbf.readVarint() + pbf.pos);
    else if (tag === 4) obj.ctwaContext = ChatRowOpaqueData.DraftMessage.CtwaContextData.read(pbf, pbf.readVarint() + pbf.pos);
    else if (tag === 5) obj.timestamp = pbf.readVarint(true);
};
ChatRowOpaqueData.DraftMessage.write = function (obj, pbf) {
    if (obj.text) pbf.writeStringField(1, obj.text);
    if (obj.omittedUrl) pbf.writeStringField(2, obj.omittedUrl);
    if (obj.ctwaContextLinkData) pbf.writeMessage(3, ChatRowOpaqueData.DraftMessage.CtwaContextLinkData.write, obj.ctwaContextLinkData);
    if (obj.ctwaContext) pbf.writeMessage(4, ChatRowOpaqueData.DraftMessage.CtwaContextData.write, obj.ctwaContext);
    if (obj.timestamp) pbf.writeVarintField(5, obj.timestamp);
};

// ChatRowOpaqueData.DraftMessage.CtwaContextData ========================================

ChatRowOpaqueData.DraftMessage.CtwaContextData = {};

ChatRowOpaqueData.DraftMessage.CtwaContextData.read = function (pbf, end) {
    return pbf.readFields(ChatRowOpaqueData.DraftMessage.CtwaContextData._readField, {conversionSource: "", conversionData: null, sourceUrl: "", sourceId: "", sourceType: "", title: "", description: "", thumbnail: "", thumbnailUrl: "", mediaType: 0, mediaUrl: "", isSuspiciousLink: false}, end);
};
ChatRowOpaqueData.DraftMessage.CtwaContextData._readField = function (tag, obj, pbf) {
    if (tag === 1) obj.conversionSource = pbf.readString();
    else if (tag === 2) obj.conversionData = pbf.readBytes();
    else if (tag === 3) obj.sourceUrl = pbf.readString();
    else if (tag === 4) obj.sourceId = pbf.readString();
    else if (tag === 5) obj.sourceType = pbf.readString();
    else if (tag === 6) obj.title = pbf.readString();
    else if (tag === 7) obj.description = pbf.readString();
    else if (tag === 8) obj.thumbnail = pbf.readString();
    else if (tag === 9) obj.thumbnailUrl = pbf.readString();
    else if (tag === 10) obj.mediaType = pbf.readVarint();
    else if (tag === 11) obj.mediaUrl = pbf.readString();
    else if (tag === 12) obj.isSuspiciousLink = pbf.readBoolean();
};
ChatRowOpaqueData.DraftMessage.CtwaContextData.write = function (obj, pbf) {
    if (obj.conversionSource) pbf.writeStringField(1, obj.conversionSource);
    if (obj.conversionData) pbf.writeBytesField(2, obj.conversionData);
    if (obj.sourceUrl) pbf.writeStringField(3, obj.sourceUrl);
    if (obj.sourceId) pbf.writeStringField(4, obj.sourceId);
    if (obj.sourceType) pbf.writeStringField(5, obj.sourceType);
    if (obj.title) pbf.writeStringField(6, obj.title);
    if (obj.description) pbf.writeStringField(7, obj.description);
    if (obj.thumbnail) pbf.writeStringField(8, obj.thumbnail);
    if (obj.thumbnailUrl) pbf.writeStringField(9, obj.thumbnailUrl);
    if (obj.mediaType) pbf.writeVarintField(10, obj.mediaType);
    if (obj.mediaUrl) pbf.writeStringField(11, obj.mediaUrl);
    if (obj.isSuspiciousLink) pbf.writeBooleanField(12, obj.isSuspiciousLink);
};

ChatRowOpaqueData.DraftMessage.CtwaContextData.ContextInfoExternalAdReplyInfoMediaType = {
    "NONE": {
        "value": 0,
        "options": {}
    },
    "IMAGE": {
        "value": 1,
        "options": {}
    },
    "VIDEO": {
        "value": 2,
        "options": {}
    }
};

// ChatRowOpaqueData.DraftMessage.CtwaContextLinkData ========================================

ChatRowOpaqueData.DraftMessage.CtwaContextLinkData = {};

ChatRowOpaqueData.DraftMessage.CtwaContextLinkData.read = function (pbf, end) {
    return pbf.readFields(ChatRowOpaqueData.DraftMessage.CtwaContextLinkData._readField, {context: "", sourceUrl: "", icebreaker: "", phone: ""}, end);
};
ChatRowOpaqueData.DraftMessage.CtwaContextLinkData._readField = function (tag, obj, pbf) {
    if (tag === 1) obj.context = pbf.readString();
    else if (tag === 2) obj.sourceUrl = pbf.readString();
    else if (tag === 3) obj.icebreaker = pbf.readString();
    else if (tag === 4) obj.phone = pbf.readString();
};
ChatRowOpaqueData.DraftMessage.CtwaContextLinkData.write = function (obj, pbf) {
    if (obj.context) pbf.writeStringField(1, obj.context);
    if (obj.sourceUrl) pbf.writeStringField(2, obj.sourceUrl);
    if (obj.icebreaker) pbf.writeStringField(3, obj.icebreaker);
    if (obj.phone) pbf.writeStringField(4, obj.phone);
};

// ClientPayload ========================================

var ClientPayload = self.ClientPayload = {};

ClientPayload.read = function (pbf, end) {
    return pbf.readFields(ClientPayload._readField, {username: 0, passive: false, userAgent: null, webInfo: null, pushName: "", sessionId: 0, shortConnect: false, connectType: 0, connectReason: 0, shards: [], dnsSource: null, connectAttemptCount: 0, device: 0, devicePairingData: null, product: 0, fbCat: null, fbUserAgent: null, oc: false, lc: 0, iosAppExtension: 0, fbAppId: 0, fbDeviceId: null, pull: false, paddingBytes: null, yearClass: 0, memClass: 0, interopData: null}, end);
};
ClientPayload._readField = function (tag, obj, pbf) {
    if (tag === 1) obj.username = pbf.readVarint();
    else if (tag === 3) obj.passive = pbf.readBoolean();
    else if (tag === 5) obj.userAgent = ClientPayload.UserAgent.read(pbf, pbf.readVarint() + pbf.pos);
    else if (tag === 6) obj.webInfo = ClientPayload.WebInfo.read(pbf, pbf.readVarint() + pbf.pos);
    else if (tag === 7) obj.pushName = pbf.readString();
    else if (tag === 9) obj.sessionId = pbf.readSFixed32();
    else if (tag === 10) obj.shortConnect = pbf.readBoolean();
    else if (tag === 12) obj.connectType = pbf.readVarint();
    else if (tag === 13) obj.connectReason = pbf.readVarint();
    else if (tag === 14) pbf.readPackedVarint(obj.shards, true);
    else if (tag === 15) obj.dnsSource = ClientPayload.DNSSource.read(pbf, pbf.readVarint() + pbf.pos);
    else if (tag === 16) obj.connectAttemptCount = pbf.readVarint();
    else if (tag === 18) obj.device = pbf.readVarint();
    else if (tag === 19) obj.devicePairingData = ClientPayload.DevicePairingRegistrationData.read(pbf, pbf.readVarint() + pbf.pos);
    else if (tag === 20) obj.product = pbf.readVarint();
    else if (tag === 21) obj.fbCat = pbf.readBytes();
    else if (tag === 22) obj.fbUserAgent = pbf.readBytes();
    else if (tag === 23) obj.oc = pbf.readBoolean();
    else if (tag === 24) obj.lc = pbf.readVarint(true);
    else if (tag === 30) obj.iosAppExtension = pbf.readVarint();
    else if (tag === 31) obj.fbAppId = pbf.readVarint();
    else if (tag === 32) obj.fbDeviceId = pbf.readBytes();
    else if (tag === 33) obj.pull = pbf.readBoolean();
    else if (tag === 34) obj.paddingBytes = pbf.readBytes();
    else if (tag === 36) obj.yearClass = pbf.readVarint(true);
    else if (tag === 37) obj.memClass = pbf.readVarint(true);
    else if (tag === 38) obj.interopData = ClientPayload.InteropData.read(pbf, pbf.readVarint() + pbf.pos);
};
ClientPayload.write = function (obj, pbf) {
    if (obj.username) pbf.writeVarintField(1, obj.username);
    if (obj.passive) pbf.writeBooleanField(3, obj.passive);
    if (obj.userAgent) pbf.writeMessage(5, ClientPayload.UserAgent.write, obj.userAgent);
    if (obj.webInfo) pbf.writeMessage(6, ClientPayload.WebInfo.write, obj.webInfo);
    if (obj.pushName) pbf.writeStringField(7, obj.pushName);
    if (obj.sessionId) pbf.writeSFixed32Field(9, obj.sessionId);
    if (obj.shortConnect) pbf.writeBooleanField(10, obj.shortConnect);
    if (obj.connectType) pbf.writeVarintField(12, obj.connectType);
    if (obj.connectReason) pbf.writeVarintField(13, obj.connectReason);
    if (obj.shards) for (var i = 0; i < obj.shards.length; i++) pbf.writeVarintField(14, obj.shards[i]);
    if (obj.dnsSource) pbf.writeMessage(15, ClientPayload.DNSSource.write, obj.dnsSource);
    if (obj.connectAttemptCount) pbf.writeVarintField(16, obj.connectAttemptCount);
    if (obj.device) pbf.writeVarintField(18, obj.device);
    if (obj.devicePairingData) pbf.writeMessage(19, ClientPayload.DevicePairingRegistrationData.write, obj.devicePairingData);
    if (obj.product) pbf.writeVarintField(20, obj.product);
    if (obj.fbCat) pbf.writeBytesField(21, obj.fbCat);
    if (obj.fbUserAgent) pbf.writeBytesField(22, obj.fbUserAgent);
    if (obj.oc) pbf.writeBooleanField(23, obj.oc);
    if (obj.lc) pbf.writeVarintField(24, obj.lc);
    if (obj.iosAppExtension) pbf.writeVarintField(30, obj.iosAppExtension);
    if (obj.fbAppId) pbf.writeVarintField(31, obj.fbAppId);
    if (obj.fbDeviceId) pbf.writeBytesField(32, obj.fbDeviceId);
    if (obj.pull) pbf.writeBooleanField(33, obj.pull);
    if (obj.paddingBytes) pbf.writeBytesField(34, obj.paddingBytes);
    if (obj.yearClass) pbf.writeVarintField(36, obj.yearClass);
    if (obj.memClass) pbf.writeVarintField(37, obj.memClass);
    if (obj.interopData) pbf.writeMessage(38, ClientPayload.InteropData.write, obj.interopData);
};

ClientPayload.ConnectReason = {
    "PUSH": {
        "value": 0,
        "options": {}
    },
    "USER_ACTIVATED": {
        "value": 1,
        "options": {}
    },
    "SCHEDULED": {
        "value": 2,
        "options": {}
    },
    "ERROR_RECONNECT": {
        "value": 3,
        "options": {}
    },
    "NETWORK_SWITCH": {
        "value": 4,
        "options": {}
    },
    "PING_RECONNECT": {
        "value": 5,
        "options": {}
    },
    "UNKNOWN": {
        "value": 6,
        "options": {}
    }
};

ClientPayload.ConnectType = {
    "CELLULAR_UNKNOWN": {
        "value": 0,
        "options": {}
    },
    "WIFI_UNKNOWN": {
        "value": 1,
        "options": {}
    },
    "CELLULAR_EDGE": {
        "value": 100,
        "options": {}
    },
    "CELLULAR_IDEN": {
        "value": 101,
        "options": {}
    },
    "CELLULAR_UMTS": {
        "value": 102,
        "options": {}
    },
    "CELLULAR_EVDO": {
        "value": 103,
        "options": {}
    },
    "CELLULAR_GPRS": {
        "value": 104,
        "options": {}
    },
    "CELLULAR_HSDPA": {
        "value": 105,
        "options": {}
    },
    "CELLULAR_HSUPA": {
        "value": 106,
        "options": {}
    },
    "CELLULAR_HSPA": {
        "value": 107,
        "options": {}
    },
    "CELLULAR_CDMA": {
        "value": 108,
        "options": {}
    },
    "CELLULAR_1XRTT": {
        "value": 109,
        "options": {}
    },
    "CELLULAR_EHRPD": {
        "value": 110,
        "options": {}
    },
    "CELLULAR_LTE": {
        "value": 111,
        "options": {}
    },
    "CELLULAR_HSPAP": {
        "value": 112,
        "options": {}
    }
};

ClientPayload.IOSAppExtension = {
    "SHARE_EXTENSION": {
        "value": 0,
        "options": {}
    },
    "SERVICE_EXTENSION": {
        "value": 1,
        "options": {}
    },
    "INTENTS_EXTENSION": {
        "value": 2,
        "options": {}
    }
};

ClientPayload.Product = {
    "WHATSAPP": {
        "value": 0,
        "options": {}
    },
    "MESSENGER": {
        "value": 1,
        "options": {}
    },
    "INTEROP": {
        "value": 2,
        "options": {}
    }
};

// ClientPayload.DNSSource ========================================

ClientPayload.DNSSource = {};

ClientPayload.DNSSource.read = function (pbf, end) {
    return pbf.readFields(ClientPayload.DNSSource._readField, {dnsMethod: 0, appCached: false}, end);
};
ClientPayload.DNSSource._readField = function (tag, obj, pbf) {
    if (tag === 15) obj.dnsMethod = pbf.readVarint();
    else if (tag === 16) obj.appCached = pbf.readBoolean();
};
ClientPayload.DNSSource.write = function (obj, pbf) {
    if (obj.dnsMethod) pbf.writeVarintField(15, obj.dnsMethod);
    if (obj.appCached) pbf.writeBooleanField(16, obj.appCached);
};

ClientPayload.DNSSource.DNSResolutionMethod = {
    "SYSTEM": {
        "value": 0,
        "options": {}
    },
    "GOOGLE": {
        "value": 1,
        "options": {}
    },
    "HARDCODED": {
        "value": 2,
        "options": {}
    },
    "OVERRIDE": {
        "value": 3,
        "options": {}
    },
    "FALLBACK": {
        "value": 4,
        "options": {}
    }
};

// ClientPayload.DevicePairingRegistrationData ========================================

ClientPayload.DevicePairingRegistrationData = {};

ClientPayload.DevicePairingRegistrationData.read = function (pbf, end) {
    return pbf.readFields(ClientPayload.DevicePairingRegistrationData._readField, {eRegid: null, eKeytype: null, eIdent: null, eSkeyId: null, eSkeyVal: null, eSkeySig: null, buildHash: null, deviceProps: null}, end);
};
ClientPayload.DevicePairingRegistrationData._readField = function (tag, obj, pbf) {
    if (tag === 1) obj.eRegid = pbf.readBytes();
    else if (tag === 2) obj.eKeytype = pbf.readBytes();
    else if (tag === 3) obj.eIdent = pbf.readBytes();
    else if (tag === 4) obj.eSkeyId = pbf.readBytes();
    else if (tag === 5) obj.eSkeyVal = pbf.readBytes();
    else if (tag === 6) obj.eSkeySig = pbf.readBytes();
    else if (tag === 7) obj.buildHash = pbf.readBytes();
    else if (tag === 8) obj.deviceProps = pbf.readBytes();
};
ClientPayload.DevicePairingRegistrationData.write = function (obj, pbf) {
    if (obj.eRegid) pbf.writeBytesField(1, obj.eRegid);
    if (obj.eKeytype) pbf.writeBytesField(2, obj.eKeytype);
    if (obj.eIdent) pbf.writeBytesField(3, obj.eIdent);
    if (obj.eSkeyId) pbf.writeBytesField(4, obj.eSkeyId);
    if (obj.eSkeyVal) pbf.writeBytesField(5, obj.eSkeyVal);
    if (obj.eSkeySig) pbf.writeBytesField(6, obj.eSkeySig);
    if (obj.buildHash) pbf.writeBytesField(7, obj.buildHash);
    if (obj.deviceProps) pbf.writeBytesField(8, obj.deviceProps);
};

// ClientPayload.InteropData ========================================

ClientPayload.InteropData = {};

ClientPayload.InteropData.read = function (pbf, end) {
    return pbf.readFields(ClientPayload.InteropData._readField, {accountId: 0, integratorId: 0, token: null}, end);
};
ClientPayload.InteropData._readField = function (tag, obj, pbf) {
    if (tag === 1) obj.accountId = pbf.readVarint();
    else if (tag === 2) obj.integratorId = pbf.readVarint();
    else if (tag === 3) obj.token = pbf.readBytes();
};
ClientPayload.InteropData.write = function (obj, pbf) {
    if (obj.accountId) pbf.writeVarintField(1, obj.accountId);
    if (obj.integratorId) pbf.writeVarintField(2, obj.integratorId);
    if (obj.token) pbf.writeBytesField(3, obj.token);
};

// ClientPayload.UserAgent ========================================

ClientPayload.UserAgent = {};

ClientPayload.UserAgent.read = function (pbf, end) {
    return pbf.readFields(ClientPayload.UserAgent._readField, {platform: 0, appVersion: null, mcc: "", mnc: "", osVersion: "", manufacturer: "", device: "", osBuildNumber: "", phoneId: "", releaseChannel: 0, localeLanguageIso6391: "", localeCountryIso31661Alpha2: "", deviceBoard: "", deviceExpId: ""}, end);
};
ClientPayload.UserAgent._readField = function (tag, obj, pbf) {
    if (tag === 1) obj.platform = pbf.readVarint();
    else if (tag === 2) obj.appVersion = ClientPayload.UserAgent.AppVersion.read(pbf, pbf.readVarint() + pbf.pos);
    else if (tag === 3) obj.mcc = pbf.readString();
    else if (tag === 4) obj.mnc = pbf.readString();
    else if (tag === 5) obj.osVersion = pbf.readString();
    else if (tag === 6) obj.manufacturer = pbf.readString();
    else if (tag === 7) obj.device = pbf.readString();
    else if (tag === 8) obj.osBuildNumber = pbf.readString();
    else if (tag === 9) obj.phoneId = pbf.readString();
    else if (tag === 10) obj.releaseChannel = pbf.readVarint();
    else if (tag === 11) obj.localeLanguageIso6391 = pbf.readString();
    else if (tag === 12) obj.localeCountryIso31661Alpha2 = pbf.readString();
    else if (tag === 13) obj.deviceBoard = pbf.readString();
    else if (tag === 14) obj.deviceExpId = pbf.readString();
};
ClientPayload.UserAgent.write = function (obj, pbf) {
    if (obj.platform) pbf.writeVarintField(1, obj.platform);
    if (obj.appVersion) pbf.writeMessage(2, ClientPayload.UserAgent.AppVersion.write, obj.appVersion);
    if (obj.mcc) pbf.writeStringField(3, obj.mcc);
    if (obj.mnc) pbf.writeStringField(4, obj.mnc);
    if (obj.osVersion) pbf.writeStringField(5, obj.osVersion);
    if (obj.manufacturer) pbf.writeStringField(6, obj.manufacturer);
    if (obj.device) pbf.writeStringField(7, obj.device);
    if (obj.osBuildNumber) pbf.writeStringField(8, obj.osBuildNumber);
    if (obj.phoneId) pbf.writeStringField(9, obj.phoneId);
    if (obj.releaseChannel) pbf.writeVarintField(10, obj.releaseChannel);
    if (obj.localeLanguageIso6391) pbf.writeStringField(11, obj.localeLanguageIso6391);
    if (obj.localeCountryIso31661Alpha2) pbf.writeStringField(12, obj.localeCountryIso31661Alpha2);
    if (obj.deviceBoard) pbf.writeStringField(13, obj.deviceBoard);
    if (obj.deviceExpId) pbf.writeStringField(14, obj.deviceExpId);
};

ClientPayload.UserAgent.Platform = {
    "ANDROID": {
        "value": 0,
        "options": {}
    },
    "IOS": {
        "value": 1,
        "options": {}
    },
    "WINDOWS_PHONE": {
        "value": 2,
        "options": {}
    },
    "BLACKBERRY": {
        "value": 3,
        "options": {}
    },
    "BLACKBERRYX": {
        "value": 4,
        "options": {}
    },
    "S40": {
        "value": 5,
        "options": {}
    },
    "S60": {
        "value": 6,
        "options": {}
    },
    "PYTHON_CLIENT": {
        "value": 7,
        "options": {}
    },
    "TIZEN": {
        "value": 8,
        "options": {}
    },
    "ENTERPRISE": {
        "value": 9,
        "options": {}
    },
    "SMB_ANDROID": {
        "value": 10,
        "options": {}
    },
    "KAIOS": {
        "value": 11,
        "options": {}
    },
    "SMB_IOS": {
        "value": 12,
        "options": {}
    },
    "WINDOWS": {
        "value": 13,
        "options": {}
    },
    "WEB": {
        "value": 14,
        "options": {}
    },
    "PORTAL": {
        "value": 15,
        "options": {}
    },
    "GREEN_ANDROID": {
        "value": 16,
        "options": {}
    },
    "GREEN_IPHONE": {
        "value": 17,
        "options": {}
    },
    "BLUE_ANDROID": {
        "value": 18,
        "options": {}
    },
    "BLUE_IPHONE": {
        "value": 19,
        "options": {}
    },
    "FBLITE_ANDROID": {
        "value": 20,
        "options": {}
    },
    "MLITE_ANDROID": {
        "value": 21,
        "options": {}
    },
    "IGLITE_ANDROID": {
        "value": 22,
        "options": {}
    },
    "PAGE": {
        "value": 23,
        "options": {}
    },
    "MACOS": {
        "value": 24,
        "options": {}
    },
    "OCULUS_MSG": {
        "value": 25,
        "options": {}
    },
    "OCULUS_CALL": {
        "value": 26,
        "options": {}
    },
    "MILAN": {
        "value": 27,
        "options": {}
    },
    "CAPI": {
        "value": 28,
        "options": {}
    },
    "WEAROS": {
        "value": 29,
        "options": {}
    },
    "ARDEVICE": {
        "value": 30,
        "options": {}
    },
    "VRDEVICE": {
        "value": 31,
        "options": {}
    },
    "BLUE_WEB": {
        "value": 32,
        "options": {}
    },
    "IPAD": {
        "value": 33,
        "options": {}
    }
};

ClientPayload.UserAgent.ReleaseChannel = {
    "RELEASE": {
        "value": 0,
        "options": {}
    },
    "BETA": {
        "value": 1,
        "options": {}
    },
    "ALPHA": {
        "value": 2,
        "options": {}
    },
    "DEBUG": {
        "value": 3,
        "options": {}
    }
};

// ClientPayload.UserAgent.AppVersion ========================================

ClientPayload.UserAgent.AppVersion = {};

ClientPayload.UserAgent.AppVersion.read = function (pbf, end) {
    return pbf.readFields(ClientPayload.UserAgent.AppVersion._readField, {primary: 0, secondary: 0, tertiary: 0, quaternary: 0, quinary: 0}, end);
};
ClientPayload.UserAgent.AppVersion._readField = function (tag, obj, pbf) {
    if (tag === 1) obj.primary = pbf.readVarint();
    else if (tag === 2) obj.secondary = pbf.readVarint();
    else if (tag === 3) obj.tertiary = pbf.readVarint();
    else if (tag === 4) obj.quaternary = pbf.readVarint();
    else if (tag === 5) obj.quinary = pbf.readVarint();
};
ClientPayload.UserAgent.AppVersion.write = function (obj, pbf) {
    if (obj.primary) pbf.writeVarintField(1, obj.primary);
    if (obj.secondary) pbf.writeVarintField(2, obj.secondary);
    if (obj.tertiary) pbf.writeVarintField(3, obj.tertiary);
    if (obj.quaternary) pbf.writeVarintField(4, obj.quaternary);
    if (obj.quinary) pbf.writeVarintField(5, obj.quinary);
};

// ClientPayload.WebInfo ========================================

ClientPayload.WebInfo = {};

ClientPayload.WebInfo.read = function (pbf, end) {
    return pbf.readFields(ClientPayload.WebInfo._readField, {refToken: "", version: "", webdPayload: null, webSubPlatform: 0}, end);
};
ClientPayload.WebInfo._readField = function (tag, obj, pbf) {
    if (tag === 1) obj.refToken = pbf.readString();
    else if (tag === 2) obj.version = pbf.readString();
    else if (tag === 3) obj.webdPayload = ClientPayload.WebInfo.WebdPayload.read(pbf, pbf.readVarint() + pbf.pos);
    else if (tag === 4) obj.webSubPlatform = pbf.readVarint();
};
ClientPayload.WebInfo.write = function (obj, pbf) {
    if (obj.refToken) pbf.writeStringField(1, obj.refToken);
    if (obj.version) pbf.writeStringField(2, obj.version);
    if (obj.webdPayload) pbf.writeMessage(3, ClientPayload.WebInfo.WebdPayload.write, obj.webdPayload);
    if (obj.webSubPlatform) pbf.writeVarintField(4, obj.webSubPlatform);
};

ClientPayload.WebInfo.WebSubPlatform = {
    "WEB_BROWSER": {
        "value": 0,
        "options": {}
    },
    "APP_STORE": {
        "value": 1,
        "options": {}
    },
    "WIN_STORE": {
        "value": 2,
        "options": {}
    },
    "DARWIN": {
        "value": 3,
        "options": {}
    },
    "WIN32": {
        "value": 4,
        "options": {}
    }
};

// ClientPayload.WebInfo.WebdPayload ========================================

ClientPayload.WebInfo.WebdPayload = {};

ClientPayload.WebInfo.WebdPayload.read = function (pbf, end) {
    return pbf.readFields(ClientPayload.WebInfo.WebdPayload._readField, {usesParticipantInKey: false, supportsStarredMessages: false, supportsDocumentMessages: false, supportsUrlMessages: false, supportsMediaRetry: false, supportsE2EImage: false, supportsE2EVideo: false, supportsE2EAudio: false, supportsE2EDocument: false, documentTypes: "", features: null}, end);
};
ClientPayload.WebInfo.WebdPayload._readField = function (tag, obj, pbf) {
    if (tag === 1) obj.usesParticipantInKey = pbf.readBoolean();
    else if (tag === 2) obj.supportsStarredMessages = pbf.readBoolean();
    else if (tag === 3) obj.supportsDocumentMessages = pbf.readBoolean();
    else if (tag === 4) obj.supportsUrlMessages = pbf.readBoolean();
    else if (tag === 5) obj.supportsMediaRetry = pbf.readBoolean();
    else if (tag === 6) obj.supportsE2EImage = pbf.readBoolean();
    else if (tag === 7) obj.supportsE2EVideo = pbf.readBoolean();
    else if (tag === 8) obj.supportsE2EAudio = pbf.readBoolean();
    else if (tag === 9) obj.supportsE2EDocument = pbf.readBoolean();
    else if (tag === 10) obj.documentTypes = pbf.readString();
    else if (tag === 11) obj.features = pbf.readBytes();
};
ClientPayload.WebInfo.WebdPayload.write = function (obj, pbf) {
    if (obj.usesParticipantInKey) pbf.writeBooleanField(1, obj.usesParticipantInKey);
    if (obj.supportsStarredMessages) pbf.writeBooleanField(2, obj.supportsStarredMessages);
    if (obj.supportsDocumentMessages) pbf.writeBooleanField(3, obj.supportsDocumentMessages);
    if (obj.supportsUrlMessages) pbf.writeBooleanField(4, obj.supportsUrlMessages);
    if (obj.supportsMediaRetry) pbf.writeBooleanField(5, obj.supportsMediaRetry);
    if (obj.supportsE2EImage) pbf.writeBooleanField(6, obj.supportsE2EImage);
    if (obj.supportsE2EVideo) pbf.writeBooleanField(7, obj.supportsE2EVideo);
    if (obj.supportsE2EAudio) pbf.writeBooleanField(8, obj.supportsE2EAudio);
    if (obj.supportsE2EDocument) pbf.writeBooleanField(9, obj.supportsE2EDocument);
    if (obj.documentTypes) pbf.writeStringField(10, obj.documentTypes);
    if (obj.features) pbf.writeBytesField(11, obj.features);
};

// ContextInfo ========================================

var ContextInfo = self.ContextInfo = {};

ContextInfo.read = function (pbf, end) {
    return pbf.readFields(ContextInfo._readField, {stanzaId: "", participant: "", quotedMessage: null, remoteJid: "", mentionedJid: [], conversionSource: "", conversionData: null, conversionDelaySeconds: 0, forwardingScore: 0, isForwarded: false, quotedAd: null, placeholderKey: null, expiration: 0, ephemeralSettingTimestamp: 0, ephemeralSharedSecret: null, externalAdReply: null, entryPointConversionSource: "", entryPointConversionApp: "", entryPointConversionDelaySeconds: 0, disappearingMode: null, actionLink: null, groupSubject: "", parentGroupJid: "", trustBannerType: "", trustBannerAction: 0, isSampled: false, groupMentions: [], utm: null}, end);
};
ContextInfo._readField = function (tag, obj, pbf) {
    if (tag === 1) obj.stanzaId = pbf.readString();
    else if (tag === 2) obj.participant = pbf.readString();
    else if (tag === 3) obj.quotedMessage = Message.read(pbf, pbf.readVarint() + pbf.pos);
    else if (tag === 4) obj.remoteJid = pbf.readString();
    else if (tag === 15) obj.mentionedJid.push(pbf.readString());
    else if (tag === 18) obj.conversionSource = pbf.readString();
    else if (tag === 19) obj.conversionData = pbf.readBytes();
    else if (tag === 20) obj.conversionDelaySeconds = pbf.readVarint();
    else if (tag === 21) obj.forwardingScore = pbf.readVarint();
    else if (tag === 22) obj.isForwarded = pbf.readBoolean();
    else if (tag === 23) obj.quotedAd = ContextInfo.AdReplyInfo.read(pbf, pbf.readVarint() + pbf.pos);
    else if (tag === 24) obj.placeholderKey = MessageKey.read(pbf, pbf.readVarint() + pbf.pos);
    else if (tag === 25) obj.expiration = pbf.readVarint();
    else if (tag === 26) obj.ephemeralSettingTimestamp = pbf.readVarint(true);
    else if (tag === 27) obj.ephemeralSharedSecret = pbf.readBytes();
    else if (tag === 28) obj.externalAdReply = ContextInfo.ExternalAdReplyInfo.read(pbf, pbf.readVarint() + pbf.pos);
    else if (tag === 29) obj.entryPointConversionSource = pbf.readString();
    else if (tag === 30) obj.entryPointConversionApp = pbf.readString();
    else if (tag === 31) obj.entryPointConversionDelaySeconds = pbf.readVarint();
    else if (tag === 32) obj.disappearingMode = DisappearingMode.read(pbf, pbf.readVarint() + pbf.pos);
    else if (tag === 33) obj.actionLink = ActionLink.read(pbf, pbf.readVarint() + pbf.pos);
    else if (tag === 34) obj.groupSubject = pbf.readString();
    else if (tag === 35) obj.parentGroupJid = pbf.readString();
    else if (tag === 37) obj.trustBannerType = pbf.readString();
    else if (tag === 38) obj.trustBannerAction = pbf.readVarint();
    else if (tag === 39) obj.isSampled = pbf.readBoolean();
    else if (tag === 40) obj.groupMentions.push(GroupMention.read(pbf, pbf.readVarint() + pbf.pos));
    else if (tag === 41) obj.utm = ContextInfo.UTMInfo.read(pbf, pbf.readVarint() + pbf.pos);
};
ContextInfo.write = function (obj, pbf) {
    if (obj.stanzaId) pbf.writeStringField(1, obj.stanzaId);
    if (obj.participant) pbf.writeStringField(2, obj.participant);
    if (obj.quotedMessage) pbf.writeMessage(3, Message.write, obj.quotedMessage);
    if (obj.remoteJid) pbf.writeStringField(4, obj.remoteJid);
    if (obj.mentionedJid) for (var i = 0; i < obj.mentionedJid.length; i++) pbf.writeStringField(15, obj.mentionedJid[i]);
    if (obj.conversionSource) pbf.writeStringField(18, obj.conversionSource);
    if (obj.conversionData) pbf.writeBytesField(19, obj.conversionData);
    if (obj.conversionDelaySeconds) pbf.writeVarintField(20, obj.conversionDelaySeconds);
    if (obj.forwardingScore) pbf.writeVarintField(21, obj.forwardingScore);
    if (obj.isForwarded) pbf.writeBooleanField(22, obj.isForwarded);
    if (obj.quotedAd) pbf.writeMessage(23, ContextInfo.AdReplyInfo.write, obj.quotedAd);
    if (obj.placeholderKey) pbf.writeMessage(24, MessageKey.write, obj.placeholderKey);
    if (obj.expiration) pbf.writeVarintField(25, obj.expiration);
    if (obj.ephemeralSettingTimestamp) pbf.writeVarintField(26, obj.ephemeralSettingTimestamp);
    if (obj.ephemeralSharedSecret) pbf.writeBytesField(27, obj.ephemeralSharedSecret);
    if (obj.externalAdReply) pbf.writeMessage(28, ContextInfo.ExternalAdReplyInfo.write, obj.externalAdReply);
    if (obj.entryPointConversionSource) pbf.writeStringField(29, obj.entryPointConversionSource);
    if (obj.entryPointConversionApp) pbf.writeStringField(30, obj.entryPointConversionApp);
    if (obj.entryPointConversionDelaySeconds) pbf.writeVarintField(31, obj.entryPointConversionDelaySeconds);
    if (obj.disappearingMode) pbf.writeMessage(32, DisappearingMode.write, obj.disappearingMode);
    if (obj.actionLink) pbf.writeMessage(33, ActionLink.write, obj.actionLink);
    if (obj.groupSubject) pbf.writeStringField(34, obj.groupSubject);
    if (obj.parentGroupJid) pbf.writeStringField(35, obj.parentGroupJid);
    if (obj.trustBannerType) pbf.writeStringField(37, obj.trustBannerType);
    if (obj.trustBannerAction) pbf.writeVarintField(38, obj.trustBannerAction);
    if (obj.isSampled) pbf.writeBooleanField(39, obj.isSampled);
    if (obj.groupMentions) for (i = 0; i < obj.groupMentions.length; i++) pbf.writeMessage(40, GroupMention.write, obj.groupMentions[i]);
    if (obj.utm) pbf.writeMessage(41, ContextInfo.UTMInfo.write, obj.utm);
};

// ContextInfo.AdReplyInfo ========================================

ContextInfo.AdReplyInfo = {};

ContextInfo.AdReplyInfo.read = function (pbf, end) {
    return pbf.readFields(ContextInfo.AdReplyInfo._readField, {advertiserName: "", mediaType: 0, jpegThumbnail: null, caption: ""}, end);
};
ContextInfo.AdReplyInfo._readField = function (tag, obj, pbf) {
    if (tag === 1) obj.advertiserName = pbf.readString();
    else if (tag === 2) obj.mediaType = pbf.readVarint();
    else if (tag === 16) obj.jpegThumbnail = pbf.readBytes();
    else if (tag === 17) obj.caption = pbf.readString();
};
ContextInfo.AdReplyInfo.write = function (obj, pbf) {
    if (obj.advertiserName) pbf.writeStringField(1, obj.advertiserName);
    if (obj.mediaType) pbf.writeVarintField(2, obj.mediaType);
    if (obj.jpegThumbnail) pbf.writeBytesField(16, obj.jpegThumbnail);
    if (obj.caption) pbf.writeStringField(17, obj.caption);
};

ContextInfo.AdReplyInfo.MediaType = {
    "NONE": {
        "value": 0,
        "options": {}
    },
    "IMAGE": {
        "value": 1,
        "options": {}
    },
    "VIDEO": {
        "value": 2,
        "options": {}
    }
};

// ContextInfo.ExternalAdReplyInfo ========================================

ContextInfo.ExternalAdReplyInfo = {};

ContextInfo.ExternalAdReplyInfo.read = function (pbf, end) {
    return pbf.readFields(ContextInfo.ExternalAdReplyInfo._readField, {title: "", body: "", mediaType: 0, thumbnailUrl: "", mediaUrl: "", thumbnail: null, sourceType: "", sourceId: "", sourceUrl: "", containsAutoReply: false, renderLargerThumbnail: false, showAdAttribution: false, ctwaClid: "", ref: ""}, end);
};
ContextInfo.ExternalAdReplyInfo._readField = function (tag, obj, pbf) {
    if (tag === 1) obj.title = pbf.readString();
    else if (tag === 2) obj.body = pbf.readString();
    else if (tag === 3) obj.mediaType = pbf.readVarint();
    else if (tag === 4) obj.thumbnailUrl = pbf.readString();
    else if (tag === 5) obj.mediaUrl = pbf.readString();
    else if (tag === 6) obj.thumbnail = pbf.readBytes();
    else if (tag === 7) obj.sourceType = pbf.readString();
    else if (tag === 8) obj.sourceId = pbf.readString();
    else if (tag === 9) obj.sourceUrl = pbf.readString();
    else if (tag === 10) obj.containsAutoReply = pbf.readBoolean();
    else if (tag === 11) obj.renderLargerThumbnail = pbf.readBoolean();
    else if (tag === 12) obj.showAdAttribution = pbf.readBoolean();
    else if (tag === 13) obj.ctwaClid = pbf.readString();
    else if (tag === 14) obj.ref = pbf.readString();
};
ContextInfo.ExternalAdReplyInfo.write = function (obj, pbf) {
    if (obj.title) pbf.writeStringField(1, obj.title);
    if (obj.body) pbf.writeStringField(2, obj.body);
    if (obj.mediaType) pbf.writeVarintField(3, obj.mediaType);
    if (obj.thumbnailUrl) pbf.writeStringField(4, obj.thumbnailUrl);
    if (obj.mediaUrl) pbf.writeStringField(5, obj.mediaUrl);
    if (obj.thumbnail) pbf.writeBytesField(6, obj.thumbnail);
    if (obj.sourceType) pbf.writeStringField(7, obj.sourceType);
    if (obj.sourceId) pbf.writeStringField(8, obj.sourceId);
    if (obj.sourceUrl) pbf.writeStringField(9, obj.sourceUrl);
    if (obj.containsAutoReply) pbf.writeBooleanField(10, obj.containsAutoReply);
    if (obj.renderLargerThumbnail) pbf.writeBooleanField(11, obj.renderLargerThumbnail);
    if (obj.showAdAttribution) pbf.writeBooleanField(12, obj.showAdAttribution);
    if (obj.ctwaClid) pbf.writeStringField(13, obj.ctwaClid);
    if (obj.ref) pbf.writeStringField(14, obj.ref);
};

ContextInfo.ExternalAdReplyInfo.MediaType = {
    "NONE": {
        "value": 0,
        "options": {}
    },
    "IMAGE": {
        "value": 1,
        "options": {}
    },
    "VIDEO": {
        "value": 2,
        "options": {}
    }
};

// ContextInfo.UTMInfo ========================================

ContextInfo.UTMInfo = {};

ContextInfo.UTMInfo.read = function (pbf, end) {
    return pbf.readFields(ContextInfo.UTMInfo._readField, {utmSource: "", utmCampaign: ""}, end);
};
ContextInfo.UTMInfo._readField = function (tag, obj, pbf) {
    if (tag === 1) obj.utmSource = pbf.readString();
    else if (tag === 2) obj.utmCampaign = pbf.readString();
};
ContextInfo.UTMInfo.write = function (obj, pbf) {
    if (obj.utmSource) pbf.writeStringField(1, obj.utmSource);
    if (obj.utmCampaign) pbf.writeStringField(2, obj.utmCampaign);
};

// Conversation ========================================

var Conversation = self.Conversation = {};

Conversation.read = function (pbf, end) {
    return pbf.readFields(Conversation._readField, {id: "", messages: [], newJid: "", oldJid: "", lastMsgTimestamp: 0, unreadCount: 0, readOnly: false, endOfHistoryTransfer: false, ephemeralExpiration: 0, ephemeralSettingTimestamp: 0, endOfHistoryTransferType: 0, conversationTimestamp: 0, name: "", pHash: "", notSpam: false, archived: false, disappearingMode: null, unreadMentionCount: 0, markedAsUnread: false, participant: [], tcToken: null, tcTokenTimestamp: 0, contactPrimaryIdentityKey: null, pinned: 0, muteEndTime: 0, wallpaper: null, mediaVisibility: 0, tcTokenSenderTimestamp: 0, suspended: false, terminated: false, createdAt: 0, createdBy: "", description: "", support: false, isParentGroup: false, parentGroupId: "", isDefaultSubgroup: false, displayName: "", pnJid: "", shareOwnPn: false, pnhDuplicateLidThread: false, lidJid: ""}, end);
};
Conversation._readField = function (tag, obj, pbf) {
    if (tag === 1) obj.id = pbf.readString();
    else if (tag === 2) obj.messages.push(HistorySyncMsg.read(pbf, pbf.readVarint() + pbf.pos));
    else if (tag === 3) obj.newJid = pbf.readString();
    else if (tag === 4) obj.oldJid = pbf.readString();
    else if (tag === 5) obj.lastMsgTimestamp = pbf.readVarint();
    else if (tag === 6) obj.unreadCount = pbf.readVarint();
    else if (tag === 7) obj.readOnly = pbf.readBoolean();
    else if (tag === 8) obj.endOfHistoryTransfer = pbf.readBoolean();
    else if (tag === 9) obj.ephemeralExpiration = pbf.readVarint();
    else if (tag === 10) obj.ephemeralSettingTimestamp = pbf.readVarint(true);
    else if (tag === 11) obj.endOfHistoryTransferType = pbf.readVarint();
    else if (tag === 12) obj.conversationTimestamp = pbf.readVarint();
    else if (tag === 13) obj.name = pbf.readString();
    else if (tag === 14) obj.pHash = pbf.readString();
    else if (tag === 15) obj.notSpam = pbf.readBoolean();
    else if (tag === 16) obj.archived = pbf.readBoolean();
    else if (tag === 17) obj.disappearingMode = DisappearingMode.read(pbf, pbf.readVarint() + pbf.pos);
    else if (tag === 18) obj.unreadMentionCount = pbf.readVarint();
    else if (tag === 19) obj.markedAsUnread = pbf.readBoolean();
    else if (tag === 20) obj.participant.push(GroupParticipant.read(pbf, pbf.readVarint() + pbf.pos));
    else if (tag === 21) obj.tcToken = pbf.readBytes();
    else if (tag === 22) obj.tcTokenTimestamp = pbf.readVarint();
    else if (tag === 23) obj.contactPrimaryIdentityKey = pbf.readBytes();
    else if (tag === 24) obj.pinned = pbf.readVarint();
    else if (tag === 25) obj.muteEndTime = pbf.readVarint();
    else if (tag === 26) obj.wallpaper = WallpaperSettings.read(pbf, pbf.readVarint() + pbf.pos);
    else if (tag === 27) obj.mediaVisibility = pbf.readVarint();
    else if (tag === 28) obj.tcTokenSenderTimestamp = pbf.readVarint();
    else if (tag === 29) obj.suspended = pbf.readBoolean();
    else if (tag === 30) obj.terminated = pbf.readBoolean();
    else if (tag === 31) obj.createdAt = pbf.readVarint();
    else if (tag === 32) obj.createdBy = pbf.readString();
    else if (tag === 33) obj.description = pbf.readString();
    else if (tag === 34) obj.support = pbf.readBoolean();
    else if (tag === 35) obj.isParentGroup = pbf.readBoolean();
    else if (tag === 37) obj.parentGroupId = pbf.readString();
    else if (tag === 36) obj.isDefaultSubgroup = pbf.readBoolean();
    else if (tag === 38) obj.displayName = pbf.readString();
    else if (tag === 39) obj.pnJid = pbf.readString();
    else if (tag === 40) obj.shareOwnPn = pbf.readBoolean();
    else if (tag === 41) obj.pnhDuplicateLidThread = pbf.readBoolean();
    else if (tag === 42) obj.lidJid = pbf.readString();
};
Conversation.write = function (obj, pbf) {
    if (obj.id) pbf.writeStringField(1, obj.id);
    if (obj.messages) for (var i = 0; i < obj.messages.length; i++) pbf.writeMessage(2, HistorySyncMsg.write, obj.messages[i]);
    if (obj.newJid) pbf.writeStringField(3, obj.newJid);
    if (obj.oldJid) pbf.writeStringField(4, obj.oldJid);
    if (obj.lastMsgTimestamp) pbf.writeVarintField(5, obj.lastMsgTimestamp);
    if (obj.unreadCount) pbf.writeVarintField(6, obj.unreadCount);
    if (obj.readOnly) pbf.writeBooleanField(7, obj.readOnly);
    if (obj.endOfHistoryTransfer) pbf.writeBooleanField(8, obj.endOfHistoryTransfer);
    if (obj.ephemeralExpiration) pbf.writeVarintField(9, obj.ephemeralExpiration);
    if (obj.ephemeralSettingTimestamp) pbf.writeVarintField(10, obj.ephemeralSettingTimestamp);
    if (obj.endOfHistoryTransferType) pbf.writeVarintField(11, obj.endOfHistoryTransferType);
    if (obj.conversationTimestamp) pbf.writeVarintField(12, obj.conversationTimestamp);
    if (obj.name) pbf.writeStringField(13, obj.name);
    if (obj.pHash) pbf.writeStringField(14, obj.pHash);
    if (obj.notSpam) pbf.writeBooleanField(15, obj.notSpam);
    if (obj.archived) pbf.writeBooleanField(16, obj.archived);
    if (obj.disappearingMode) pbf.writeMessage(17, DisappearingMode.write, obj.disappearingMode);
    if (obj.unreadMentionCount) pbf.writeVarintField(18, obj.unreadMentionCount);
    if (obj.markedAsUnread) pbf.writeBooleanField(19, obj.markedAsUnread);
    if (obj.participant) for (i = 0; i < obj.participant.length; i++) pbf.writeMessage(20, GroupParticipant.write, obj.participant[i]);
    if (obj.tcToken) pbf.writeBytesField(21, obj.tcToken);
    if (obj.tcTokenTimestamp) pbf.writeVarintField(22, obj.tcTokenTimestamp);
    if (obj.contactPrimaryIdentityKey) pbf.writeBytesField(23, obj.contactPrimaryIdentityKey);
    if (obj.pinned) pbf.writeVarintField(24, obj.pinned);
    if (obj.muteEndTime) pbf.writeVarintField(25, obj.muteEndTime);
    if (obj.wallpaper) pbf.writeMessage(26, WallpaperSettings.write, obj.wallpaper);
    if (obj.mediaVisibility) pbf.writeVarintField(27, obj.mediaVisibility);
    if (obj.tcTokenSenderTimestamp) pbf.writeVarintField(28, obj.tcTokenSenderTimestamp);
    if (obj.suspended) pbf.writeBooleanField(29, obj.suspended);
    if (obj.terminated) pbf.writeBooleanField(30, obj.terminated);
    if (obj.createdAt) pbf.writeVarintField(31, obj.createdAt);
    if (obj.createdBy) pbf.writeStringField(32, obj.createdBy);
    if (obj.description) pbf.writeStringField(33, obj.description);
    if (obj.support) pbf.writeBooleanField(34, obj.support);
    if (obj.isParentGroup) pbf.writeBooleanField(35, obj.isParentGroup);
    if (obj.parentGroupId) pbf.writeStringField(37, obj.parentGroupId);
    if (obj.isDefaultSubgroup) pbf.writeBooleanField(36, obj.isDefaultSubgroup);
    if (obj.displayName) pbf.writeStringField(38, obj.displayName);
    if (obj.pnJid) pbf.writeStringField(39, obj.pnJid);
    if (obj.shareOwnPn) pbf.writeBooleanField(40, obj.shareOwnPn);
    if (obj.pnhDuplicateLidThread) pbf.writeBooleanField(41, obj.pnhDuplicateLidThread);
    if (obj.lidJid) pbf.writeStringField(42, obj.lidJid);
};

Conversation.EndOfHistoryTransferType = {
    "COMPLETE_BUT_MORE_MESSAGES_REMAIN_ON_PRIMARY": {
        "value": 0,
        "options": {}
    },
    "COMPLETE_AND_NO_MORE_MESSAGE_REMAIN_ON_PRIMARY": {
        "value": 1,
        "options": {}
    },
    "COMPLETE_ON_DEMAND_SYNC_BUT_MORE_MSG_REMAIN_ON_PRIMARY": {
        "value": 2,
        "options": {}
    }
};

// DeviceConsistencyCodeMessage ========================================

var DeviceConsistencyCodeMessage = self.DeviceConsistencyCodeMessage = {};

DeviceConsistencyCodeMessage.read = function (pbf, end) {
    return pbf.readFields(DeviceConsistencyCodeMessage._readField, {generation: 0, signature: null}, end);
};
DeviceConsistencyCodeMessage._readField = function (tag, obj, pbf) {
    if (tag === 1) obj.generation = pbf.readVarint();
    else if (tag === 2) obj.signature = pbf.readBytes();
};
DeviceConsistencyCodeMessage.write = function (obj, pbf) {
    if (obj.generation) pbf.writeVarintField(1, obj.generation);
    if (obj.signature) pbf.writeBytesField(2, obj.signature);
};

// DeviceListMetadata ========================================

var DeviceListMetadata = self.DeviceListMetadata = {};

DeviceListMetadata.read = function (pbf, end) {
    return pbf.readFields(DeviceListMetadata._readField, {senderKeyHash: null, senderTimestamp: 0, senderKeyIndexes: [], recipientKeyHash: null, recipientTimestamp: 0, recipientKeyIndexes: []}, end);
};
DeviceListMetadata._readField = function (tag, obj, pbf) {
    if (tag === 1) obj.senderKeyHash = pbf.readBytes();
    else if (tag === 2) obj.senderTimestamp = pbf.readVarint();
    else if (tag === 3) pbf.readPackedVarint(obj.senderKeyIndexes);
    else if (tag === 8) obj.recipientKeyHash = pbf.readBytes();
    else if (tag === 9) obj.recipientTimestamp = pbf.readVarint();
    else if (tag === 10) pbf.readPackedVarint(obj.recipientKeyIndexes);
};
DeviceListMetadata.write = function (obj, pbf) {
    if (obj.senderKeyHash) pbf.writeBytesField(1, obj.senderKeyHash);
    if (obj.senderTimestamp) pbf.writeVarintField(2, obj.senderTimestamp);
    if (obj.senderKeyIndexes) pbf.writePackedVarint(3, obj.senderKeyIndexes);
    if (obj.recipientKeyHash) pbf.writeBytesField(8, obj.recipientKeyHash);
    if (obj.recipientTimestamp) pbf.writeVarintField(9, obj.recipientTimestamp);
    if (obj.recipientKeyIndexes) pbf.writePackedVarint(10, obj.recipientKeyIndexes);
};

// DeviceProps ========================================

var DeviceProps = self.DeviceProps = {};

DeviceProps.read = function (pbf, end) {
    return pbf.readFields(DeviceProps._readField, {os: "", version: null, platformType: 0, requireFullSync: false, historySyncConfig: null}, end);
};
DeviceProps._readField = function (tag, obj, pbf) {
    if (tag === 1) obj.os = pbf.readString();
    else if (tag === 2) obj.version = DeviceProps.AppVersion.read(pbf, pbf.readVarint() + pbf.pos);
    else if (tag === 3) obj.platformType = pbf.readVarint();
    else if (tag === 4) obj.requireFullSync = pbf.readBoolean();
    else if (tag === 5) obj.historySyncConfig = DeviceProps.HistorySyncConfig.read(pbf, pbf.readVarint() + pbf.pos);
};
DeviceProps.write = function (obj, pbf) {
    if (obj.os) pbf.writeStringField(1, obj.os);
    if (obj.version) pbf.writeMessage(2, DeviceProps.AppVersion.write, obj.version);
    if (obj.platformType) pbf.writeVarintField(3, obj.platformType);
    if (obj.requireFullSync) pbf.writeBooleanField(4, obj.requireFullSync);
    if (obj.historySyncConfig) pbf.writeMessage(5, DeviceProps.HistorySyncConfig.write, obj.historySyncConfig);
};

DeviceProps.PlatformType = {
    "UNKNOWN": {
        "value": 0,
        "options": {}
    },
    "CHROME": {
        "value": 1,
        "options": {}
    },
    "FIREFOX": {
        "value": 2,
        "options": {}
    },
    "IE": {
        "value": 3,
        "options": {}
    },
    "OPERA": {
        "value": 4,
        "options": {}
    },
    "SAFARI": {
        "value": 5,
        "options": {}
    },
    "EDGE": {
        "value": 6,
        "options": {}
    },
    "DESKTOP": {
        "value": 7,
        "options": {}
    },
    "IPAD": {
        "value": 8,
        "options": {}
    },
    "ANDROID_TABLET": {
        "value": 9,
        "options": {}
    },
    "OHANA": {
        "value": 10,
        "options": {}
    },
    "ALOHA": {
        "value": 11,
        "options": {}
    },
    "CATALINA": {
        "value": 12,
        "options": {}
    },
    "TCL_TV": {
        "value": 13,
        "options": {}
    },
    "IOS_PHONE": {
        "value": 14,
        "options": {}
    },
    "IOS_CATALYST": {
        "value": 15,
        "options": {}
    },
    "ANDROID_PHONE": {
        "value": 16,
        "options": {}
    },
    "ANDROID_AMBIGUOUS": {
        "value": 17,
        "options": {}
    },
    "WEAR_OS": {
        "value": 18,
        "options": {}
    },
    "AR_WRIST": {
        "value": 19,
        "options": {}
    },
    "AR_DEVICE": {
        "value": 20,
        "options": {}
    }
};

// DeviceProps.AppVersion ========================================

DeviceProps.AppVersion = {};

DeviceProps.AppVersion.read = function (pbf, end) {
    return pbf.readFields(DeviceProps.AppVersion._readField, {primary: 0, secondary: 0, tertiary: 0, quaternary: 0, quinary: 0}, end);
};
DeviceProps.AppVersion._readField = function (tag, obj, pbf) {
    if (tag === 1) obj.primary = pbf.readVarint();
    else if (tag === 2) obj.secondary = pbf.readVarint();
    else if (tag === 3) obj.tertiary = pbf.readVarint();
    else if (tag === 4) obj.quaternary = pbf.readVarint();
    else if (tag === 5) obj.quinary = pbf.readVarint();
};
DeviceProps.AppVersion.write = function (obj, pbf) {
    if (obj.primary) pbf.writeVarintField(1, obj.primary);
    if (obj.secondary) pbf.writeVarintField(2, obj.secondary);
    if (obj.tertiary) pbf.writeVarintField(3, obj.tertiary);
    if (obj.quaternary) pbf.writeVarintField(4, obj.quaternary);
    if (obj.quinary) pbf.writeVarintField(5, obj.quinary);
};

// DeviceProps.HistorySyncConfig ========================================

DeviceProps.HistorySyncConfig = {};

DeviceProps.HistorySyncConfig.read = function (pbf, end) {
    return pbf.readFields(DeviceProps.HistorySyncConfig._readField, {fullSyncDaysLimit: 0, fullSyncSizeMbLimit: 0, storageQuotaMb: 0, inlineInitialPayloadInE2EeMsg: false, recentSyncDaysLimit: 0}, end);
};
DeviceProps.HistorySyncConfig._readField = function (tag, obj, pbf) {
    if (tag === 1) obj.fullSyncDaysLimit = pbf.readVarint();
    else if (tag === 2) obj.fullSyncSizeMbLimit = pbf.readVarint();
    else if (tag === 3) obj.storageQuotaMb = pbf.readVarint();
    else if (tag === 4) obj.inlineInitialPayloadInE2EeMsg = pbf.readBoolean();
    else if (tag === 5) obj.recentSyncDaysLimit = pbf.readVarint();
};
DeviceProps.HistorySyncConfig.write = function (obj, pbf) {
    if (obj.fullSyncDaysLimit) pbf.writeVarintField(1, obj.fullSyncDaysLimit);
    if (obj.fullSyncSizeMbLimit) pbf.writeVarintField(2, obj.fullSyncSizeMbLimit);
    if (obj.storageQuotaMb) pbf.writeVarintField(3, obj.storageQuotaMb);
    if (obj.inlineInitialPayloadInE2EeMsg) pbf.writeBooleanField(4, obj.inlineInitialPayloadInE2EeMsg);
    if (obj.recentSyncDaysLimit) pbf.writeVarintField(5, obj.recentSyncDaysLimit);
};

// DisappearingMode ========================================

var DisappearingMode = self.DisappearingMode = {};

DisappearingMode.read = function (pbf, end) {
    return pbf.readFields(DisappearingMode._readField, {initiator: 0}, end);
};
DisappearingMode._readField = function (tag, obj, pbf) {
    if (tag === 1) obj.initiator = pbf.readVarint();
};
DisappearingMode.write = function (obj, pbf) {
    if (obj.initiator) pbf.writeVarintField(1, obj.initiator);
};

DisappearingMode.Initiator = {
    "CHANGED_IN_CHAT": {
        "value": 0,
        "options": {}
    },
    "INITIATED_BY_ME": {
        "value": 1,
        "options": {}
    },
    "INITIATED_BY_OTHER": {
        "value": 2,
        "options": {}
    }
};

// EphemeralSetting ========================================

var EphemeralSetting = self.EphemeralSetting = {};

EphemeralSetting.read = function (pbf, end) {
    return pbf.readFields(EphemeralSetting._readField, {duration: 0, timestamp: 0}, end);
};
EphemeralSetting._readField = function (tag, obj, pbf) {
    if (tag === 1) obj.duration = pbf.readSFixed32();
    else if (tag === 2) obj.timestamp = pbf.readSFixed64();
};
EphemeralSetting.write = function (obj, pbf) {
    if (obj.duration) pbf.writeSFixed32Field(1, obj.duration);
    if (obj.timestamp) pbf.writeSFixed64Field(2, obj.timestamp);
};

// ExitCode ========================================

var ExitCode = self.ExitCode = {};

ExitCode.read = function (pbf, end) {
    return pbf.readFields(ExitCode._readField, {code: 0, text: ""}, end);
};
ExitCode._readField = function (tag, obj, pbf) {
    if (tag === 1) obj.code = pbf.readVarint();
    else if (tag === 2) obj.text = pbf.readString();
};
ExitCode.write = function (obj, pbf) {
    if (obj.code) pbf.writeVarintField(1, obj.code);
    if (obj.text) pbf.writeStringField(2, obj.text);
};

// ExternalBlobReference ========================================

var ExternalBlobReference = self.ExternalBlobReference = {};

ExternalBlobReference.read = function (pbf, end) {
    return pbf.readFields(ExternalBlobReference._readField, {mediaKey: null, directPath: "", handle: "", fileSizeBytes: 0, fileSha256: null, fileEncSha256: null}, end);
};
ExternalBlobReference._readField = function (tag, obj, pbf) {
    if (tag === 1) obj.mediaKey = pbf.readBytes();
    else if (tag === 2) obj.directPath = pbf.readString();
    else if (tag === 3) obj.handle = pbf.readString();
    else if (tag === 4) obj.fileSizeBytes = pbf.readVarint();
    else if (tag === 5) obj.fileSha256 = pbf.readBytes();
    else if (tag === 6) obj.fileEncSha256 = pbf.readBytes();
};
ExternalBlobReference.write = function (obj, pbf) {
    if (obj.mediaKey) pbf.writeBytesField(1, obj.mediaKey);
    if (obj.directPath) pbf.writeStringField(2, obj.directPath);
    if (obj.handle) pbf.writeStringField(3, obj.handle);
    if (obj.fileSizeBytes) pbf.writeVarintField(4, obj.fileSizeBytes);
    if (obj.fileSha256) pbf.writeBytesField(5, obj.fileSha256);
    if (obj.fileEncSha256) pbf.writeBytesField(6, obj.fileEncSha256);
};

// GlobalSettings ========================================

var GlobalSettings = self.GlobalSettings = {};

GlobalSettings.read = function (pbf, end) {
    return pbf.readFields(GlobalSettings._readField, {lightThemeWallpaper: null, mediaVisibility: 0, darkThemeWallpaper: null, autoDownloadWiFi: null, autoDownloadCellular: null, autoDownloadRoaming: null, showIndividualNotificationsPreview: false, showGroupNotificationsPreview: false, disappearingModeDuration: 0, disappearingModeTimestamp: 0, avatarUserSettings: null, fontSize: 0, securityNotifications: false, autoUnarchiveChats: false, videoQualityMode: 0, photoQualityMode: 0, individualNotificationSettings: null, groupNotificationSettings: null}, end);
};
GlobalSettings._readField = function (tag, obj, pbf) {
    if (tag === 1) obj.lightThemeWallpaper = WallpaperSettings.read(pbf, pbf.readVarint() + pbf.pos);
    else if (tag === 2) obj.mediaVisibility = pbf.readVarint();
    else if (tag === 3) obj.darkThemeWallpaper = WallpaperSettings.read(pbf, pbf.readVarint() + pbf.pos);
    else if (tag === 4) obj.autoDownloadWiFi = AutoDownloadSettings.read(pbf, pbf.readVarint() + pbf.pos);
    else if (tag === 5) obj.autoDownloadCellular = AutoDownloadSettings.read(pbf, pbf.readVarint() + pbf.pos);
    else if (tag === 6) obj.autoDownloadRoaming = AutoDownloadSettings.read(pbf, pbf.readVarint() + pbf.pos);
    else if (tag === 7) obj.showIndividualNotificationsPreview = pbf.readBoolean();
    else if (tag === 8) obj.showGroupNotificationsPreview = pbf.readBoolean();
    else if (tag === 9) obj.disappearingModeDuration = pbf.readVarint(true);
    else if (tag === 10) obj.disappearingModeTimestamp = pbf.readVarint(true);
    else if (tag === 11) obj.avatarUserSettings = AvatarUserSettings.read(pbf, pbf.readVarint() + pbf.pos);
    else if (tag === 12) obj.fontSize = pbf.readVarint(true);
    else if (tag === 13) obj.securityNotifications = pbf.readBoolean();
    else if (tag === 14) obj.autoUnarchiveChats = pbf.readBoolean();
    else if (tag === 15) obj.videoQualityMode = pbf.readVarint(true);
    else if (tag === 16) obj.photoQualityMode = pbf.readVarint(true);
    else if (tag === 17) obj.individualNotificationSettings = NotificationSettings.read(pbf, pbf.readVarint() + pbf.pos);
    else if (tag === 18) obj.groupNotificationSettings = NotificationSettings.read(pbf, pbf.readVarint() + pbf.pos);
};
GlobalSettings.write = function (obj, pbf) {
    if (obj.lightThemeWallpaper) pbf.writeMessage(1, WallpaperSettings.write, obj.lightThemeWallpaper);
    if (obj.mediaVisibility) pbf.writeVarintField(2, obj.mediaVisibility);
    if (obj.darkThemeWallpaper) pbf.writeMessage(3, WallpaperSettings.write, obj.darkThemeWallpaper);
    if (obj.autoDownloadWiFi) pbf.writeMessage(4, AutoDownloadSettings.write, obj.autoDownloadWiFi);
    if (obj.autoDownloadCellular) pbf.writeMessage(5, AutoDownloadSettings.write, obj.autoDownloadCellular);
    if (obj.autoDownloadRoaming) pbf.writeMessage(6, AutoDownloadSettings.write, obj.autoDownloadRoaming);
    if (obj.showIndividualNotificationsPreview) pbf.writeBooleanField(7, obj.showIndividualNotificationsPreview);
    if (obj.showGroupNotificationsPreview) pbf.writeBooleanField(8, obj.showGroupNotificationsPreview);
    if (obj.disappearingModeDuration) pbf.writeVarintField(9, obj.disappearingModeDuration);
    if (obj.disappearingModeTimestamp) pbf.writeVarintField(10, obj.disappearingModeTimestamp);
    if (obj.avatarUserSettings) pbf.writeMessage(11, AvatarUserSettings.write, obj.avatarUserSettings);
    if (obj.fontSize) pbf.writeVarintField(12, obj.fontSize);
    if (obj.securityNotifications) pbf.writeBooleanField(13, obj.securityNotifications);
    if (obj.autoUnarchiveChats) pbf.writeBooleanField(14, obj.autoUnarchiveChats);
    if (obj.videoQualityMode) pbf.writeVarintField(15, obj.videoQualityMode);
    if (obj.photoQualityMode) pbf.writeVarintField(16, obj.photoQualityMode);
    if (obj.individualNotificationSettings) pbf.writeMessage(17, NotificationSettings.write, obj.individualNotificationSettings);
    if (obj.groupNotificationSettings) pbf.writeMessage(18, NotificationSettings.write, obj.groupNotificationSettings);
};

// GroupMention ========================================

var GroupMention = self.GroupMention = {};

GroupMention.read = function (pbf, end) {
    return pbf.readFields(GroupMention._readField, {groupJid: "", groupSubject: ""}, end);
};
GroupMention._readField = function (tag, obj, pbf) {
    if (tag === 1) obj.groupJid = pbf.readString();
    else if (tag === 2) obj.groupSubject = pbf.readString();
};
GroupMention.write = function (obj, pbf) {
    if (obj.groupJid) pbf.writeStringField(1, obj.groupJid);
    if (obj.groupSubject) pbf.writeStringField(2, obj.groupSubject);
};

// GroupParticipant ========================================

var GroupParticipant = self.GroupParticipant = {};

GroupParticipant.read = function (pbf, end) {
    return pbf.readFields(GroupParticipant._readField, {userJid: "", rank: 0}, end);
};
GroupParticipant._readField = function (tag, obj, pbf) {
    if (tag === 1) obj.userJid = pbf.readString();
    else if (tag === 2) obj.rank = pbf.readVarint();
};
GroupParticipant.write = function (obj, pbf) {
    if (obj.userJid) pbf.writeStringField(1, obj.userJid);
    if (obj.rank) pbf.writeVarintField(2, obj.rank);
};

GroupParticipant.Rank = {
    "REGULAR": {
        "value": 0,
        "options": {}
    },
    "ADMIN": {
        "value": 1,
        "options": {}
    },
    "SUPERADMIN": {
        "value": 2,
        "options": {}
    }
};

// HandshakeMessage ========================================

var HandshakeMessage = self.HandshakeMessage = {};

HandshakeMessage.read = function (pbf, end) {
    return pbf.readFields(HandshakeMessage._readField, {clientHello: null, serverHello: null, clientFinish: null}, end);
};
HandshakeMessage._readField = function (tag, obj, pbf) {
    if (tag === 2) obj.clientHello = HandshakeMessage.ClientHello.read(pbf, pbf.readVarint() + pbf.pos);
    else if (tag === 3) obj.serverHello = HandshakeMessage.ServerHello.read(pbf, pbf.readVarint() + pbf.pos);
    else if (tag === 4) obj.clientFinish = HandshakeMessage.ClientFinish.read(pbf, pbf.readVarint() + pbf.pos);
};
HandshakeMessage.write = function (obj, pbf) {
    if (obj.clientHello) pbf.writeMessage(2, HandshakeMessage.ClientHello.write, obj.clientHello);
    if (obj.serverHello) pbf.writeMessage(3, HandshakeMessage.ServerHello.write, obj.serverHello);
    if (obj.clientFinish) pbf.writeMessage(4, HandshakeMessage.ClientFinish.write, obj.clientFinish);
};

// HandshakeMessage.ClientFinish ========================================

HandshakeMessage.ClientFinish = {};

HandshakeMessage.ClientFinish.read = function (pbf, end) {
    return pbf.readFields(HandshakeMessage.ClientFinish._readField, {static: null, payload: null}, end);
};
HandshakeMessage.ClientFinish._readField = function (tag, obj, pbf) {
    if (tag === 1) obj.static = pbf.readBytes();
    else if (tag === 2) obj.payload = pbf.readBytes();
};
HandshakeMessage.ClientFinish.write = function (obj, pbf) {
    if (obj.static) pbf.writeBytesField(1, obj.static);
    if (obj.payload) pbf.writeBytesField(2, obj.payload);
};

// HandshakeMessage.ClientHello ========================================

HandshakeMessage.ClientHello = {};

HandshakeMessage.ClientHello.read = function (pbf, end) {
    return pbf.readFields(HandshakeMessage.ClientHello._readField, {ephemeral: null, static: null, payload: null}, end);
};
HandshakeMessage.ClientHello._readField = function (tag, obj, pbf) {
    if (tag === 1) obj.ephemeral = pbf.readBytes();
    else if (tag === 2) obj.static = pbf.readBytes();
    else if (tag === 3) obj.payload = pbf.readBytes();
};
HandshakeMessage.ClientHello.write = function (obj, pbf) {
    if (obj.ephemeral) pbf.writeBytesField(1, obj.ephemeral);
    if (obj.static) pbf.writeBytesField(2, obj.static);
    if (obj.payload) pbf.writeBytesField(3, obj.payload);
};

// HandshakeMessage.ServerHello ========================================

HandshakeMessage.ServerHello = {};

HandshakeMessage.ServerHello.read = function (pbf, end) {
    return pbf.readFields(HandshakeMessage.ServerHello._readField, {ephemeral: null, static: null, payload: null}, end);
};
HandshakeMessage.ServerHello._readField = function (tag, obj, pbf) {
    if (tag === 1) obj.ephemeral = pbf.readBytes();
    else if (tag === 2) obj.static = pbf.readBytes();
    else if (tag === 3) obj.payload = pbf.readBytes();
};
HandshakeMessage.ServerHello.write = function (obj, pbf) {
    if (obj.ephemeral) pbf.writeBytesField(1, obj.ephemeral);
    if (obj.static) pbf.writeBytesField(2, obj.static);
    if (obj.payload) pbf.writeBytesField(3, obj.payload);
};

// HistorySync ========================================

var HistorySync = self.HistorySync = {};

HistorySync.read = function (pbf, end) {
    return pbf.readFields(HistorySync._readField, {syncType: 0, conversations: [], statusV3Messages: [], chunkOrder: 0, progress: 0, pushnames: [], globalSettings: null, threadIdUserSecret: null, threadDsTimeframeOffset: 0, recentStickers: [], pastParticipants: []}, end);
};
HistorySync._readField = function (tag, obj, pbf) {
    if (tag === 1) obj.syncType = pbf.readVarint();
    else if (tag === 2) obj.conversations.push(Conversation.read(pbf, pbf.readVarint() + pbf.pos));
    else if (tag === 3) obj.statusV3Messages.push(WebMessageInfo.read(pbf, pbf.readVarint() + pbf.pos));
    else if (tag === 5) obj.chunkOrder = pbf.readVarint();
    else if (tag === 6) obj.progress = pbf.readVarint();
    else if (tag === 7) obj.pushnames.push(Pushname.read(pbf, pbf.readVarint() + pbf.pos));
    else if (tag === 8) obj.globalSettings = GlobalSettings.read(pbf, pbf.readVarint() + pbf.pos);
    else if (tag === 9) obj.threadIdUserSecret = pbf.readBytes();
    else if (tag === 10) obj.threadDsTimeframeOffset = pbf.readVarint();
    else if (tag === 11) obj.recentStickers.push(StickerMetadata.read(pbf, pbf.readVarint() + pbf.pos));
    else if (tag === 12) obj.pastParticipants.push(PastParticipants.read(pbf, pbf.readVarint() + pbf.pos));
};
HistorySync.write = function (obj, pbf) {
    if (obj.syncType) pbf.writeVarintField(1, obj.syncType);
    if (obj.conversations) for (var i = 0; i < obj.conversations.length; i++) pbf.writeMessage(2, Conversation.write, obj.conversations[i]);
    if (obj.statusV3Messages) for (i = 0; i < obj.statusV3Messages.length; i++) pbf.writeMessage(3, WebMessageInfo.write, obj.statusV3Messages[i]);
    if (obj.chunkOrder) pbf.writeVarintField(5, obj.chunkOrder);
    if (obj.progress) pbf.writeVarintField(6, obj.progress);
    if (obj.pushnames) for (i = 0; i < obj.pushnames.length; i++) pbf.writeMessage(7, Pushname.write, obj.pushnames[i]);
    if (obj.globalSettings) pbf.writeMessage(8, GlobalSettings.write, obj.globalSettings);
    if (obj.threadIdUserSecret) pbf.writeBytesField(9, obj.threadIdUserSecret);
    if (obj.threadDsTimeframeOffset) pbf.writeVarintField(10, obj.threadDsTimeframeOffset);
    if (obj.recentStickers) for (i = 0; i < obj.recentStickers.length; i++) pbf.writeMessage(11, StickerMetadata.write, obj.recentStickers[i]);
    if (obj.pastParticipants) for (i = 0; i < obj.pastParticipants.length; i++) pbf.writeMessage(12, PastParticipants.write, obj.pastParticipants[i]);
};

HistorySync.HistorySyncType = {
    "INITIAL_BOOTSTRAP": {
        "value": 0,
        "options": {}
    },
    "INITIAL_STATUS_V3": {
        "value": 1,
        "options": {}
    },
    "FULL": {
        "value": 2,
        "options": {}
    },
    "RECENT": {
        "value": 3,
        "options": {}
    },
    "PUSH_NAME": {
        "value": 4,
        "options": {}
    },
    "NON_BLOCKING_DATA": {
        "value": 5,
        "options": {}
    },
    "ON_DEMAND": {
        "value": 6,
        "options": {}
    }
};

// HistorySyncMsg ========================================

var HistorySyncMsg = self.HistorySyncMsg = {};

HistorySyncMsg.read = function (pbf, end) {
    return pbf.readFields(HistorySyncMsg._readField, {message: null, msgOrderId: 0}, end);
};
HistorySyncMsg._readField = function (tag, obj, pbf) {
    if (tag === 1) obj.message = WebMessageInfo.read(pbf, pbf.readVarint() + pbf.pos);
    else if (tag === 2) obj.msgOrderId = pbf.readVarint();
};
HistorySyncMsg.write = function (obj, pbf) {
    if (obj.message) pbf.writeMessage(1, WebMessageInfo.write, obj.message);
    if (obj.msgOrderId) pbf.writeVarintField(2, obj.msgOrderId);
};

// HydratedTemplateButton ========================================

var HydratedTemplateButton = self.HydratedTemplateButton = {};

HydratedTemplateButton.read = function (pbf, end) {
    return pbf.readFields(HydratedTemplateButton._readField, {index: 0, quickReplyButton: null, hydratedButton: null, urlButton: null, callButton: null}, end);
};
HydratedTemplateButton._readField = function (tag, obj, pbf) {
    if (tag === 4) obj.index = pbf.readVarint();
    else if (tag === 1) obj.quickReplyButton = HydratedTemplateButton.HydratedQuickReplyButton.read(pbf, pbf.readVarint() + pbf.pos), obj.hydratedButton = "quickReplyButton";
    else if (tag === 2) obj.urlButton = HydratedTemplateButton.HydratedURLButton.read(pbf, pbf.readVarint() + pbf.pos), obj.hydratedButton = "urlButton";
    else if (tag === 3) obj.callButton = HydratedTemplateButton.HydratedCallButton.read(pbf, pbf.readVarint() + pbf.pos), obj.hydratedButton = "callButton";
};
HydratedTemplateButton.write = function (obj, pbf) {
    if (obj.index) pbf.writeVarintField(4, obj.index);
    if (obj.quickReplyButton) pbf.writeMessage(1, HydratedTemplateButton.HydratedQuickReplyButton.write, obj.quickReplyButton);
    if (obj.urlButton) pbf.writeMessage(2, HydratedTemplateButton.HydratedURLButton.write, obj.urlButton);
    if (obj.callButton) pbf.writeMessage(3, HydratedTemplateButton.HydratedCallButton.write, obj.callButton);
};

// HydratedTemplateButton.HydratedCallButton ========================================

HydratedTemplateButton.HydratedCallButton = {};

HydratedTemplateButton.HydratedCallButton.read = function (pbf, end) {
    return pbf.readFields(HydratedTemplateButton.HydratedCallButton._readField, {displayText: "", phoneNumber: ""}, end);
};
HydratedTemplateButton.HydratedCallButton._readField = function (tag, obj, pbf) {
    if (tag === 1) obj.displayText = pbf.readString();
    else if (tag === 2) obj.phoneNumber = pbf.readString();
};
HydratedTemplateButton.HydratedCallButton.write = function (obj, pbf) {
    if (obj.displayText) pbf.writeStringField(1, obj.displayText);
    if (obj.phoneNumber) pbf.writeStringField(2, obj.phoneNumber);
};

// HydratedTemplateButton.HydratedQuickReplyButton ========================================

HydratedTemplateButton.HydratedQuickReplyButton = {};

HydratedTemplateButton.HydratedQuickReplyButton.read = function (pbf, end) {
    return pbf.readFields(HydratedTemplateButton.HydratedQuickReplyButton._readField, {displayText: "", id: ""}, end);
};
HydratedTemplateButton.HydratedQuickReplyButton._readField = function (tag, obj, pbf) {
    if (tag === 1) obj.displayText = pbf.readString();
    else if (tag === 2) obj.id = pbf.readString();
};
HydratedTemplateButton.HydratedQuickReplyButton.write = function (obj, pbf) {
    if (obj.displayText) pbf.writeStringField(1, obj.displayText);
    if (obj.id) pbf.writeStringField(2, obj.id);
};

// HydratedTemplateButton.HydratedURLButton ========================================

HydratedTemplateButton.HydratedURLButton = {};

HydratedTemplateButton.HydratedURLButton.read = function (pbf, end) {
    return pbf.readFields(HydratedTemplateButton.HydratedURLButton._readField, {displayText: "", url: ""}, end);
};
HydratedTemplateButton.HydratedURLButton._readField = function (tag, obj, pbf) {
    if (tag === 1) obj.displayText = pbf.readString();
    else if (tag === 2) obj.url = pbf.readString();
};
HydratedTemplateButton.HydratedURLButton.write = function (obj, pbf) {
    if (obj.displayText) pbf.writeStringField(1, obj.displayText);
    if (obj.url) pbf.writeStringField(2, obj.url);
};

// IdentityKeyPairStructure ========================================

var IdentityKeyPairStructure = self.IdentityKeyPairStructure = {};

IdentityKeyPairStructure.read = function (pbf, end) {
    return pbf.readFields(IdentityKeyPairStructure._readField, {publicKey: null, privateKey: null}, end);
};
IdentityKeyPairStructure._readField = function (tag, obj, pbf) {
    if (tag === 1) obj.publicKey = pbf.readBytes();
    else if (tag === 2) obj.privateKey = pbf.readBytes();
};
IdentityKeyPairStructure.write = function (obj, pbf) {
    if (obj.publicKey) pbf.writeBytesField(1, obj.publicKey);
    if (obj.privateKey) pbf.writeBytesField(2, obj.privateKey);
};

// InteractiveAnnotation ========================================

var InteractiveAnnotation = self.InteractiveAnnotation = {};

InteractiveAnnotation.read = function (pbf, end) {
    return pbf.readFields(InteractiveAnnotation._readField, {polygonVertices: [], location: null, action: null}, end);
};
InteractiveAnnotation._readField = function (tag, obj, pbf) {
    if (tag === 1) obj.polygonVertices.push(Point.read(pbf, pbf.readVarint() + pbf.pos));
    else if (tag === 2) obj.location = Location.read(pbf, pbf.readVarint() + pbf.pos), obj.action = "location";
};
InteractiveAnnotation.write = function (obj, pbf) {
    if (obj.polygonVertices) for (var i = 0; i < obj.polygonVertices.length; i++) pbf.writeMessage(1, Point.write, obj.polygonVertices[i]);
    if (obj.location) pbf.writeMessage(2, Location.write, obj.location);
};

// KeepInChat ========================================

var KeepInChat = self.KeepInChat = {};

KeepInChat.read = function (pbf, end) {
    return pbf.readFields(KeepInChat._readField, {keepType: 0, serverTimestamp: 0, key: null, deviceJid: "", clientTimestampMs: 0, serverTimestampMs: 0}, end);
};
KeepInChat._readField = function (tag, obj, pbf) {
    if (tag === 1) obj.keepType = pbf.readVarint();
    else if (tag === 2) obj.serverTimestamp = pbf.readVarint(true);
    else if (tag === 3) obj.key = MessageKey.read(pbf, pbf.readVarint() + pbf.pos);
    else if (tag === 4) obj.deviceJid = pbf.readString();
    else if (tag === 5) obj.clientTimestampMs = pbf.readVarint(true);
    else if (tag === 6) obj.serverTimestampMs = pbf.readVarint(true);
};
KeepInChat.write = function (obj, pbf) {
    if (obj.keepType) pbf.writeVarintField(1, obj.keepType);
    if (obj.serverTimestamp) pbf.writeVarintField(2, obj.serverTimestamp);
    if (obj.key) pbf.writeMessage(3, MessageKey.write, obj.key);
    if (obj.deviceJid) pbf.writeStringField(4, obj.deviceJid);
    if (obj.clientTimestampMs) pbf.writeVarintField(5, obj.clientTimestampMs);
    if (obj.serverTimestampMs) pbf.writeVarintField(6, obj.serverTimestampMs);
};

// KeyExchangeMessage ========================================

var KeyExchangeMessage = self.KeyExchangeMessage = {};

KeyExchangeMessage.read = function (pbf, end) {
    return pbf.readFields(KeyExchangeMessage._readField, {id: 0, baseKey: null, ratchetKey: null, identityKey: null, baseKeySignature: null}, end);
};
KeyExchangeMessage._readField = function (tag, obj, pbf) {
    if (tag === 1) obj.id = pbf.readVarint();
    else if (tag === 2) obj.baseKey = pbf.readBytes();
    else if (tag === 3) obj.ratchetKey = pbf.readBytes();
    else if (tag === 4) obj.identityKey = pbf.readBytes();
    else if (tag === 5) obj.baseKeySignature = pbf.readBytes();
};
KeyExchangeMessage.write = function (obj, pbf) {
    if (obj.id) pbf.writeVarintField(1, obj.id);
    if (obj.baseKey) pbf.writeBytesField(2, obj.baseKey);
    if (obj.ratchetKey) pbf.writeBytesField(3, obj.ratchetKey);
    if (obj.identityKey) pbf.writeBytesField(4, obj.identityKey);
    if (obj.baseKeySignature) pbf.writeBytesField(5, obj.baseKeySignature);
};

// KeyId ========================================

var KeyId = self.KeyId = {};

KeyId.read = function (pbf, end) {
    return pbf.readFields(KeyId._readField, {id: null}, end);
};
KeyId._readField = function (tag, obj, pbf) {
    if (tag === 1) obj.id = pbf.readBytes();
};
KeyId.write = function (obj, pbf) {
    if (obj.id) pbf.writeBytesField(1, obj.id);
};

// LocalizedName ========================================

var LocalizedName = self.LocalizedName = {};

LocalizedName.read = function (pbf, end) {
    return pbf.readFields(LocalizedName._readField, {lg: "", lc: "", verifiedName: ""}, end);
};
LocalizedName._readField = function (tag, obj, pbf) {
    if (tag === 1) obj.lg = pbf.readString();
    else if (tag === 2) obj.lc = pbf.readString();
    else if (tag === 3) obj.verifiedName = pbf.readString();
};
LocalizedName.write = function (obj, pbf) {
    if (obj.lg) pbf.writeStringField(1, obj.lg);
    if (obj.lc) pbf.writeStringField(2, obj.lc);
    if (obj.verifiedName) pbf.writeStringField(3, obj.verifiedName);
};

// Location ========================================

var Location = self.Location = {};

Location.read = function (pbf, end) {
    return pbf.readFields(Location._readField, {degreesLatitude: 0, degreesLongitude: 0, name: ""}, end);
};
Location._readField = function (tag, obj, pbf) {
    if (tag === 1) obj.degreesLatitude = pbf.readDouble();
    else if (tag === 2) obj.degreesLongitude = pbf.readDouble();
    else if (tag === 3) obj.name = pbf.readString();
};
Location.write = function (obj, pbf) {
    if (obj.degreesLatitude) pbf.writeDoubleField(1, obj.degreesLatitude);
    if (obj.degreesLongitude) pbf.writeDoubleField(2, obj.degreesLongitude);
    if (obj.name) pbf.writeStringField(3, obj.name);
};

// MediaData ========================================

var MediaData = self.MediaData = {};

MediaData.read = function (pbf, end) {
    return pbf.readFields(MediaData._readField, {localPath: ""}, end);
};
MediaData._readField = function (tag, obj, pbf) {
    if (tag === 1) obj.localPath = pbf.readString();
};
MediaData.write = function (obj, pbf) {
    if (obj.localPath) pbf.writeStringField(1, obj.localPath);
};

// MediaRetryNotification ========================================

var MediaRetryNotification = self.MediaRetryNotification = {};

MediaRetryNotification.read = function (pbf, end) {
    return pbf.readFields(MediaRetryNotification._readField, {stanzaId: "", directPath: "", result: 0}, end);
};
MediaRetryNotification._readField = function (tag, obj, pbf) {
    if (tag === 1) obj.stanzaId = pbf.readString();
    else if (tag === 2) obj.directPath = pbf.readString();
    else if (tag === 3) obj.result = pbf.readVarint();
};
MediaRetryNotification.write = function (obj, pbf) {
    if (obj.stanzaId) pbf.writeStringField(1, obj.stanzaId);
    if (obj.directPath) pbf.writeStringField(2, obj.directPath);
    if (obj.result) pbf.writeVarintField(3, obj.result);
};

MediaRetryNotification.ResultType = {
    "GENERAL_ERROR": {
        "value": 0,
        "options": {}
    },
    "SUCCESS": {
        "value": 1,
        "options": {}
    },
    "NOT_FOUND": {
        "value": 2,
        "options": {}
    },
    "DECRYPTION_ERROR": {
        "value": 3,
        "options": {}
    }
};

// Message ========================================

var Message = self.Message = {};

Message.read = function (pbf, end) {
    return pbf.readFields(Message._readField, {conversation: "", senderKeyDistributionMessage: null, imageMessage: null, contactMessage: null, locationMessage: null, extendedTextMessage: null, documentMessage: null, audioMessage: null, videoMessage: null, call: null, chat: null, protocolMessage: null, contactsArrayMessage: null, highlyStructuredMessage: null, fastRatchetKeySenderKeyDistributionMessage: null, sendPaymentMessage: null, liveLocationMessage: null, requestPaymentMessage: null, declinePaymentRequestMessage: null, cancelPaymentRequestMessage: null, templateMessage: null, stickerMessage: null, groupInviteMessage: null, templateButtonReplyMessage: null, productMessage: null, deviceSentMessage: null, messageContextInfo: null, listMessage: null, viewOnceMessage: null, orderMessage: null, listResponseMessage: null, ephemeralMessage: null, invoiceMessage: null, buttonsMessage: null, buttonsResponseMessage: null, paymentInviteMessage: null, interactiveMessage: null, reactionMessage: null, stickerSyncRmrMessage: null, interactiveResponseMessage: null, pollCreationMessage: null, pollUpdateMessage: null, keepInChatMessage: null, documentWithCaptionMessage: null, requestPhoneNumberMessage: null, viewOnceMessageV2: null, encReactionMessage: null, editedMessage: null, viewOnceMessageV2Extension: null, pollCreationMessageV2: null, scheduledCallCreationMessage: null, groupMentionedMessage: null, pinInChatMessage: null, pollCreationMessageV3: null, scheduledCallEditMessage: null, ptvMessage: null}, end);
};
Message._readField = function (tag, obj, pbf) {
    if (tag === 1) obj.conversation = pbf.readString();
    else if (tag === 2) obj.senderKeyDistributionMessage = Message.SenderKeyDistributionMessage.read(pbf, pbf.readVarint() + pbf.pos);
    else if (tag === 3) obj.imageMessage = Message.ImageMessage.read(pbf, pbf.readVarint() + pbf.pos);
    else if (tag === 4) obj.contactMessage = Message.ContactMessage.read(pbf, pbf.readVarint() + pbf.pos);
    else if (tag === 5) obj.locationMessage = Message.LocationMessage.read(pbf, pbf.readVarint() + pbf.pos);
    else if (tag === 6) obj.extendedTextMessage = Message.ExtendedTextMessage.read(pbf, pbf.readVarint() + pbf.pos);
    else if (tag === 7) obj.documentMessage = Message.DocumentMessage.read(pbf, pbf.readVarint() + pbf.pos);
    else if (tag === 8) obj.audioMessage = Message.AudioMessage.read(pbf, pbf.readVarint() + pbf.pos);
    else if (tag === 9) obj.videoMessage = Message.VideoMessage.read(pbf, pbf.readVarint() + pbf.pos);
    else if (tag === 10) obj.call = Message.Call.read(pbf, pbf.readVarint() + pbf.pos);
    else if (tag === 11) obj.chat = Message.Chat.read(pbf, pbf.readVarint() + pbf.pos);
    else if (tag === 12) obj.protocolMessage = Message.ProtocolMessage.read(pbf, pbf.readVarint() + pbf.pos);
    else if (tag === 13) obj.contactsArrayMessage = Message.ContactsArrayMessage.read(pbf, pbf.readVarint() + pbf.pos);
    else if (tag === 14) obj.highlyStructuredMessage = Message.HighlyStructuredMessage.read(pbf, pbf.readVarint() + pbf.pos);
    else if (tag === 15) obj.fastRatchetKeySenderKeyDistributionMessage = Message.SenderKeyDistributionMessage.read(pbf, pbf.readVarint() + pbf.pos);
    else if (tag === 16) obj.sendPaymentMessage = Message.SendPaymentMessage.read(pbf, pbf.readVarint() + pbf.pos);
    else if (tag === 18) obj.liveLocationMessage = Message.LiveLocationMessage.read(pbf, pbf.readVarint() + pbf.pos);
    else if (tag === 22) obj.requestPaymentMessage = Message.RequestPaymentMessage.read(pbf, pbf.readVarint() + pbf.pos);
    else if (tag === 23) obj.declinePaymentRequestMessage = Message.DeclinePaymentRequestMessage.read(pbf, pbf.readVarint() + pbf.pos);
    else if (tag === 24) obj.cancelPaymentRequestMessage = Message.CancelPaymentRequestMessage.read(pbf, pbf.readVarint() + pbf.pos);
    else if (tag === 25) obj.templateMessage = Message.TemplateMessage.read(pbf, pbf.readVarint() + pbf.pos);
    else if (tag === 26) obj.stickerMessage = Message.StickerMessage.read(pbf, pbf.readVarint() + pbf.pos);
    else if (tag === 28) obj.groupInviteMessage = Message.GroupInviteMessage.read(pbf, pbf.readVarint() + pbf.pos);
    else if (tag === 29) obj.templateButtonReplyMessage = Message.TemplateButtonReplyMessage.read(pbf, pbf.readVarint() + pbf.pos);
    else if (tag === 30) obj.productMessage = Message.ProductMessage.read(pbf, pbf.readVarint() + pbf.pos);
    else if (tag === 31) obj.deviceSentMessage = Message.DeviceSentMessage.read(pbf, pbf.readVarint() + pbf.pos);
    else if (tag === 35) obj.messageContextInfo = MessageContextInfo.read(pbf, pbf.readVarint() + pbf.pos);
    else if (tag === 36) obj.listMessage = Message.ListMessage.read(pbf, pbf.readVarint() + pbf.pos);
    else if (tag === 37) obj.viewOnceMessage = Message.FutureProofMessage.read(pbf, pbf.readVarint() + pbf.pos);
    else if (tag === 38) obj.orderMessage = Message.OrderMessage.read(pbf, pbf.readVarint() + pbf.pos);
    else if (tag === 39) obj.listResponseMessage = Message.ListResponseMessage.read(pbf, pbf.readVarint() + pbf.pos);
    else if (tag === 40) obj.ephemeralMessage = Message.FutureProofMessage.read(pbf, pbf.readVarint() + pbf.pos);
    else if (tag === 41) obj.invoiceMessage = Message.InvoiceMessage.read(pbf, pbf.readVarint() + pbf.pos);
    else if (tag === 42) obj.buttonsMessage = Message.ButtonsMessage.read(pbf, pbf.readVarint() + pbf.pos);
    else if (tag === 43) obj.buttonsResponseMessage = Message.ButtonsResponseMessage.read(pbf, pbf.readVarint() + pbf.pos);
    else if (tag === 44) obj.paymentInviteMessage = Message.PaymentInviteMessage.read(pbf, pbf.readVarint() + pbf.pos);
    else if (tag === 45) obj.interactiveMessage = Message.InteractiveMessage.read(pbf, pbf.readVarint() + pbf.pos);
    else if (tag === 46) obj.reactionMessage = Message.ReactionMessage.read(pbf, pbf.readVarint() + pbf.pos);
    else if (tag === 47) obj.stickerSyncRmrMessage = Message.StickerSyncRMRMessage.read(pbf, pbf.readVarint() + pbf.pos);
    else if (tag === 48) obj.interactiveResponseMessage = Message.InteractiveResponseMessage.read(pbf, pbf.readVarint() + pbf.pos);
    else if (tag === 49) obj.pollCreationMessage = Message.PollCreationMessage.read(pbf, pbf.readVarint() + pbf.pos);
    else if (tag === 50) obj.pollUpdateMessage = Message.PollUpdateMessage.read(pbf, pbf.readVarint() + pbf.pos);
    else if (tag === 51) obj.keepInChatMessage = Message.KeepInChatMessage.read(pbf, pbf.readVarint() + pbf.pos);
    else if (tag === 53) obj.documentWithCaptionMessage = Message.FutureProofMessage.read(pbf, pbf.readVarint() + pbf.pos);
    else if (tag === 54) obj.requestPhoneNumberMessage = Message.RequestPhoneNumberMessage.read(pbf, pbf.readVarint() + pbf.pos);
    else if (tag === 55) obj.viewOnceMessageV2 = Message.FutureProofMessage.read(pbf, pbf.readVarint() + pbf.pos);
    else if (tag === 56) obj.encReactionMessage = Message.EncReactionMessage.read(pbf, pbf.readVarint() + pbf.pos);
    else if (tag === 58) obj.editedMessage = Message.FutureProofMessage.read(pbf, pbf.readVarint() + pbf.pos);
    else if (tag === 59) obj.viewOnceMessageV2Extension = Message.FutureProofMessage.read(pbf, pbf.readVarint() + pbf.pos);
    else if (tag === 60) obj.pollCreationMessageV2 = Message.PollCreationMessage.read(pbf, pbf.readVarint() + pbf.pos);
    else if (tag === 61) obj.scheduledCallCreationMessage = Message.ScheduledCallCreationMessage.read(pbf, pbf.readVarint() + pbf.pos);
    else if (tag === 62) obj.groupMentionedMessage = Message.FutureProofMessage.read(pbf, pbf.readVarint() + pbf.pos);
    else if (tag === 63) obj.pinInChatMessage = Message.PinInChatMessage.read(pbf, pbf.readVarint() + pbf.pos);
    else if (tag === 64) obj.pollCreationMessageV3 = Message.PollCreationMessage.read(pbf, pbf.readVarint() + pbf.pos);
    else if (tag === 65) obj.scheduledCallEditMessage = Message.ScheduledCallEditMessage.read(pbf, pbf.readVarint() + pbf.pos);
    else if (tag === 66) obj.ptvMessage = Message.VideoMessage.read(pbf, pbf.readVarint() + pbf.pos);
};
Message.write = function (obj, pbf) {
    if (obj.conversation) pbf.writeStringField(1, obj.conversation);
    if (obj.senderKeyDistributionMessage) pbf.writeMessage(2, Message.SenderKeyDistributionMessage.write, obj.senderKeyDistributionMessage);
    if (obj.imageMessage) pbf.writeMessage(3, Message.ImageMessage.write, obj.imageMessage);
    if (obj.contactMessage) pbf.writeMessage(4, Message.ContactMessage.write, obj.contactMessage);
    if (obj.locationMessage) pbf.writeMessage(5, Message.LocationMessage.write, obj.locationMessage);
    if (obj.extendedTextMessage) pbf.writeMessage(6, Message.ExtendedTextMessage.write, obj.extendedTextMessage);
    if (obj.documentMessage) pbf.writeMessage(7, Message.DocumentMessage.write, obj.documentMessage);
    if (obj.audioMessage) pbf.writeMessage(8, Message.AudioMessage.write, obj.audioMessage);
    if (obj.videoMessage) pbf.writeMessage(9, Message.VideoMessage.write, obj.videoMessage);
    if (obj.call) pbf.writeMessage(10, Message.Call.write, obj.call);
    if (obj.chat) pbf.writeMessage(11, Message.Chat.write, obj.chat);
    if (obj.protocolMessage) pbf.writeMessage(12, Message.ProtocolMessage.write, obj.protocolMessage);
    if (obj.contactsArrayMessage) pbf.writeMessage(13, Message.ContactsArrayMessage.write, obj.contactsArrayMessage);
    if (obj.highlyStructuredMessage) pbf.writeMessage(14, Message.HighlyStructuredMessage.write, obj.highlyStructuredMessage);
    if (obj.fastRatchetKeySenderKeyDistributionMessage) pbf.writeMessage(15, Message.SenderKeyDistributionMessage.write, obj.fastRatchetKeySenderKeyDistributionMessage);
    if (obj.sendPaymentMessage) pbf.writeMessage(16, Message.SendPaymentMessage.write, obj.sendPaymentMessage);
    if (obj.liveLocationMessage) pbf.writeMessage(18, Message.LiveLocationMessage.write, obj.liveLocationMessage);
    if (obj.requestPaymentMessage) pbf.writeMessage(22, Message.RequestPaymentMessage.write, obj.requestPaymentMessage);
    if (obj.declinePaymentRequestMessage) pbf.writeMessage(23, Message.DeclinePaymentRequestMessage.write, obj.declinePaymentRequestMessage);
    if (obj.cancelPaymentRequestMessage) pbf.writeMessage(24, Message.CancelPaymentRequestMessage.write, obj.cancelPaymentRequestMessage);
    if (obj.templateMessage) pbf.writeMessage(25, Message.TemplateMessage.write, obj.templateMessage);
    if (obj.stickerMessage) pbf.writeMessage(26, Message.StickerMessage.write, obj.stickerMessage);
    if (obj.groupInviteMessage) pbf.writeMessage(28, Message.GroupInviteMessage.write, obj.groupInviteMessage);
    if (obj.templateButtonReplyMessage) pbf.writeMessage(29, Message.TemplateButtonReplyMessage.write, obj.templateButtonReplyMessage);
    if (obj.productMessage) pbf.writeMessage(30, Message.ProductMessage.write, obj.productMessage);
    if (obj.deviceSentMessage) pbf.writeMessage(31, Message.DeviceSentMessage.write, obj.deviceSentMessage);
    if (obj.messageContextInfo) pbf.writeMessage(35, MessageContextInfo.write, obj.messageContextInfo);
    if (obj.listMessage) pbf.writeMessage(36, Message.ListMessage.write, obj.listMessage);
    if (obj.viewOnceMessage) pbf.writeMessage(37, Message.FutureProofMessage.write, obj.viewOnceMessage);
    if (obj.orderMessage) pbf.writeMessage(38, Message.OrderMessage.write, obj.orderMessage);
    if (obj.listResponseMessage) pbf.writeMessage(39, Message.ListResponseMessage.write, obj.listResponseMessage);
    if (obj.ephemeralMessage) pbf.writeMessage(40, Message.FutureProofMessage.write, obj.ephemeralMessage);
    if (obj.invoiceMessage) pbf.writeMessage(41, Message.InvoiceMessage.write, obj.invoiceMessage);
    if (obj.buttonsMessage) pbf.writeMessage(42, Message.ButtonsMessage.write, obj.buttonsMessage);
    if (obj.buttonsResponseMessage) pbf.writeMessage(43, Message.ButtonsResponseMessage.write, obj.buttonsResponseMessage);
    if (obj.paymentInviteMessage) pbf.writeMessage(44, Message.PaymentInviteMessage.write, obj.paymentInviteMessage);
    if (obj.interactiveMessage) pbf.writeMessage(45, Message.InteractiveMessage.write, obj.interactiveMessage);
    if (obj.reactionMessage) pbf.writeMessage(46, Message.ReactionMessage.write, obj.reactionMessage);
    if (obj.stickerSyncRmrMessage) pbf.writeMessage(47, Message.StickerSyncRMRMessage.write, obj.stickerSyncRmrMessage);
    if (obj.interactiveResponseMessage) pbf.writeMessage(48, Message.InteractiveResponseMessage.write, obj.interactiveResponseMessage);
    if (obj.pollCreationMessage) pbf.writeMessage(49, Message.PollCreationMessage.write, obj.pollCreationMessage);
    if (obj.pollUpdateMessage) pbf.writeMessage(50, Message.PollUpdateMessage.write, obj.pollUpdateMessage);
    if (obj.keepInChatMessage) pbf.writeMessage(51, Message.KeepInChatMessage.write, obj.keepInChatMessage);
    if (obj.documentWithCaptionMessage) pbf.writeMessage(53, Message.FutureProofMessage.write, obj.documentWithCaptionMessage);
    if (obj.requestPhoneNumberMessage) pbf.writeMessage(54, Message.RequestPhoneNumberMessage.write, obj.requestPhoneNumberMessage);
    if (obj.viewOnceMessageV2) pbf.writeMessage(55, Message.FutureProofMessage.write, obj.viewOnceMessageV2);
    if (obj.encReactionMessage) pbf.writeMessage(56, Message.EncReactionMessage.write, obj.encReactionMessage);
    if (obj.editedMessage) pbf.writeMessage(58, Message.FutureProofMessage.write, obj.editedMessage);
    if (obj.viewOnceMessageV2Extension) pbf.writeMessage(59, Message.FutureProofMessage.write, obj.viewOnceMessageV2Extension);
    if (obj.pollCreationMessageV2) pbf.writeMessage(60, Message.PollCreationMessage.write, obj.pollCreationMessageV2);
    if (obj.scheduledCallCreationMessage) pbf.writeMessage(61, Message.ScheduledCallCreationMessage.write, obj.scheduledCallCreationMessage);
    if (obj.groupMentionedMessage) pbf.writeMessage(62, Message.FutureProofMessage.write, obj.groupMentionedMessage);
    if (obj.pinInChatMessage) pbf.writeMessage(63, Message.PinInChatMessage.write, obj.pinInChatMessage);
    if (obj.pollCreationMessageV3) pbf.writeMessage(64, Message.PollCreationMessage.write, obj.pollCreationMessageV3);
    if (obj.scheduledCallEditMessage) pbf.writeMessage(65, Message.ScheduledCallEditMessage.write, obj.scheduledCallEditMessage);
    if (obj.ptvMessage) pbf.writeMessage(66, Message.VideoMessage.write, obj.ptvMessage);
};

Message.PeerDataOperationRequestType = {
    "UPLOAD_STICKER": {
        "value": 0,
        "options": {}
    },
    "SEND_RECENT_STICKER_BOOTSTRAP": {
        "value": 1,
        "options": {}
    },
    "GENERATE_LINK_PREVIEW": {
        "value": 2,
        "options": {}
    },
    "HISTORY_SYNC_ON_DEMAND": {
        "value": 3,
        "options": {}
    },
    "PLACEHOLDER_MESSAGE_RESEND": {
        "value": 4,
        "options": {}
    }
};

// Message.AppStateFatalExceptionNotification ========================================

Message.AppStateFatalExceptionNotification = {};

Message.AppStateFatalExceptionNotification.read = function (pbf, end) {
    return pbf.readFields(Message.AppStateFatalExceptionNotification._readField, {collectionNames: [], timestamp: 0}, end);
};
Message.AppStateFatalExceptionNotification._readField = function (tag, obj, pbf) {
    if (tag === 1) obj.collectionNames.push(pbf.readString());
    else if (tag === 2) obj.timestamp = pbf.readVarint(true);
};
Message.AppStateFatalExceptionNotification.write = function (obj, pbf) {
    if (obj.collectionNames) for (var i = 0; i < obj.collectionNames.length; i++) pbf.writeStringField(1, obj.collectionNames[i]);
    if (obj.timestamp) pbf.writeVarintField(2, obj.timestamp);
};

// Message.AppStateSyncKey ========================================

Message.AppStateSyncKey = {};

Message.AppStateSyncKey.read = function (pbf, end) {
    return pbf.readFields(Message.AppStateSyncKey._readField, {keyId: null, keyData: null}, end);
};
Message.AppStateSyncKey._readField = function (tag, obj, pbf) {
    if (tag === 1) obj.keyId = Message.AppStateSyncKeyId.read(pbf, pbf.readVarint() + pbf.pos);
    else if (tag === 2) obj.keyData = Message.AppStateSyncKeyData.read(pbf, pbf.readVarint() + pbf.pos);
};
Message.AppStateSyncKey.write = function (obj, pbf) {
    if (obj.keyId) pbf.writeMessage(1, Message.AppStateSyncKeyId.write, obj.keyId);
    if (obj.keyData) pbf.writeMessage(2, Message.AppStateSyncKeyData.write, obj.keyData);
};

// Message.AppStateSyncKeyData ========================================

Message.AppStateSyncKeyData = {};

Message.AppStateSyncKeyData.read = function (pbf, end) {
    return pbf.readFields(Message.AppStateSyncKeyData._readField, {keyData: null, fingerprint: null, timestamp: 0}, end);
};
Message.AppStateSyncKeyData._readField = function (tag, obj, pbf) {
    if (tag === 1) obj.keyData = pbf.readBytes();
    else if (tag === 2) obj.fingerprint = Message.AppStateSyncKeyFingerprint.read(pbf, pbf.readVarint() + pbf.pos);
    else if (tag === 3) obj.timestamp = pbf.readVarint(true);
};
Message.AppStateSyncKeyData.write = function (obj, pbf) {
    if (obj.keyData) pbf.writeBytesField(1, obj.keyData);
    if (obj.fingerprint) pbf.writeMessage(2, Message.AppStateSyncKeyFingerprint.write, obj.fingerprint);
    if (obj.timestamp) pbf.writeVarintField(3, obj.timestamp);
};

// Message.AppStateSyncKeyFingerprint ========================================

Message.AppStateSyncKeyFingerprint = {};

Message.AppStateSyncKeyFingerprint.read = function (pbf, end) {
    return pbf.readFields(Message.AppStateSyncKeyFingerprint._readField, {rawId: 0, currentIndex: 0, deviceIndexes: []}, end);
};
Message.AppStateSyncKeyFingerprint._readField = function (tag, obj, pbf) {
    if (tag === 1) obj.rawId = pbf.readVarint();
    else if (tag === 2) obj.currentIndex = pbf.readVarint();
    else if (tag === 3) pbf.readPackedVarint(obj.deviceIndexes);
};
Message.AppStateSyncKeyFingerprint.write = function (obj, pbf) {
    if (obj.rawId) pbf.writeVarintField(1, obj.rawId);
    if (obj.currentIndex) pbf.writeVarintField(2, obj.currentIndex);
    if (obj.deviceIndexes) pbf.writePackedVarint(3, obj.deviceIndexes);
};

// Message.AppStateSyncKeyId ========================================

Message.AppStateSyncKeyId = {};

Message.AppStateSyncKeyId.read = function (pbf, end) {
    return pbf.readFields(Message.AppStateSyncKeyId._readField, {keyId: null}, end);
};
Message.AppStateSyncKeyId._readField = function (tag, obj, pbf) {
    if (tag === 1) obj.keyId = pbf.readBytes();
};
Message.AppStateSyncKeyId.write = function (obj, pbf) {
    if (obj.keyId) pbf.writeBytesField(1, obj.keyId);
};

// Message.AppStateSyncKeyRequest ========================================

Message.AppStateSyncKeyRequest = {};

Message.AppStateSyncKeyRequest.read = function (pbf, end) {
    return pbf.readFields(Message.AppStateSyncKeyRequest._readField, {keyIds: []}, end);
};
Message.AppStateSyncKeyRequest._readField = function (tag, obj, pbf) {
    if (tag === 1) obj.keyIds.push(Message.AppStateSyncKeyId.read(pbf, pbf.readVarint() + pbf.pos));
};
Message.AppStateSyncKeyRequest.write = function (obj, pbf) {
    if (obj.keyIds) for (var i = 0; i < obj.keyIds.length; i++) pbf.writeMessage(1, Message.AppStateSyncKeyId.write, obj.keyIds[i]);
};

// Message.AppStateSyncKeyShare ========================================

Message.AppStateSyncKeyShare = {};

Message.AppStateSyncKeyShare.read = function (pbf, end) {
    return pbf.readFields(Message.AppStateSyncKeyShare._readField, {keys: []}, end);
};
Message.AppStateSyncKeyShare._readField = function (tag, obj, pbf) {
    if (tag === 1) obj.keys.push(Message.AppStateSyncKey.read(pbf, pbf.readVarint() + pbf.pos));
};
Message.AppStateSyncKeyShare.write = function (obj, pbf) {
    if (obj.keys) for (var i = 0; i < obj.keys.length; i++) pbf.writeMessage(1, Message.AppStateSyncKey.write, obj.keys[i]);
};

// Message.AudioMessage ========================================

Message.AudioMessage = {};

Message.AudioMessage.read = function (pbf, end) {
    return pbf.readFields(Message.AudioMessage._readField, {url: "", mimetype: "", fileSha256: null, fileLength: 0, seconds: 0, ptt: false, mediaKey: null, fileEncSha256: null, directPath: "", mediaKeyTimestamp: 0, contextInfo: null, streamingSidecar: null, waveform: null, backgroundArgb: 0, viewOnce: false}, end);
};
Message.AudioMessage._readField = function (tag, obj, pbf) {
    if (tag === 1) obj.url = pbf.readString();
    else if (tag === 2) obj.mimetype = pbf.readString();
    else if (tag === 3) obj.fileSha256 = pbf.readBytes();
    else if (tag === 4) obj.fileLength = pbf.readVarint();
    else if (tag === 5) obj.seconds = pbf.readVarint();
    else if (tag === 6) obj.ptt = pbf.readBoolean();
    else if (tag === 7) obj.mediaKey = pbf.readBytes();
    else if (tag === 8) obj.fileEncSha256 = pbf.readBytes();
    else if (tag === 9) obj.directPath = pbf.readString();
    else if (tag === 10) obj.mediaKeyTimestamp = pbf.readVarint(true);
    else if (tag === 17) obj.contextInfo = ContextInfo.read(pbf, pbf.readVarint() + pbf.pos);
    else if (tag === 18) obj.streamingSidecar = pbf.readBytes();
    else if (tag === 19) obj.waveform = pbf.readBytes();
    else if (tag === 20) obj.backgroundArgb = pbf.readFixed32();
    else if (tag === 21) obj.viewOnce = pbf.readBoolean();
};
Message.AudioMessage.write = function (obj, pbf) {
    if (obj.url) pbf.writeStringField(1, obj.url);
    if (obj.mimetype) pbf.writeStringField(2, obj.mimetype);
    if (obj.fileSha256) pbf.writeBytesField(3, obj.fileSha256);
    if (obj.fileLength) pbf.writeVarintField(4, obj.fileLength);
    if (obj.seconds) pbf.writeVarintField(5, obj.seconds);
    if (obj.ptt) pbf.writeBooleanField(6, obj.ptt);
    if (obj.mediaKey) pbf.writeBytesField(7, obj.mediaKey);
    if (obj.fileEncSha256) pbf.writeBytesField(8, obj.fileEncSha256);
    if (obj.directPath) pbf.writeStringField(9, obj.directPath);
    if (obj.mediaKeyTimestamp) pbf.writeVarintField(10, obj.mediaKeyTimestamp);
    if (obj.contextInfo) pbf.writeMessage(17, ContextInfo.write, obj.contextInfo);
    if (obj.streamingSidecar) pbf.writeBytesField(18, obj.streamingSidecar);
    if (obj.waveform) pbf.writeBytesField(19, obj.waveform);
    if (obj.backgroundArgb) pbf.writeFixed32Field(20, obj.backgroundArgb);
    if (obj.viewOnce) pbf.writeBooleanField(21, obj.viewOnce);
};

// Message.ButtonsMessage ========================================

Message.ButtonsMessage = {};

Message.ButtonsMessage.read = function (pbf, end) {
    return pbf.readFields(Message.ButtonsMessage._readField, {contentText: "", footerText: "", contextInfo: null, buttons: [], headerType: 0, text: "", header: null, documentMessage: null, imageMessage: null, videoMessage: null, locationMessage: null}, end);
};
Message.ButtonsMessage._readField = function (tag, obj, pbf) {
    if (tag === 6) obj.contentText = pbf.readString();
    else if (tag === 7) obj.footerText = pbf.readString();
    else if (tag === 8) obj.contextInfo = ContextInfo.read(pbf, pbf.readVarint() + pbf.pos);
    else if (tag === 9) obj.buttons.push(Message.ButtonsMessage.Button.read(pbf, pbf.readVarint() + pbf.pos));
    else if (tag === 10) obj.headerType = pbf.readVarint();
    else if (tag === 1) obj.text = pbf.readString(), obj.header = "text";
    else if (tag === 2) obj.documentMessage = Message.DocumentMessage.read(pbf, pbf.readVarint() + pbf.pos), obj.header = "documentMessage";
    else if (tag === 3) obj.imageMessage = Message.ImageMessage.read(pbf, pbf.readVarint() + pbf.pos), obj.header = "imageMessage";
    else if (tag === 4) obj.videoMessage = Message.VideoMessage.read(pbf, pbf.readVarint() + pbf.pos), obj.header = "videoMessage";
    else if (tag === 5) obj.locationMessage = Message.LocationMessage.read(pbf, pbf.readVarint() + pbf.pos), obj.header = "locationMessage";
};
Message.ButtonsMessage.write = function (obj, pbf) {
    if (obj.contentText) pbf.writeStringField(6, obj.contentText);
    if (obj.footerText) pbf.writeStringField(7, obj.footerText);
    if (obj.contextInfo) pbf.writeMessage(8, ContextInfo.write, obj.contextInfo);
    if (obj.buttons) for (var i = 0; i < obj.buttons.length; i++) pbf.writeMessage(9, Message.ButtonsMessage.Button.write, obj.buttons[i]);
    if (obj.headerType) pbf.writeVarintField(10, obj.headerType);
    if (obj.text) pbf.writeStringField(1, obj.text);
    if (obj.documentMessage) pbf.writeMessage(2, Message.DocumentMessage.write, obj.documentMessage);
    if (obj.imageMessage) pbf.writeMessage(3, Message.ImageMessage.write, obj.imageMessage);
    if (obj.videoMessage) pbf.writeMessage(4, Message.VideoMessage.write, obj.videoMessage);
    if (obj.locationMessage) pbf.writeMessage(5, Message.LocationMessage.write, obj.locationMessage);
};

Message.ButtonsMessage.HeaderType = {
    "UNKNOWN": {
        "value": 0,
        "options": {}
    },
    "EMPTY": {
        "value": 1,
        "options": {}
    },
    "TEXT": {
        "value": 2,
        "options": {}
    },
    "DOCUMENT": {
        "value": 3,
        "options": {}
    },
    "IMAGE": {
        "value": 4,
        "options": {}
    },
    "VIDEO": {
        "value": 5,
        "options": {}
    },
    "LOCATION": {
        "value": 6,
        "options": {}
    }
};

// Message.ButtonsMessage.Button ========================================

Message.ButtonsMessage.Button = {};

Message.ButtonsMessage.Button.read = function (pbf, end) {
    return pbf.readFields(Message.ButtonsMessage.Button._readField, {buttonId: "", buttonText: null, type: 0, nativeFlowInfo: null}, end);
};
Message.ButtonsMessage.Button._readField = function (tag, obj, pbf) {
    if (tag === 1) obj.buttonId = pbf.readString();
    else if (tag === 2) obj.buttonText = Message.ButtonsMessage.Button.ButtonText.read(pbf, pbf.readVarint() + pbf.pos);
    else if (tag === 3) obj.type = pbf.readVarint();
    else if (tag === 4) obj.nativeFlowInfo = Message.ButtonsMessage.Button.NativeFlowInfo.read(pbf, pbf.readVarint() + pbf.pos);
};
Message.ButtonsMessage.Button.write = function (obj, pbf) {
    if (obj.buttonId) pbf.writeStringField(1, obj.buttonId);
    if (obj.buttonText) pbf.writeMessage(2, Message.ButtonsMessage.Button.ButtonText.write, obj.buttonText);
    if (obj.type) pbf.writeVarintField(3, obj.type);
    if (obj.nativeFlowInfo) pbf.writeMessage(4, Message.ButtonsMessage.Button.NativeFlowInfo.write, obj.nativeFlowInfo);
};

Message.ButtonsMessage.Button.Type = {
    "UNKNOWN": {
        "value": 0,
        "options": {}
    },
    "RESPONSE": {
        "value": 1,
        "options": {}
    },
    "NATIVE_FLOW": {
        "value": 2,
        "options": {}
    }
};

// Message.ButtonsMessage.Button.ButtonText ========================================

Message.ButtonsMessage.Button.ButtonText = {};

Message.ButtonsMessage.Button.ButtonText.read = function (pbf, end) {
    return pbf.readFields(Message.ButtonsMessage.Button.ButtonText._readField, {displayText: ""}, end);
};
Message.ButtonsMessage.Button.ButtonText._readField = function (tag, obj, pbf) {
    if (tag === 1) obj.displayText = pbf.readString();
};
Message.ButtonsMessage.Button.ButtonText.write = function (obj, pbf) {
    if (obj.displayText) pbf.writeStringField(1, obj.displayText);
};

// Message.ButtonsMessage.Button.NativeFlowInfo ========================================

Message.ButtonsMessage.Button.NativeFlowInfo = {};

Message.ButtonsMessage.Button.NativeFlowInfo.read = function (pbf, end) {
    return pbf.readFields(Message.ButtonsMessage.Button.NativeFlowInfo._readField, {name: "", paramsJson: ""}, end);
};
Message.ButtonsMessage.Button.NativeFlowInfo._readField = function (tag, obj, pbf) {
    if (tag === 1) obj.name = pbf.readString();
    else if (tag === 2) obj.paramsJson = pbf.readString();
};
Message.ButtonsMessage.Button.NativeFlowInfo.write = function (obj, pbf) {
    if (obj.name) pbf.writeStringField(1, obj.name);
    if (obj.paramsJson) pbf.writeStringField(2, obj.paramsJson);
};

// Message.ButtonsResponseMessage ========================================

Message.ButtonsResponseMessage = {};

Message.ButtonsResponseMessage.read = function (pbf, end) {
    return pbf.readFields(Message.ButtonsResponseMessage._readField, {selectedButtonId: "", contextInfo: null, type: 0, selectedDisplayText: "", response: null}, end);
};
Message.ButtonsResponseMessage._readField = function (tag, obj, pbf) {
    if (tag === 1) obj.selectedButtonId = pbf.readString();
    else if (tag === 3) obj.contextInfo = ContextInfo.read(pbf, pbf.readVarint() + pbf.pos);
    else if (tag === 4) obj.type = pbf.readVarint();
    else if (tag === 2) obj.selectedDisplayText = pbf.readString(), obj.response = "selectedDisplayText";
};
Message.ButtonsResponseMessage.write = function (obj, pbf) {
    if (obj.selectedButtonId) pbf.writeStringField(1, obj.selectedButtonId);
    if (obj.contextInfo) pbf.writeMessage(3, ContextInfo.write, obj.contextInfo);
    if (obj.type) pbf.writeVarintField(4, obj.type);
    if (obj.selectedDisplayText) pbf.writeStringField(2, obj.selectedDisplayText);
};

Message.ButtonsResponseMessage.Type = {
    "UNKNOWN": {
        "value": 0,
        "options": {}
    },
    "DISPLAY_TEXT": {
        "value": 1,
        "options": {}
    }
};

// Message.Call ========================================

Message.Call = {};

Message.Call.read = function (pbf, end) {
    return pbf.readFields(Message.Call._readField, {callKey: null, conversionSource: "", conversionData: null, conversionDelaySeconds: 0}, end);
};
Message.Call._readField = function (tag, obj, pbf) {
    if (tag === 1) obj.callKey = pbf.readBytes();
    else if (tag === 2) obj.conversionSource = pbf.readString();
    else if (tag === 3) obj.conversionData = pbf.readBytes();
    else if (tag === 4) obj.conversionDelaySeconds = pbf.readVarint();
};
Message.Call.write = function (obj, pbf) {
    if (obj.callKey) pbf.writeBytesField(1, obj.callKey);
    if (obj.conversionSource) pbf.writeStringField(2, obj.conversionSource);
    if (obj.conversionData) pbf.writeBytesField(3, obj.conversionData);
    if (obj.conversionDelaySeconds) pbf.writeVarintField(4, obj.conversionDelaySeconds);
};

// Message.CancelPaymentRequestMessage ========================================

Message.CancelPaymentRequestMessage = {};

Message.CancelPaymentRequestMessage.read = function (pbf, end) {
    return pbf.readFields(Message.CancelPaymentRequestMessage._readField, {key: null}, end);
};
Message.CancelPaymentRequestMessage._readField = function (tag, obj, pbf) {
    if (tag === 1) obj.key = MessageKey.read(pbf, pbf.readVarint() + pbf.pos);
};
Message.CancelPaymentRequestMessage.write = function (obj, pbf) {
    if (obj.key) pbf.writeMessage(1, MessageKey.write, obj.key);
};

// Message.Chat ========================================

Message.Chat = {};

Message.Chat.read = function (pbf, end) {
    return pbf.readFields(Message.Chat._readField, {displayName: "", id: ""}, end);
};
Message.Chat._readField = function (tag, obj, pbf) {
    if (tag === 1) obj.displayName = pbf.readString();
    else if (tag === 2) obj.id = pbf.readString();
};
Message.Chat.write = function (obj, pbf) {
    if (obj.displayName) pbf.writeStringField(1, obj.displayName);
    if (obj.id) pbf.writeStringField(2, obj.id);
};

// Message.ContactMessage ========================================

Message.ContactMessage = {};

Message.ContactMessage.read = function (pbf, end) {
    return pbf.readFields(Message.ContactMessage._readField, {displayName: "", vcard: "", contextInfo: null}, end);
};
Message.ContactMessage._readField = function (tag, obj, pbf) {
    if (tag === 1) obj.displayName = pbf.readString();
    else if (tag === 16) obj.vcard = pbf.readString();
    else if (tag === 17) obj.contextInfo = ContextInfo.read(pbf, pbf.readVarint() + pbf.pos);
};
Message.ContactMessage.write = function (obj, pbf) {
    if (obj.displayName) pbf.writeStringField(1, obj.displayName);
    if (obj.vcard) pbf.writeStringField(16, obj.vcard);
    if (obj.contextInfo) pbf.writeMessage(17, ContextInfo.write, obj.contextInfo);
};

// Message.ContactsArrayMessage ========================================

Message.ContactsArrayMessage = {};

Message.ContactsArrayMessage.read = function (pbf, end) {
    return pbf.readFields(Message.ContactsArrayMessage._readField, {displayName: "", contacts: [], contextInfo: null}, end);
};
Message.ContactsArrayMessage._readField = function (tag, obj, pbf) {
    if (tag === 1) obj.displayName = pbf.readString();
    else if (tag === 2) obj.contacts.push(Message.ContactMessage.read(pbf, pbf.readVarint() + pbf.pos));
    else if (tag === 17) obj.contextInfo = ContextInfo.read(pbf, pbf.readVarint() + pbf.pos);
};
Message.ContactsArrayMessage.write = function (obj, pbf) {
    if (obj.displayName) pbf.writeStringField(1, obj.displayName);
    if (obj.contacts) for (var i = 0; i < obj.contacts.length; i++) pbf.writeMessage(2, Message.ContactMessage.write, obj.contacts[i]);
    if (obj.contextInfo) pbf.writeMessage(17, ContextInfo.write, obj.contextInfo);
};

// Message.DeclinePaymentRequestMessage ========================================

Message.DeclinePaymentRequestMessage = {};

Message.DeclinePaymentRequestMessage.read = function (pbf, end) {
    return pbf.readFields(Message.DeclinePaymentRequestMessage._readField, {key: null}, end);
};
Message.DeclinePaymentRequestMessage._readField = function (tag, obj, pbf) {
    if (tag === 1) obj.key = MessageKey.read(pbf, pbf.readVarint() + pbf.pos);
};
Message.DeclinePaymentRequestMessage.write = function (obj, pbf) {
    if (obj.key) pbf.writeMessage(1, MessageKey.write, obj.key);
};

// Message.DeviceSentMessage ========================================

Message.DeviceSentMessage = {};

Message.DeviceSentMessage.read = function (pbf, end) {
    return pbf.readFields(Message.DeviceSentMessage._readField, {destinationJid: "", message: null, phash: ""}, end);
};
Message.DeviceSentMessage._readField = function (tag, obj, pbf) {
    if (tag === 1) obj.destinationJid = pbf.readString();
    else if (tag === 2) obj.message = Message.read(pbf, pbf.readVarint() + pbf.pos);
    else if (tag === 3) obj.phash = pbf.readString();
};
Message.DeviceSentMessage.write = function (obj, pbf) {
    if (obj.destinationJid) pbf.writeStringField(1, obj.destinationJid);
    if (obj.message) pbf.writeMessage(2, Message.write, obj.message);
    if (obj.phash) pbf.writeStringField(3, obj.phash);
};

// Message.DocumentMessage ========================================

Message.DocumentMessage = {};

Message.DocumentMessage.read = function (pbf, end) {
    return pbf.readFields(Message.DocumentMessage._readField, {url: "", mimetype: "", title: "", fileSha256: null, fileLength: 0, pageCount: 0, mediaKey: null, fileName: "", fileEncSha256: null, directPath: "", mediaKeyTimestamp: 0, contactVcard: false, thumbnailDirectPath: "", thumbnailSha256: null, thumbnailEncSha256: null, jpegThumbnail: null, contextInfo: null, thumbnailHeight: 0, thumbnailWidth: 0, caption: ""}, end);
};
Message.DocumentMessage._readField = function (tag, obj, pbf) {
    if (tag === 1) obj.url = pbf.readString();
    else if (tag === 2) obj.mimetype = pbf.readString();
    else if (tag === 3) obj.title = pbf.readString();
    else if (tag === 4) obj.fileSha256 = pbf.readBytes();
    else if (tag === 5) obj.fileLength = pbf.readVarint();
    else if (tag === 6) obj.pageCount = pbf.readVarint();
    else if (tag === 7) obj.mediaKey = pbf.readBytes();
    else if (tag === 8) obj.fileName = pbf.readString();
    else if (tag === 9) obj.fileEncSha256 = pbf.readBytes();
    else if (tag === 10) obj.directPath = pbf.readString();
    else if (tag === 11) obj.mediaKeyTimestamp = pbf.readVarint(true);
    else if (tag === 12) obj.contactVcard = pbf.readBoolean();
    else if (tag === 13) obj.thumbnailDirectPath = pbf.readString();
    else if (tag === 14) obj.thumbnailSha256 = pbf.readBytes();
    else if (tag === 15) obj.thumbnailEncSha256 = pbf.readBytes();
    else if (tag === 16) obj.jpegThumbnail = pbf.readBytes();
    else if (tag === 17) obj.contextInfo = ContextInfo.read(pbf, pbf.readVarint() + pbf.pos);
    else if (tag === 18) obj.thumbnailHeight = pbf.readVarint();
    else if (tag === 19) obj.thumbnailWidth = pbf.readVarint();
    else if (tag === 20) obj.caption = pbf.readString();
};
Message.DocumentMessage.write = function (obj, pbf) {
    if (obj.url) pbf.writeStringField(1, obj.url);
    if (obj.mimetype) pbf.writeStringField(2, obj.mimetype);
    if (obj.title) pbf.writeStringField(3, obj.title);
    if (obj.fileSha256) pbf.writeBytesField(4, obj.fileSha256);
    if (obj.fileLength) pbf.writeVarintField(5, obj.fileLength);
    if (obj.pageCount) pbf.writeVarintField(6, obj.pageCount);
    if (obj.mediaKey) pbf.writeBytesField(7, obj.mediaKey);
    if (obj.fileName) pbf.writeStringField(8, obj.fileName);
    if (obj.fileEncSha256) pbf.writeBytesField(9, obj.fileEncSha256);
    if (obj.directPath) pbf.writeStringField(10, obj.directPath);
    if (obj.mediaKeyTimestamp) pbf.writeVarintField(11, obj.mediaKeyTimestamp);
    if (obj.contactVcard) pbf.writeBooleanField(12, obj.contactVcard);
    if (obj.thumbnailDirectPath) pbf.writeStringField(13, obj.thumbnailDirectPath);
    if (obj.thumbnailSha256) pbf.writeBytesField(14, obj.thumbnailSha256);
    if (obj.thumbnailEncSha256) pbf.writeBytesField(15, obj.thumbnailEncSha256);
    if (obj.jpegThumbnail) pbf.writeBytesField(16, obj.jpegThumbnail);
    if (obj.contextInfo) pbf.writeMessage(17, ContextInfo.write, obj.contextInfo);
    if (obj.thumbnailHeight) pbf.writeVarintField(18, obj.thumbnailHeight);
    if (obj.thumbnailWidth) pbf.writeVarintField(19, obj.thumbnailWidth);
    if (obj.caption) pbf.writeStringField(20, obj.caption);
};

// Message.EncReactionMessage ========================================

Message.EncReactionMessage = {};

Message.EncReactionMessage.read = function (pbf, end) {
    return pbf.readFields(Message.EncReactionMessage._readField, {targetMessageKey: null, encPayload: null, encIv: null}, end);
};
Message.EncReactionMessage._readField = function (tag, obj, pbf) {
    if (tag === 1) obj.targetMessageKey = MessageKey.read(pbf, pbf.readVarint() + pbf.pos);
    else if (tag === 2) obj.encPayload = pbf.readBytes();
    else if (tag === 3) obj.encIv = pbf.readBytes();
};
Message.EncReactionMessage.write = function (obj, pbf) {
    if (obj.targetMessageKey) pbf.writeMessage(1, MessageKey.write, obj.targetMessageKey);
    if (obj.encPayload) pbf.writeBytesField(2, obj.encPayload);
    if (obj.encIv) pbf.writeBytesField(3, obj.encIv);
};

// Message.ExtendedTextMessage ========================================

Message.ExtendedTextMessage = {};

Message.ExtendedTextMessage.read = function (pbf, end) {
    return pbf.readFields(Message.ExtendedTextMessage._readField, {text: "", matchedText: "", canonicalUrl: "", description: "", title: "", textArgb: 0, backgroundArgb: 0, font: 0, previewType: 0, jpegThumbnail: null, contextInfo: null, doNotPlayInline: false, thumbnailDirectPath: "", thumbnailSha256: null, thumbnailEncSha256: null, mediaKey: null, mediaKeyTimestamp: 0, thumbnailHeight: 0, thumbnailWidth: 0, inviteLinkGroupType: 0, inviteLinkParentGroupSubjectV2: "", inviteLinkParentGroupThumbnailV2: null, inviteLinkGroupTypeV2: 0, viewOnce: false}, end);
};
Message.ExtendedTextMessage._readField = function (tag, obj, pbf) {
    if (tag === 1) obj.text = pbf.readString();
    else if (tag === 2) obj.matchedText = pbf.readString();
    else if (tag === 4) obj.canonicalUrl = pbf.readString();
    else if (tag === 5) obj.description = pbf.readString();
    else if (tag === 6) obj.title = pbf.readString();
    else if (tag === 7) obj.textArgb = pbf.readFixed32();
    else if (tag === 8) obj.backgroundArgb = pbf.readFixed32();
    else if (tag === 9) obj.font = pbf.readVarint();
    else if (tag === 10) obj.previewType = pbf.readVarint();
    else if (tag === 16) obj.jpegThumbnail = pbf.readBytes();
    else if (tag === 17) obj.contextInfo = ContextInfo.read(pbf, pbf.readVarint() + pbf.pos);
    else if (tag === 18) obj.doNotPlayInline = pbf.readBoolean();
    else if (tag === 19) obj.thumbnailDirectPath = pbf.readString();
    else if (tag === 20) obj.thumbnailSha256 = pbf.readBytes();
    else if (tag === 21) obj.thumbnailEncSha256 = pbf.readBytes();
    else if (tag === 22) obj.mediaKey = pbf.readBytes();
    else if (tag === 23) obj.mediaKeyTimestamp = pbf.readVarint(true);
    else if (tag === 24) obj.thumbnailHeight = pbf.readVarint();
    else if (tag === 25) obj.thumbnailWidth = pbf.readVarint();
    else if (tag === 26) obj.inviteLinkGroupType = pbf.readVarint();
    else if (tag === 27) obj.inviteLinkParentGroupSubjectV2 = pbf.readString();
    else if (tag === 28) obj.inviteLinkParentGroupThumbnailV2 = pbf.readBytes();
    else if (tag === 29) obj.inviteLinkGroupTypeV2 = pbf.readVarint();
    else if (tag === 30) obj.viewOnce = pbf.readBoolean();
};
Message.ExtendedTextMessage.write = function (obj, pbf) {
    if (obj.text) pbf.writeStringField(1, obj.text);
    if (obj.matchedText) pbf.writeStringField(2, obj.matchedText);
    if (obj.canonicalUrl) pbf.writeStringField(4, obj.canonicalUrl);
    if (obj.description) pbf.writeStringField(5, obj.description);
    if (obj.title) pbf.writeStringField(6, obj.title);
    if (obj.textArgb) pbf.writeFixed32Field(7, obj.textArgb);
    if (obj.backgroundArgb) pbf.writeFixed32Field(8, obj.backgroundArgb);
    if (obj.font) pbf.writeVarintField(9, obj.font);
    if (obj.previewType) pbf.writeVarintField(10, obj.previewType);
    if (obj.jpegThumbnail) pbf.writeBytesField(16, obj.jpegThumbnail);
    if (obj.contextInfo) pbf.writeMessage(17, ContextInfo.write, obj.contextInfo);
    if (obj.doNotPlayInline) pbf.writeBooleanField(18, obj.doNotPlayInline);
    if (obj.thumbnailDirectPath) pbf.writeStringField(19, obj.thumbnailDirectPath);
    if (obj.thumbnailSha256) pbf.writeBytesField(20, obj.thumbnailSha256);
    if (obj.thumbnailEncSha256) pbf.writeBytesField(21, obj.thumbnailEncSha256);
    if (obj.mediaKey) pbf.writeBytesField(22, obj.mediaKey);
    if (obj.mediaKeyTimestamp) pbf.writeVarintField(23, obj.mediaKeyTimestamp);
    if (obj.thumbnailHeight) pbf.writeVarintField(24, obj.thumbnailHeight);
    if (obj.thumbnailWidth) pbf.writeVarintField(25, obj.thumbnailWidth);
    if (obj.inviteLinkGroupType) pbf.writeVarintField(26, obj.inviteLinkGroupType);
    if (obj.inviteLinkParentGroupSubjectV2) pbf.writeStringField(27, obj.inviteLinkParentGroupSubjectV2);
    if (obj.inviteLinkParentGroupThumbnailV2) pbf.writeBytesField(28, obj.inviteLinkParentGroupThumbnailV2);
    if (obj.inviteLinkGroupTypeV2) pbf.writeVarintField(29, obj.inviteLinkGroupTypeV2);
    if (obj.viewOnce) pbf.writeBooleanField(30, obj.viewOnce);
};

Message.ExtendedTextMessage.FontType = {
    "SANS_SERIF": {
        "value": 0,
        "options": {}
    },
    "SERIF": {
        "value": 1,
        "options": {}
    },
    "NORICAN_REGULAR": {
        "value": 2,
        "options": {}
    },
    "BRYNDAN_WRITE": {
        "value": 3,
        "options": {}
    },
    "BEBASNEUE_REGULAR": {
        "value": 4,
        "options": {}
    },
    "OSWALD_HEAVY": {
        "value": 5,
        "options": {}
    },
    "SYSTEM_BOLD": {
        "value": 6,
        "options": {}
    },
    "MORNINGBREEZE_REGULAR": {
        "value": 7,
        "options": {}
    },
    "CALISTOGA_REGULAR": {
        "value": 8,
        "options": {}
    },
    "EXO2_EXTRABOLD": {
        "value": 9,
        "options": {}
    },
    "COURIERPRIME_BOLD": {
        "value": 10,
        "options": {}
    }
};

Message.ExtendedTextMessage.InviteLinkGroupType = {
    "DEFAULT": {
        "value": 0,
        "options": {}
    },
    "PARENT": {
        "value": 1,
        "options": {}
    },
    "SUB": {
        "value": 2,
        "options": {}
    },
    "DEFAULT_SUB": {
        "value": 3,
        "options": {}
    }
};

Message.ExtendedTextMessage.PreviewType = {
    "NONE": {
        "value": 0,
        "options": {}
    },
    "VIDEO": {
        "value": 1,
        "options": {}
    }
};

// Message.FutureProofMessage ========================================

Message.FutureProofMessage = {};

Message.FutureProofMessage.read = function (pbf, end) {
    return pbf.readFields(Message.FutureProofMessage._readField, {message: null}, end);
};
Message.FutureProofMessage._readField = function (tag, obj, pbf) {
    if (tag === 1) obj.message = Message.read(pbf, pbf.readVarint() + pbf.pos);
};
Message.FutureProofMessage.write = function (obj, pbf) {
    if (obj.message) pbf.writeMessage(1, Message.write, obj.message);
};

// Message.GroupInviteMessage ========================================

Message.GroupInviteMessage = {};

Message.GroupInviteMessage.read = function (pbf, end) {
    return pbf.readFields(Message.GroupInviteMessage._readField, {groupJid: "", inviteCode: "", inviteExpiration: 0, groupName: "", jpegThumbnail: null, caption: "", contextInfo: null, groupType: 0}, end);
};
Message.GroupInviteMessage._readField = function (tag, obj, pbf) {
    if (tag === 1) obj.groupJid = pbf.readString();
    else if (tag === 2) obj.inviteCode = pbf.readString();
    else if (tag === 3) obj.inviteExpiration = pbf.readVarint(true);
    else if (tag === 4) obj.groupName = pbf.readString();
    else if (tag === 5) obj.jpegThumbnail = pbf.readBytes();
    else if (tag === 6) obj.caption = pbf.readString();
    else if (tag === 7) obj.contextInfo = ContextInfo.read(pbf, pbf.readVarint() + pbf.pos);
    else if (tag === 8) obj.groupType = pbf.readVarint();
};
Message.GroupInviteMessage.write = function (obj, pbf) {
    if (obj.groupJid) pbf.writeStringField(1, obj.groupJid);
    if (obj.inviteCode) pbf.writeStringField(2, obj.inviteCode);
    if (obj.inviteExpiration) pbf.writeVarintField(3, obj.inviteExpiration);
    if (obj.groupName) pbf.writeStringField(4, obj.groupName);
    if (obj.jpegThumbnail) pbf.writeBytesField(5, obj.jpegThumbnail);
    if (obj.caption) pbf.writeStringField(6, obj.caption);
    if (obj.contextInfo) pbf.writeMessage(7, ContextInfo.write, obj.contextInfo);
    if (obj.groupType) pbf.writeVarintField(8, obj.groupType);
};

Message.GroupInviteMessage.GroupType = {
    "DEFAULT": {
        "value": 0,
        "options": {}
    },
    "PARENT": {
        "value": 1,
        "options": {}
    }
};

// Message.HighlyStructuredMessage ========================================

Message.HighlyStructuredMessage = {};

Message.HighlyStructuredMessage.read = function (pbf, end) {
    return pbf.readFields(Message.HighlyStructuredMessage._readField, {namespace: "", elementName: "", params: [], fallbackLg: "", fallbackLc: "", localizableParams: [], deterministicLg: "", deterministicLc: "", hydratedHsm: null}, end);
};
Message.HighlyStructuredMessage._readField = function (tag, obj, pbf) {
    if (tag === 1) obj.namespace = pbf.readString();
    else if (tag === 2) obj.elementName = pbf.readString();
    else if (tag === 3) obj.params.push(pbf.readString());
    else if (tag === 4) obj.fallbackLg = pbf.readString();
    else if (tag === 5) obj.fallbackLc = pbf.readString();
    else if (tag === 6) obj.localizableParams.push(Message.HighlyStructuredMessage.HSMLocalizableParameter.read(pbf, pbf.readVarint() + pbf.pos));
    else if (tag === 7) obj.deterministicLg = pbf.readString();
    else if (tag === 8) obj.deterministicLc = pbf.readString();
    else if (tag === 9) obj.hydratedHsm = Message.TemplateMessage.read(pbf, pbf.readVarint() + pbf.pos);
};
Message.HighlyStructuredMessage.write = function (obj, pbf) {
    if (obj.namespace) pbf.writeStringField(1, obj.namespace);
    if (obj.elementName) pbf.writeStringField(2, obj.elementName);
    if (obj.params) for (var i = 0; i < obj.params.length; i++) pbf.writeStringField(3, obj.params[i]);
    if (obj.fallbackLg) pbf.writeStringField(4, obj.fallbackLg);
    if (obj.fallbackLc) pbf.writeStringField(5, obj.fallbackLc);
    if (obj.localizableParams) for (i = 0; i < obj.localizableParams.length; i++) pbf.writeMessage(6, Message.HighlyStructuredMessage.HSMLocalizableParameter.write, obj.localizableParams[i]);
    if (obj.deterministicLg) pbf.writeStringField(7, obj.deterministicLg);
    if (obj.deterministicLc) pbf.writeStringField(8, obj.deterministicLc);
    if (obj.hydratedHsm) pbf.writeMessage(9, Message.TemplateMessage.write, obj.hydratedHsm);
};

// Message.HighlyStructuredMessage.HSMLocalizableParameter ========================================

Message.HighlyStructuredMessage.HSMLocalizableParameter = {};

Message.HighlyStructuredMessage.HSMLocalizableParameter.read = function (pbf, end) {
    return pbf.readFields(Message.HighlyStructuredMessage.HSMLocalizableParameter._readField, {default: "", currency: null, paramOneof: null, dateTime: null}, end);
};
Message.HighlyStructuredMessage.HSMLocalizableParameter._readField = function (tag, obj, pbf) {
    if (tag === 1) obj.default = pbf.readString();
    else if (tag === 2) obj.currency = Message.HighlyStructuredMessage.HSMLocalizableParameter.HSMCurrency.read(pbf, pbf.readVarint() + pbf.pos), obj.paramOneof = "currency";
    else if (tag === 3) obj.dateTime = Message.HighlyStructuredMessage.HSMLocalizableParameter.HSMDateTime.read(pbf, pbf.readVarint() + pbf.pos), obj.paramOneof = "dateTime";
};
Message.HighlyStructuredMessage.HSMLocalizableParameter.write = function (obj, pbf) {
    if (obj.default) pbf.writeStringField(1, obj.default);
    if (obj.currency) pbf.writeMessage(2, Message.HighlyStructuredMessage.HSMLocalizableParameter.HSMCurrency.write, obj.currency);
    if (obj.dateTime) pbf.writeMessage(3, Message.HighlyStructuredMessage.HSMLocalizableParameter.HSMDateTime.write, obj.dateTime);
};

// Message.HighlyStructuredMessage.HSMLocalizableParameter.HSMCurrency ========================================

Message.HighlyStructuredMessage.HSMLocalizableParameter.HSMCurrency = {};

Message.HighlyStructuredMessage.HSMLocalizableParameter.HSMCurrency.read = function (pbf, end) {
    return pbf.readFields(Message.HighlyStructuredMessage.HSMLocalizableParameter.HSMCurrency._readField, {currencyCode: "", amount1000: 0}, end);
};
Message.HighlyStructuredMessage.HSMLocalizableParameter.HSMCurrency._readField = function (tag, obj, pbf) {
    if (tag === 1) obj.currencyCode = pbf.readString();
    else if (tag === 2) obj.amount1000 = pbf.readVarint(true);
};
Message.HighlyStructuredMessage.HSMLocalizableParameter.HSMCurrency.write = function (obj, pbf) {
    if (obj.currencyCode) pbf.writeStringField(1, obj.currencyCode);
    if (obj.amount1000) pbf.writeVarintField(2, obj.amount1000);
};

// Message.HighlyStructuredMessage.HSMLocalizableParameter.HSMDateTime ========================================

Message.HighlyStructuredMessage.HSMLocalizableParameter.HSMDateTime = {};

Message.HighlyStructuredMessage.HSMLocalizableParameter.HSMDateTime.read = function (pbf, end) {
    return pbf.readFields(Message.HighlyStructuredMessage.HSMLocalizableParameter.HSMDateTime._readField, {component: null, datetimeOneof: null, unixEpoch: null}, end);
};
Message.HighlyStructuredMessage.HSMLocalizableParameter.HSMDateTime._readField = function (tag, obj, pbf) {
    if (tag === 1) obj.component = Message.HighlyStructuredMessage.HSMLocalizableParameter.HSMDateTime.HSMDateTimeComponent.read(pbf, pbf.readVarint() + pbf.pos), obj.datetimeOneof = "component";
    else if (tag === 2) obj.unixEpoch = Message.HighlyStructuredMessage.HSMLocalizableParameter.HSMDateTime.HSMDateTimeUnixEpoch.read(pbf, pbf.readVarint() + pbf.pos), obj.datetimeOneof = "unixEpoch";
};
Message.HighlyStructuredMessage.HSMLocalizableParameter.HSMDateTime.write = function (obj, pbf) {
    if (obj.component) pbf.writeMessage(1, Message.HighlyStructuredMessage.HSMLocalizableParameter.HSMDateTime.HSMDateTimeComponent.write, obj.component);
    if (obj.unixEpoch) pbf.writeMessage(2, Message.HighlyStructuredMessage.HSMLocalizableParameter.HSMDateTime.HSMDateTimeUnixEpoch.write, obj.unixEpoch);
};

// Message.HighlyStructuredMessage.HSMLocalizableParameter.HSMDateTime.HSMDateTimeComponent ========================================

Message.HighlyStructuredMessage.HSMLocalizableParameter.HSMDateTime.HSMDateTimeComponent = {};

Message.HighlyStructuredMessage.HSMLocalizableParameter.HSMDateTime.HSMDateTimeComponent.read = function (pbf, end) {
    return pbf.readFields(Message.HighlyStructuredMessage.HSMLocalizableParameter.HSMDateTime.HSMDateTimeComponent._readField, {dayOfWeek: 0, year: 0, month: 0, dayOfMonth: 0, hour: 0, minute: 0, calendar: 0}, end);
};
Message.HighlyStructuredMessage.HSMLocalizableParameter.HSMDateTime.HSMDateTimeComponent._readField = function (tag, obj, pbf) {
    if (tag === 1) obj.dayOfWeek = pbf.readVarint();
    else if (tag === 2) obj.year = pbf.readVarint();
    else if (tag === 3) obj.month = pbf.readVarint();
    else if (tag === 4) obj.dayOfMonth = pbf.readVarint();
    else if (tag === 5) obj.hour = pbf.readVarint();
    else if (tag === 6) obj.minute = pbf.readVarint();
    else if (tag === 7) obj.calendar = pbf.readVarint();
};
Message.HighlyStructuredMessage.HSMLocalizableParameter.HSMDateTime.HSMDateTimeComponent.write = function (obj, pbf) {
    if (obj.dayOfWeek) pbf.writeVarintField(1, obj.dayOfWeek);
    if (obj.year) pbf.writeVarintField(2, obj.year);
    if (obj.month) pbf.writeVarintField(3, obj.month);
    if (obj.dayOfMonth) pbf.writeVarintField(4, obj.dayOfMonth);
    if (obj.hour) pbf.writeVarintField(5, obj.hour);
    if (obj.minute) pbf.writeVarintField(6, obj.minute);
    if (obj.calendar) pbf.writeVarintField(7, obj.calendar);
};

Message.HighlyStructuredMessage.HSMLocalizableParameter.HSMDateTime.HSMDateTimeComponent.CalendarType = {
    "GREGORIAN": {
        "value": 1,
        "options": {}
    },
    "SOLAR_HIJRI": {
        "value": 2,
        "options": {}
    }
};

Message.HighlyStructuredMessage.HSMLocalizableParameter.HSMDateTime.HSMDateTimeComponent.DayOfWeekType = {
    "MONDAY": {
        "value": 1,
        "options": {}
    },
    "TUESDAY": {
        "value": 2,
        "options": {}
    },
    "WEDNESDAY": {
        "value": 3,
        "options": {}
    },
    "THURSDAY": {
        "value": 4,
        "options": {}
    },
    "FRIDAY": {
        "value": 5,
        "options": {}
    },
    "SATURDAY": {
        "value": 6,
        "options": {}
    },
    "SUNDAY": {
        "value": 7,
        "options": {}
    }
};

// Message.HighlyStructuredMessage.HSMLocalizableParameter.HSMDateTime.HSMDateTimeUnixEpoch ========================================

Message.HighlyStructuredMessage.HSMLocalizableParameter.HSMDateTime.HSMDateTimeUnixEpoch = {};

Message.HighlyStructuredMessage.HSMLocalizableParameter.HSMDateTime.HSMDateTimeUnixEpoch.read = function (pbf, end) {
    return pbf.readFields(Message.HighlyStructuredMessage.HSMLocalizableParameter.HSMDateTime.HSMDateTimeUnixEpoch._readField, {timestamp: 0}, end);
};
Message.HighlyStructuredMessage.HSMLocalizableParameter.HSMDateTime.HSMDateTimeUnixEpoch._readField = function (tag, obj, pbf) {
    if (tag === 1) obj.timestamp = pbf.readVarint(true);
};
Message.HighlyStructuredMessage.HSMLocalizableParameter.HSMDateTime.HSMDateTimeUnixEpoch.write = function (obj, pbf) {
    if (obj.timestamp) pbf.writeVarintField(1, obj.timestamp);
};

// Message.HistorySyncNotification ========================================

Message.HistorySyncNotification = {};

Message.HistorySyncNotification.read = function (pbf, end) {
    return pbf.readFields(Message.HistorySyncNotification._readField, {fileSha256: null, fileLength: 0, mediaKey: null, fileEncSha256: null, directPath: "", syncType: 0, chunkOrder: 0, originalMessageId: "", progress: 0, oldestMsgInChunkTimestampSec: 0, initialHistBootstrapInlinePayload: null, peerDataRequestSessionId: ""}, end);
};
Message.HistorySyncNotification._readField = function (tag, obj, pbf) {
    if (tag === 1) obj.fileSha256 = pbf.readBytes();
    else if (tag === 2) obj.fileLength = pbf.readVarint();
    else if (tag === 3) obj.mediaKey = pbf.readBytes();
    else if (tag === 4) obj.fileEncSha256 = pbf.readBytes();
    else if (tag === 5) obj.directPath = pbf.readString();
    else if (tag === 6) obj.syncType = pbf.readVarint();
    else if (tag === 7) obj.chunkOrder = pbf.readVarint();
    else if (tag === 8) obj.originalMessageId = pbf.readString();
    else if (tag === 9) obj.progress = pbf.readVarint();
    else if (tag === 10) obj.oldestMsgInChunkTimestampSec = pbf.readVarint(true);
    else if (tag === 11) obj.initialHistBootstrapInlinePayload = pbf.readBytes();
    else if (tag === 12) obj.peerDataRequestSessionId = pbf.readString();
};
Message.HistorySyncNotification.write = function (obj, pbf) {
    if (obj.fileSha256) pbf.writeBytesField(1, obj.fileSha256);
    if (obj.fileLength) pbf.writeVarintField(2, obj.fileLength);
    if (obj.mediaKey) pbf.writeBytesField(3, obj.mediaKey);
    if (obj.fileEncSha256) pbf.writeBytesField(4, obj.fileEncSha256);
    if (obj.directPath) pbf.writeStringField(5, obj.directPath);
    if (obj.syncType) pbf.writeVarintField(6, obj.syncType);
    if (obj.chunkOrder) pbf.writeVarintField(7, obj.chunkOrder);
    if (obj.originalMessageId) pbf.writeStringField(8, obj.originalMessageId);
    if (obj.progress) pbf.writeVarintField(9, obj.progress);
    if (obj.oldestMsgInChunkTimestampSec) pbf.writeVarintField(10, obj.oldestMsgInChunkTimestampSec);
    if (obj.initialHistBootstrapInlinePayload) pbf.writeBytesField(11, obj.initialHistBootstrapInlinePayload);
    if (obj.peerDataRequestSessionId) pbf.writeStringField(12, obj.peerDataRequestSessionId);
};

Message.HistorySyncNotification.HistorySyncType = {
    "INITIAL_BOOTSTRAP": {
        "value": 0,
        "options": {}
    },
    "INITIAL_STATUS_V3": {
        "value": 1,
        "options": {}
    },
    "FULL": {
        "value": 2,
        "options": {}
    },
    "RECENT": {
        "value": 3,
        "options": {}
    },
    "PUSH_NAME": {
        "value": 4,
        "options": {}
    },
    "NON_BLOCKING_DATA": {
        "value": 5,
        "options": {}
    },
    "ON_DEMAND": {
        "value": 6,
        "options": {}
    }
};

// Message.ImageMessage ========================================

Message.ImageMessage = {};

Message.ImageMessage.read = function (pbf, end) {
    return pbf.readFields(Message.ImageMessage._readField, {url: "", mimetype: "", caption: "", fileSha256: null, fileLength: 0, height: 0, width: 0, mediaKey: null, fileEncSha256: null, interactiveAnnotations: [], directPath: "", mediaKeyTimestamp: 0, jpegThumbnail: null, contextInfo: null, firstScanSidecar: null, firstScanLength: 0, experimentGroupId: 0, scansSidecar: null, scanLengths: [], midQualityFileSha256: null, midQualityFileEncSha256: null, viewOnce: false, thumbnailDirectPath: "", thumbnailSha256: null, thumbnailEncSha256: null, staticUrl: ""}, end);
};
Message.ImageMessage._readField = function (tag, obj, pbf) {
    if (tag === 1) obj.url = pbf.readString();
    else if (tag === 2) obj.mimetype = pbf.readString();
    else if (tag === 3) obj.caption = pbf.readString();
    else if (tag === 4) obj.fileSha256 = pbf.readBytes();
    else if (tag === 5) obj.fileLength = pbf.readVarint();
    else if (tag === 6) obj.height = pbf.readVarint();
    else if (tag === 7) obj.width = pbf.readVarint();
    else if (tag === 8) obj.mediaKey = pbf.readBytes();
    else if (tag === 9) obj.fileEncSha256 = pbf.readBytes();
    else if (tag === 10) obj.interactiveAnnotations.push(InteractiveAnnotation.read(pbf, pbf.readVarint() + pbf.pos));
    else if (tag === 11) obj.directPath = pbf.readString();
    else if (tag === 12) obj.mediaKeyTimestamp = pbf.readVarint(true);
    else if (tag === 16) obj.jpegThumbnail = pbf.readBytes();
    else if (tag === 17) obj.contextInfo = ContextInfo.read(pbf, pbf.readVarint() + pbf.pos);
    else if (tag === 18) obj.firstScanSidecar = pbf.readBytes();
    else if (tag === 19) obj.firstScanLength = pbf.readVarint();
    else if (tag === 20) obj.experimentGroupId = pbf.readVarint();
    else if (tag === 21) obj.scansSidecar = pbf.readBytes();
    else if (tag === 22) pbf.readPackedVarint(obj.scanLengths);
    else if (tag === 23) obj.midQualityFileSha256 = pbf.readBytes();
    else if (tag === 24) obj.midQualityFileEncSha256 = pbf.readBytes();
    else if (tag === 25) obj.viewOnce = pbf.readBoolean();
    else if (tag === 26) obj.thumbnailDirectPath = pbf.readString();
    else if (tag === 27) obj.thumbnailSha256 = pbf.readBytes();
    else if (tag === 28) obj.thumbnailEncSha256 = pbf.readBytes();
    else if (tag === 29) obj.staticUrl = pbf.readString();
};
Message.ImageMessage.write = function (obj, pbf) {
    if (obj.url) pbf.writeStringField(1, obj.url);
    if (obj.mimetype) pbf.writeStringField(2, obj.mimetype);
    if (obj.caption) pbf.writeStringField(3, obj.caption);
    if (obj.fileSha256) pbf.writeBytesField(4, obj.fileSha256);
    if (obj.fileLength) pbf.writeVarintField(5, obj.fileLength);
    if (obj.height) pbf.writeVarintField(6, obj.height);
    if (obj.width) pbf.writeVarintField(7, obj.width);
    if (obj.mediaKey) pbf.writeBytesField(8, obj.mediaKey);
    if (obj.fileEncSha256) pbf.writeBytesField(9, obj.fileEncSha256);
    if (obj.interactiveAnnotations) for (var i = 0; i < obj.interactiveAnnotations.length; i++) pbf.writeMessage(10, InteractiveAnnotation.write, obj.interactiveAnnotations[i]);
    if (obj.directPath) pbf.writeStringField(11, obj.directPath);
    if (obj.mediaKeyTimestamp) pbf.writeVarintField(12, obj.mediaKeyTimestamp);
    if (obj.jpegThumbnail) pbf.writeBytesField(16, obj.jpegThumbnail);
    if (obj.contextInfo) pbf.writeMessage(17, ContextInfo.write, obj.contextInfo);
    if (obj.firstScanSidecar) pbf.writeBytesField(18, obj.firstScanSidecar);
    if (obj.firstScanLength) pbf.writeVarintField(19, obj.firstScanLength);
    if (obj.experimentGroupId) pbf.writeVarintField(20, obj.experimentGroupId);
    if (obj.scansSidecar) pbf.writeBytesField(21, obj.scansSidecar);
    if (obj.scanLengths) for (i = 0; i < obj.scanLengths.length; i++) pbf.writeVarintField(22, obj.scanLengths[i]);
    if (obj.midQualityFileSha256) pbf.writeBytesField(23, obj.midQualityFileSha256);
    if (obj.midQualityFileEncSha256) pbf.writeBytesField(24, obj.midQualityFileEncSha256);
    if (obj.viewOnce) pbf.writeBooleanField(25, obj.viewOnce);
    if (obj.thumbnailDirectPath) pbf.writeStringField(26, obj.thumbnailDirectPath);
    if (obj.thumbnailSha256) pbf.writeBytesField(27, obj.thumbnailSha256);
    if (obj.thumbnailEncSha256) pbf.writeBytesField(28, obj.thumbnailEncSha256);
    if (obj.staticUrl) pbf.writeStringField(29, obj.staticUrl);
};

// Message.InitialSecurityNotificationSettingSync ========================================

Message.InitialSecurityNotificationSettingSync = {};

Message.InitialSecurityNotificationSettingSync.read = function (pbf, end) {
    return pbf.readFields(Message.InitialSecurityNotificationSettingSync._readField, {securityNotificationEnabled: false}, end);
};
Message.InitialSecurityNotificationSettingSync._readField = function (tag, obj, pbf) {
    if (tag === 1) obj.securityNotificationEnabled = pbf.readBoolean();
};
Message.InitialSecurityNotificationSettingSync.write = function (obj, pbf) {
    if (obj.securityNotificationEnabled) pbf.writeBooleanField(1, obj.securityNotificationEnabled);
};

// Message.InteractiveMessage ========================================

Message.InteractiveMessage = {};

Message.InteractiveMessage.read = function (pbf, end) {
    return pbf.readFields(Message.InteractiveMessage._readField, {header: null, body: null, footer: null, contextInfo: null, shopStorefrontMessage: null, interactiveMessage: null, collectionMessage: null, nativeFlowMessage: null}, end);
};
Message.InteractiveMessage._readField = function (tag, obj, pbf) {
    if (tag === 1) obj.header = Message.InteractiveMessage.Header.read(pbf, pbf.readVarint() + pbf.pos);
    else if (tag === 2) obj.body = Message.InteractiveMessage.Body.read(pbf, pbf.readVarint() + pbf.pos);
    else if (tag === 3) obj.footer = Message.InteractiveMessage.Footer.read(pbf, pbf.readVarint() + pbf.pos);
    else if (tag === 15) obj.contextInfo = ContextInfo.read(pbf, pbf.readVarint() + pbf.pos);
    else if (tag === 4) obj.shopStorefrontMessage = Message.InteractiveMessage.ShopMessage.read(pbf, pbf.readVarint() + pbf.pos), obj.interactiveMessage = "shopStorefrontMessage";
    else if (tag === 5) obj.collectionMessage = Message.InteractiveMessage.CollectionMessage.read(pbf, pbf.readVarint() + pbf.pos), obj.interactiveMessage = "collectionMessage";
    else if (tag === 6) obj.nativeFlowMessage = Message.InteractiveMessage.NativeFlowMessage.read(pbf, pbf.readVarint() + pbf.pos), obj.interactiveMessage = "nativeFlowMessage";
};
Message.InteractiveMessage.write = function (obj, pbf) {
    if (obj.header) pbf.writeMessage(1, Message.InteractiveMessage.Header.write, obj.header);
    if (obj.body) pbf.writeMessage(2, Message.InteractiveMessage.Body.write, obj.body);
    if (obj.footer) pbf.writeMessage(3, Message.InteractiveMessage.Footer.write, obj.footer);
    if (obj.contextInfo) pbf.writeMessage(15, ContextInfo.write, obj.contextInfo);
    if (obj.shopStorefrontMessage) pbf.writeMessage(4, Message.InteractiveMessage.ShopMessage.write, obj.shopStorefrontMessage);
    if (obj.collectionMessage) pbf.writeMessage(5, Message.InteractiveMessage.CollectionMessage.write, obj.collectionMessage);
    if (obj.nativeFlowMessage) pbf.writeMessage(6, Message.InteractiveMessage.NativeFlowMessage.write, obj.nativeFlowMessage);
};

// Message.InteractiveMessage.Body ========================================

Message.InteractiveMessage.Body = {};

Message.InteractiveMessage.Body.read = function (pbf, end) {
    return pbf.readFields(Message.InteractiveMessage.Body._readField, {text: ""}, end);
};
Message.InteractiveMessage.Body._readField = function (tag, obj, pbf) {
    if (tag === 1) obj.text = pbf.readString();
};
Message.InteractiveMessage.Body.write = function (obj, pbf) {
    if (obj.text) pbf.writeStringField(1, obj.text);
};

// Message.InteractiveMessage.CollectionMessage ========================================

Message.InteractiveMessage.CollectionMessage = {};

Message.InteractiveMessage.CollectionMessage.read = function (pbf, end) {
    return pbf.readFields(Message.InteractiveMessage.CollectionMessage._readField, {bizJid: "", id: "", messageVersion: 0}, end);
};
Message.InteractiveMessage.CollectionMessage._readField = function (tag, obj, pbf) {
    if (tag === 1) obj.bizJid = pbf.readString();
    else if (tag === 2) obj.id = pbf.readString();
    else if (tag === 3) obj.messageVersion = pbf.readVarint(true);
};
Message.InteractiveMessage.CollectionMessage.write = function (obj, pbf) {
    if (obj.bizJid) pbf.writeStringField(1, obj.bizJid);
    if (obj.id) pbf.writeStringField(2, obj.id);
    if (obj.messageVersion) pbf.writeVarintField(3, obj.messageVersion);
};

// Message.InteractiveMessage.Footer ========================================

Message.InteractiveMessage.Footer = {};

Message.InteractiveMessage.Footer.read = function (pbf, end) {
    return pbf.readFields(Message.InteractiveMessage.Footer._readField, {text: ""}, end);
};
Message.InteractiveMessage.Footer._readField = function (tag, obj, pbf) {
    if (tag === 1) obj.text = pbf.readString();
};
Message.InteractiveMessage.Footer.write = function (obj, pbf) {
    if (obj.text) pbf.writeStringField(1, obj.text);
};

// Message.InteractiveMessage.Header ========================================

Message.InteractiveMessage.Header = {};

Message.InteractiveMessage.Header.read = function (pbf, end) {
    return pbf.readFields(Message.InteractiveMessage.Header._readField, {title: "", subtitle: "", hasMediaAttachment: false, documentMessage: null, media: null, imageMessage: null, jpegThumbnail: null, videoMessage: null, locationMessage: null}, end);
};
Message.InteractiveMessage.Header._readField = function (tag, obj, pbf) {
    if (tag === 1) obj.title = pbf.readString();
    else if (tag === 2) obj.subtitle = pbf.readString();
    else if (tag === 5) obj.hasMediaAttachment = pbf.readBoolean();
    else if (tag === 3) obj.documentMessage = Message.DocumentMessage.read(pbf, pbf.readVarint() + pbf.pos), obj.media = "documentMessage";
    else if (tag === 4) obj.imageMessage = Message.ImageMessage.read(pbf, pbf.readVarint() + pbf.pos), obj.media = "imageMessage";
    else if (tag === 6) obj.jpegThumbnail = pbf.readBytes(), obj.media = "jpegThumbnail";
    else if (tag === 7) obj.videoMessage = Message.VideoMessage.read(pbf, pbf.readVarint() + pbf.pos), obj.media = "videoMessage";
    else if (tag === 8) obj.locationMessage = Message.LocationMessage.read(pbf, pbf.readVarint() + pbf.pos), obj.media = "locationMessage";
};
Message.InteractiveMessage.Header.write = function (obj, pbf) {
    if (obj.title) pbf.writeStringField(1, obj.title);
    if (obj.subtitle) pbf.writeStringField(2, obj.subtitle);
    if (obj.hasMediaAttachment) pbf.writeBooleanField(5, obj.hasMediaAttachment);
    if (obj.documentMessage) pbf.writeMessage(3, Message.DocumentMessage.write, obj.documentMessage);
    if (obj.imageMessage) pbf.writeMessage(4, Message.ImageMessage.write, obj.imageMessage);
    if (obj.jpegThumbnail) pbf.writeBytesField(6, obj.jpegThumbnail);
    if (obj.videoMessage) pbf.writeMessage(7, Message.VideoMessage.write, obj.videoMessage);
    if (obj.locationMessage) pbf.writeMessage(8, Message.LocationMessage.write, obj.locationMessage);
};

// Message.InteractiveMessage.NativeFlowMessage ========================================

Message.InteractiveMessage.NativeFlowMessage = {};

Message.InteractiveMessage.NativeFlowMessage.read = function (pbf, end) {
    return pbf.readFields(Message.InteractiveMessage.NativeFlowMessage._readField, {buttons: [], messageParamsJson: "", messageVersion: 0}, end);
};
Message.InteractiveMessage.NativeFlowMessage._readField = function (tag, obj, pbf) {
    if (tag === 1) obj.buttons.push(Message.InteractiveMessage.NativeFlowMessage.NativeFlowButton.read(pbf, pbf.readVarint() + pbf.pos));
    else if (tag === 2) obj.messageParamsJson = pbf.readString();
    else if (tag === 3) obj.messageVersion = pbf.readVarint(true);
};
Message.InteractiveMessage.NativeFlowMessage.write = function (obj, pbf) {
    if (obj.buttons) for (var i = 0; i < obj.buttons.length; i++) pbf.writeMessage(1, Message.InteractiveMessage.NativeFlowMessage.NativeFlowButton.write, obj.buttons[i]);
    if (obj.messageParamsJson) pbf.writeStringField(2, obj.messageParamsJson);
    if (obj.messageVersion) pbf.writeVarintField(3, obj.messageVersion);
};

// Message.InteractiveMessage.NativeFlowMessage.NativeFlowButton ========================================

Message.InteractiveMessage.NativeFlowMessage.NativeFlowButton = {};

Message.InteractiveMessage.NativeFlowMessage.NativeFlowButton.read = function (pbf, end) {
    return pbf.readFields(Message.InteractiveMessage.NativeFlowMessage.NativeFlowButton._readField, {name: "", buttonParamsJson: ""}, end);
};
Message.InteractiveMessage.NativeFlowMessage.NativeFlowButton._readField = function (tag, obj, pbf) {
    if (tag === 1) obj.name = pbf.readString();
    else if (tag === 2) obj.buttonParamsJson = pbf.readString();
};
Message.InteractiveMessage.NativeFlowMessage.NativeFlowButton.write = function (obj, pbf) {
    if (obj.name) pbf.writeStringField(1, obj.name);
    if (obj.buttonParamsJson) pbf.writeStringField(2, obj.buttonParamsJson);
};

// Message.InteractiveMessage.ShopMessage ========================================

Message.InteractiveMessage.ShopMessage = {};

Message.InteractiveMessage.ShopMessage.read = function (pbf, end) {
    return pbf.readFields(Message.InteractiveMessage.ShopMessage._readField, {id: "", surface: 0, messageVersion: 0}, end);
};
Message.InteractiveMessage.ShopMessage._readField = function (tag, obj, pbf) {
    if (tag === 1) obj.id = pbf.readString();
    else if (tag === 2) obj.surface = pbf.readVarint();
    else if (tag === 3) obj.messageVersion = pbf.readVarint(true);
};
Message.InteractiveMessage.ShopMessage.write = function (obj, pbf) {
    if (obj.id) pbf.writeStringField(1, obj.id);
    if (obj.surface) pbf.writeVarintField(2, obj.surface);
    if (obj.messageVersion) pbf.writeVarintField(3, obj.messageVersion);
};

Message.InteractiveMessage.ShopMessage.Surface = {
    "UNKNOWN_SURFACE": {
        "value": 0,
        "options": {}
    },
    "FB": {
        "value": 1,
        "options": {}
    },
    "IG": {
        "value": 2,
        "options": {}
    },
    "WA": {
        "value": 3,
        "options": {}
    }
};

// Message.InteractiveResponseMessage ========================================

Message.InteractiveResponseMessage = {};

Message.InteractiveResponseMessage.read = function (pbf, end) {
    return pbf.readFields(Message.InteractiveResponseMessage._readField, {body: null, contextInfo: null, nativeFlowResponseMessage: null, interactiveResponseMessage: null}, end);
};
Message.InteractiveResponseMessage._readField = function (tag, obj, pbf) {
    if (tag === 1) obj.body = Message.InteractiveResponseMessage.Body.read(pbf, pbf.readVarint() + pbf.pos);
    else if (tag === 15) obj.contextInfo = ContextInfo.read(pbf, pbf.readVarint() + pbf.pos);
    else if (tag === 2) obj.nativeFlowResponseMessage = Message.InteractiveResponseMessage.NativeFlowResponseMessage.read(pbf, pbf.readVarint() + pbf.pos), obj.interactiveResponseMessage = "nativeFlowResponseMessage";
};
Message.InteractiveResponseMessage.write = function (obj, pbf) {
    if (obj.body) pbf.writeMessage(1, Message.InteractiveResponseMessage.Body.write, obj.body);
    if (obj.contextInfo) pbf.writeMessage(15, ContextInfo.write, obj.contextInfo);
    if (obj.nativeFlowResponseMessage) pbf.writeMessage(2, Message.InteractiveResponseMessage.NativeFlowResponseMessage.write, obj.nativeFlowResponseMessage);
};

// Message.InteractiveResponseMessage.Body ========================================

Message.InteractiveResponseMessage.Body = {};

Message.InteractiveResponseMessage.Body.read = function (pbf, end) {
    return pbf.readFields(Message.InteractiveResponseMessage.Body._readField, {text: "", format: 0}, end);
};
Message.InteractiveResponseMessage.Body._readField = function (tag, obj, pbf) {
    if (tag === 1) obj.text = pbf.readString();
    else if (tag === 2) obj.format = pbf.readVarint();
};
Message.InteractiveResponseMessage.Body.write = function (obj, pbf) {
    if (obj.text) pbf.writeStringField(1, obj.text);
    if (obj.format) pbf.writeVarintField(2, obj.format);
};

Message.InteractiveResponseMessage.Body.Format = {
    "DEFAULT": {
        "value": 0,
        "options": {}
    },
    "EXTENSIONS_1": {
        "value": 1,
        "options": {}
    }
};

// Message.InteractiveResponseMessage.NativeFlowResponseMessage ========================================

Message.InteractiveResponseMessage.NativeFlowResponseMessage = {};

Message.InteractiveResponseMessage.NativeFlowResponseMessage.read = function (pbf, end) {
    return pbf.readFields(Message.InteractiveResponseMessage.NativeFlowResponseMessage._readField, {name: "", paramsJson: "", version: 0}, end);
};
Message.InteractiveResponseMessage.NativeFlowResponseMessage._readField = function (tag, obj, pbf) {
    if (tag === 1) obj.name = pbf.readString();
    else if (tag === 2) obj.paramsJson = pbf.readString();
    else if (tag === 3) obj.version = pbf.readVarint(true);
};
Message.InteractiveResponseMessage.NativeFlowResponseMessage.write = function (obj, pbf) {
    if (obj.name) pbf.writeStringField(1, obj.name);
    if (obj.paramsJson) pbf.writeStringField(2, obj.paramsJson);
    if (obj.version) pbf.writeVarintField(3, obj.version);
};

// Message.InvoiceMessage ========================================

Message.InvoiceMessage = {};

Message.InvoiceMessage.read = function (pbf, end) {
    return pbf.readFields(Message.InvoiceMessage._readField, {note: "", token: "", attachmentType: 0, attachmentMimetype: "", attachmentMediaKey: null, attachmentMediaKeyTimestamp: 0, attachmentFileSha256: null, attachmentFileEncSha256: null, attachmentDirectPath: "", attachmentJpegThumbnail: null}, end);
};
Message.InvoiceMessage._readField = function (tag, obj, pbf) {
    if (tag === 1) obj.note = pbf.readString();
    else if (tag === 2) obj.token = pbf.readString();
    else if (tag === 3) obj.attachmentType = pbf.readVarint();
    else if (tag === 4) obj.attachmentMimetype = pbf.readString();
    else if (tag === 5) obj.attachmentMediaKey = pbf.readBytes();
    else if (tag === 6) obj.attachmentMediaKeyTimestamp = pbf.readVarint(true);
    else if (tag === 7) obj.attachmentFileSha256 = pbf.readBytes();
    else if (tag === 8) obj.attachmentFileEncSha256 = pbf.readBytes();
    else if (tag === 9) obj.attachmentDirectPath = pbf.readString();
    else if (tag === 10) obj.attachmentJpegThumbnail = pbf.readBytes();
};
Message.InvoiceMessage.write = function (obj, pbf) {
    if (obj.note) pbf.writeStringField(1, obj.note);
    if (obj.token) pbf.writeStringField(2, obj.token);
    if (obj.attachmentType) pbf.writeVarintField(3, obj.attachmentType);
    if (obj.attachmentMimetype) pbf.writeStringField(4, obj.attachmentMimetype);
    if (obj.attachmentMediaKey) pbf.writeBytesField(5, obj.attachmentMediaKey);
    if (obj.attachmentMediaKeyTimestamp) pbf.writeVarintField(6, obj.attachmentMediaKeyTimestamp);
    if (obj.attachmentFileSha256) pbf.writeBytesField(7, obj.attachmentFileSha256);
    if (obj.attachmentFileEncSha256) pbf.writeBytesField(8, obj.attachmentFileEncSha256);
    if (obj.attachmentDirectPath) pbf.writeStringField(9, obj.attachmentDirectPath);
    if (obj.attachmentJpegThumbnail) pbf.writeBytesField(10, obj.attachmentJpegThumbnail);
};

Message.InvoiceMessage.AttachmentType = {
    "IMAGE": {
        "value": 0,
        "options": {}
    },
    "PDF": {
        "value": 1,
        "options": {}
    }
};

// Message.KeepInChatMessage ========================================

Message.KeepInChatMessage = {};

Message.KeepInChatMessage.read = function (pbf, end) {
    return pbf.readFields(Message.KeepInChatMessage._readField, {key: null, keepType: 0, timestampMs: 0}, end);
};
Message.KeepInChatMessage._readField = function (tag, obj, pbf) {
    if (tag === 1) obj.key = MessageKey.read(pbf, pbf.readVarint() + pbf.pos);
    else if (tag === 2) obj.keepType = pbf.readVarint();
    else if (tag === 3) obj.timestampMs = pbf.readVarint(true);
};
Message.KeepInChatMessage.write = function (obj, pbf) {
    if (obj.key) pbf.writeMessage(1, MessageKey.write, obj.key);
    if (obj.keepType) pbf.writeVarintField(2, obj.keepType);
    if (obj.timestampMs) pbf.writeVarintField(3, obj.timestampMs);
};

// Message.ListMessage ========================================

Message.ListMessage = {};

Message.ListMessage.read = function (pbf, end) {
    return pbf.readFields(Message.ListMessage._readField, {title: "", description: "", buttonText: "", listType: 0, sections: [], productListInfo: null, footerText: "", contextInfo: null}, end);
};
Message.ListMessage._readField = function (tag, obj, pbf) {
    if (tag === 1) obj.title = pbf.readString();
    else if (tag === 2) obj.description = pbf.readString();
    else if (tag === 3) obj.buttonText = pbf.readString();
    else if (tag === 4) obj.listType = pbf.readVarint();
    else if (tag === 5) obj.sections.push(Message.ListMessage.Section.read(pbf, pbf.readVarint() + pbf.pos));
    else if (tag === 6) obj.productListInfo = Message.ListMessage.ProductListInfo.read(pbf, pbf.readVarint() + pbf.pos);
    else if (tag === 7) obj.footerText = pbf.readString();
    else if (tag === 8) obj.contextInfo = ContextInfo.read(pbf, pbf.readVarint() + pbf.pos);
};
Message.ListMessage.write = function (obj, pbf) {
    if (obj.title) pbf.writeStringField(1, obj.title);
    if (obj.description) pbf.writeStringField(2, obj.description);
    if (obj.buttonText) pbf.writeStringField(3, obj.buttonText);
    if (obj.listType) pbf.writeVarintField(4, obj.listType);
    if (obj.sections) for (var i = 0; i < obj.sections.length; i++) pbf.writeMessage(5, Message.ListMessage.Section.write, obj.sections[i]);
    if (obj.productListInfo) pbf.writeMessage(6, Message.ListMessage.ProductListInfo.write, obj.productListInfo);
    if (obj.footerText) pbf.writeStringField(7, obj.footerText);
    if (obj.contextInfo) pbf.writeMessage(8, ContextInfo.write, obj.contextInfo);
};

Message.ListMessage.ListType = {
    "UNKNOWN": {
        "value": 0,
        "options": {}
    },
    "SINGLE_SELECT": {
        "value": 1,
        "options": {}
    },
    "PRODUCT_LIST": {
        "value": 2,
        "options": {}
    }
};

// Message.ListMessage.Product ========================================

Message.ListMessage.Product = {};

Message.ListMessage.Product.read = function (pbf, end) {
    return pbf.readFields(Message.ListMessage.Product._readField, {productId: ""}, end);
};
Message.ListMessage.Product._readField = function (tag, obj, pbf) {
    if (tag === 1) obj.productId = pbf.readString();
};
Message.ListMessage.Product.write = function (obj, pbf) {
    if (obj.productId) pbf.writeStringField(1, obj.productId);
};

// Message.ListMessage.ProductListHeaderImage ========================================

Message.ListMessage.ProductListHeaderImage = {};

Message.ListMessage.ProductListHeaderImage.read = function (pbf, end) {
    return pbf.readFields(Message.ListMessage.ProductListHeaderImage._readField, {productId: "", jpegThumbnail: null}, end);
};
Message.ListMessage.ProductListHeaderImage._readField = function (tag, obj, pbf) {
    if (tag === 1) obj.productId = pbf.readString();
    else if (tag === 2) obj.jpegThumbnail = pbf.readBytes();
};
Message.ListMessage.ProductListHeaderImage.write = function (obj, pbf) {
    if (obj.productId) pbf.writeStringField(1, obj.productId);
    if (obj.jpegThumbnail) pbf.writeBytesField(2, obj.jpegThumbnail);
};

// Message.ListMessage.ProductListInfo ========================================

Message.ListMessage.ProductListInfo = {};

Message.ListMessage.ProductListInfo.read = function (pbf, end) {
    return pbf.readFields(Message.ListMessage.ProductListInfo._readField, {productSections: [], headerImage: null, businessOwnerJid: ""}, end);
};
Message.ListMessage.ProductListInfo._readField = function (tag, obj, pbf) {
    if (tag === 1) obj.productSections.push(Message.ListMessage.ProductSection.read(pbf, pbf.readVarint() + pbf.pos));
    else if (tag === 2) obj.headerImage = Message.ListMessage.ProductListHeaderImage.read(pbf, pbf.readVarint() + pbf.pos);
    else if (tag === 3) obj.businessOwnerJid = pbf.readString();
};
Message.ListMessage.ProductListInfo.write = function (obj, pbf) {
    if (obj.productSections) for (var i = 0; i < obj.productSections.length; i++) pbf.writeMessage(1, Message.ListMessage.ProductSection.write, obj.productSections[i]);
    if (obj.headerImage) pbf.writeMessage(2, Message.ListMessage.ProductListHeaderImage.write, obj.headerImage);
    if (obj.businessOwnerJid) pbf.writeStringField(3, obj.businessOwnerJid);
};

// Message.ListMessage.ProductSection ========================================

Message.ListMessage.ProductSection = {};

Message.ListMessage.ProductSection.read = function (pbf, end) {
    return pbf.readFields(Message.ListMessage.ProductSection._readField, {title: "", products: []}, end);
};
Message.ListMessage.ProductSection._readField = function (tag, obj, pbf) {
    if (tag === 1) obj.title = pbf.readString();
    else if (tag === 2) obj.products.push(Message.ListMessage.Product.read(pbf, pbf.readVarint() + pbf.pos));
};
Message.ListMessage.ProductSection.write = function (obj, pbf) {
    if (obj.title) pbf.writeStringField(1, obj.title);
    if (obj.products) for (var i = 0; i < obj.products.length; i++) pbf.writeMessage(2, Message.ListMessage.Product.write, obj.products[i]);
};

// Message.ListMessage.Row ========================================

Message.ListMessage.Row = {};

Message.ListMessage.Row.read = function (pbf, end) {
    return pbf.readFields(Message.ListMessage.Row._readField, {title: "", description: "", rowId: ""}, end);
};
Message.ListMessage.Row._readField = function (tag, obj, pbf) {
    if (tag === 1) obj.title = pbf.readString();
    else if (tag === 2) obj.description = pbf.readString();
    else if (tag === 3) obj.rowId = pbf.readString();
};
Message.ListMessage.Row.write = function (obj, pbf) {
    if (obj.title) pbf.writeStringField(1, obj.title);
    if (obj.description) pbf.writeStringField(2, obj.description);
    if (obj.rowId) pbf.writeStringField(3, obj.rowId);
};

// Message.ListMessage.Section ========================================

Message.ListMessage.Section = {};

Message.ListMessage.Section.read = function (pbf, end) {
    return pbf.readFields(Message.ListMessage.Section._readField, {title: "", rows: []}, end);
};
Message.ListMessage.Section._readField = function (tag, obj, pbf) {
    if (tag === 1) obj.title = pbf.readString();
    else if (tag === 2) obj.rows.push(Message.ListMessage.Row.read(pbf, pbf.readVarint() + pbf.pos));
};
Message.ListMessage.Section.write = function (obj, pbf) {
    if (obj.title) pbf.writeStringField(1, obj.title);
    if (obj.rows) for (var i = 0; i < obj.rows.length; i++) pbf.writeMessage(2, Message.ListMessage.Row.write, obj.rows[i]);
};

// Message.ListResponseMessage ========================================

Message.ListResponseMessage = {};

Message.ListResponseMessage.read = function (pbf, end) {
    return pbf.readFields(Message.ListResponseMessage._readField, {title: "", listType: 0, singleSelectReply: null, contextInfo: null, description: ""}, end);
};
Message.ListResponseMessage._readField = function (tag, obj, pbf) {
    if (tag === 1) obj.title = pbf.readString();
    else if (tag === 2) obj.listType = pbf.readVarint();
    else if (tag === 3) obj.singleSelectReply = Message.ListResponseMessage.SingleSelectReply.read(pbf, pbf.readVarint() + pbf.pos);
    else if (tag === 4) obj.contextInfo = ContextInfo.read(pbf, pbf.readVarint() + pbf.pos);
    else if (tag === 5) obj.description = pbf.readString();
};
Message.ListResponseMessage.write = function (obj, pbf) {
    if (obj.title) pbf.writeStringField(1, obj.title);
    if (obj.listType) pbf.writeVarintField(2, obj.listType);
    if (obj.singleSelectReply) pbf.writeMessage(3, Message.ListResponseMessage.SingleSelectReply.write, obj.singleSelectReply);
    if (obj.contextInfo) pbf.writeMessage(4, ContextInfo.write, obj.contextInfo);
    if (obj.description) pbf.writeStringField(5, obj.description);
};

Message.ListResponseMessage.ListType = {
    "UNKNOWN": {
        "value": 0,
        "options": {}
    },
    "SINGLE_SELECT": {
        "value": 1,
        "options": {}
    }
};

// Message.ListResponseMessage.SingleSelectReply ========================================

Message.ListResponseMessage.SingleSelectReply = {};

Message.ListResponseMessage.SingleSelectReply.read = function (pbf, end) {
    return pbf.readFields(Message.ListResponseMessage.SingleSelectReply._readField, {selectedRowId: ""}, end);
};
Message.ListResponseMessage.SingleSelectReply._readField = function (tag, obj, pbf) {
    if (tag === 1) obj.selectedRowId = pbf.readString();
};
Message.ListResponseMessage.SingleSelectReply.write = function (obj, pbf) {
    if (obj.selectedRowId) pbf.writeStringField(1, obj.selectedRowId);
};

// Message.LiveLocationMessage ========================================

Message.LiveLocationMessage = {};

Message.LiveLocationMessage.read = function (pbf, end) {
    return pbf.readFields(Message.LiveLocationMessage._readField, {degreesLatitude: 0, degreesLongitude: 0, accuracyInMeters: 0, speedInMps: 0, degreesClockwiseFromMagneticNorth: 0, caption: "", sequenceNumber: 0, timeOffset: 0, jpegThumbnail: null, contextInfo: null}, end);
};
Message.LiveLocationMessage._readField = function (tag, obj, pbf) {
    if (tag === 1) obj.degreesLatitude = pbf.readDouble();
    else if (tag === 2) obj.degreesLongitude = pbf.readDouble();
    else if (tag === 3) obj.accuracyInMeters = pbf.readVarint();
    else if (tag === 4) obj.speedInMps = pbf.readFloat();
    else if (tag === 5) obj.degreesClockwiseFromMagneticNorth = pbf.readVarint();
    else if (tag === 6) obj.caption = pbf.readString();
    else if (tag === 7) obj.sequenceNumber = pbf.readVarint(true);
    else if (tag === 8) obj.timeOffset = pbf.readVarint();
    else if (tag === 16) obj.jpegThumbnail = pbf.readBytes();
    else if (tag === 17) obj.contextInfo = ContextInfo.read(pbf, pbf.readVarint() + pbf.pos);
};
Message.LiveLocationMessage.write = function (obj, pbf) {
    if (obj.degreesLatitude) pbf.writeDoubleField(1, obj.degreesLatitude);
    if (obj.degreesLongitude) pbf.writeDoubleField(2, obj.degreesLongitude);
    if (obj.accuracyInMeters) pbf.writeVarintField(3, obj.accuracyInMeters);
    if (obj.speedInMps) pbf.writeFloatField(4, obj.speedInMps);
    if (obj.degreesClockwiseFromMagneticNorth) pbf.writeVarintField(5, obj.degreesClockwiseFromMagneticNorth);
    if (obj.caption) pbf.writeStringField(6, obj.caption);
    if (obj.sequenceNumber) pbf.writeVarintField(7, obj.sequenceNumber);
    if (obj.timeOffset) pbf.writeVarintField(8, obj.timeOffset);
    if (obj.jpegThumbnail) pbf.writeBytesField(16, obj.jpegThumbnail);
    if (obj.contextInfo) pbf.writeMessage(17, ContextInfo.write, obj.contextInfo);
};

// Message.LocationMessage ========================================

Message.LocationMessage = {};

Message.LocationMessage.read = function (pbf, end) {
    return pbf.readFields(Message.LocationMessage._readField, {degreesLatitude: 0, degreesLongitude: 0, name: "", address: "", url: "", isLive: false, accuracyInMeters: 0, speedInMps: 0, degreesClockwiseFromMagneticNorth: 0, comment: "", jpegThumbnail: null, contextInfo: null}, end);
};
Message.LocationMessage._readField = function (tag, obj, pbf) {
    if (tag === 1) obj.degreesLatitude = pbf.readDouble();
    else if (tag === 2) obj.degreesLongitude = pbf.readDouble();
    else if (tag === 3) obj.name = pbf.readString();
    else if (tag === 4) obj.address = pbf.readString();
    else if (tag === 5) obj.url = pbf.readString();
    else if (tag === 6) obj.isLive = pbf.readBoolean();
    else if (tag === 7) obj.accuracyInMeters = pbf.readVarint();
    else if (tag === 8) obj.speedInMps = pbf.readFloat();
    else if (tag === 9) obj.degreesClockwiseFromMagneticNorth = pbf.readVarint();
    else if (tag === 11) obj.comment = pbf.readString();
    else if (tag === 16) obj.jpegThumbnail = pbf.readBytes();
    else if (tag === 17) obj.contextInfo = ContextInfo.read(pbf, pbf.readVarint() + pbf.pos);
};
Message.LocationMessage.write = function (obj, pbf) {
    if (obj.degreesLatitude) pbf.writeDoubleField(1, obj.degreesLatitude);
    if (obj.degreesLongitude) pbf.writeDoubleField(2, obj.degreesLongitude);
    if (obj.name) pbf.writeStringField(3, obj.name);
    if (obj.address) pbf.writeStringField(4, obj.address);
    if (obj.url) pbf.writeStringField(5, obj.url);
    if (obj.isLive) pbf.writeBooleanField(6, obj.isLive);
    if (obj.accuracyInMeters) pbf.writeVarintField(7, obj.accuracyInMeters);
    if (obj.speedInMps) pbf.writeFloatField(8, obj.speedInMps);
    if (obj.degreesClockwiseFromMagneticNorth) pbf.writeVarintField(9, obj.degreesClockwiseFromMagneticNorth);
    if (obj.comment) pbf.writeStringField(11, obj.comment);
    if (obj.jpegThumbnail) pbf.writeBytesField(16, obj.jpegThumbnail);
    if (obj.contextInfo) pbf.writeMessage(17, ContextInfo.write, obj.contextInfo);
};

// Message.OrderMessage ========================================

Message.OrderMessage = {};

Message.OrderMessage.read = function (pbf, end) {
    return pbf.readFields(Message.OrderMessage._readField, {orderId: "", thumbnail: null, itemCount: 0, status: 0, surface: 0, message: "", orderTitle: "", sellerJid: "", token: "", totalAmount1000: 0, totalCurrencyCode: "", contextInfo: null}, end);
};
Message.OrderMessage._readField = function (tag, obj, pbf) {
    if (tag === 1) obj.orderId = pbf.readString();
    else if (tag === 2) obj.thumbnail = pbf.readBytes();
    else if (tag === 3) obj.itemCount = pbf.readVarint(true);
    else if (tag === 4) obj.status = pbf.readVarint();
    else if (tag === 5) obj.surface = pbf.readVarint();
    else if (tag === 6) obj.message = pbf.readString();
    else if (tag === 7) obj.orderTitle = pbf.readString();
    else if (tag === 8) obj.sellerJid = pbf.readString();
    else if (tag === 9) obj.token = pbf.readString();
    else if (tag === 10) obj.totalAmount1000 = pbf.readVarint(true);
    else if (tag === 11) obj.totalCurrencyCode = pbf.readString();
    else if (tag === 17) obj.contextInfo = ContextInfo.read(pbf, pbf.readVarint() + pbf.pos);
};
Message.OrderMessage.write = function (obj, pbf) {
    if (obj.orderId) pbf.writeStringField(1, obj.orderId);
    if (obj.thumbnail) pbf.writeBytesField(2, obj.thumbnail);
    if (obj.itemCount) pbf.writeVarintField(3, obj.itemCount);
    if (obj.status) pbf.writeVarintField(4, obj.status);
    if (obj.surface) pbf.writeVarintField(5, obj.surface);
    if (obj.message) pbf.writeStringField(6, obj.message);
    if (obj.orderTitle) pbf.writeStringField(7, obj.orderTitle);
    if (obj.sellerJid) pbf.writeStringField(8, obj.sellerJid);
    if (obj.token) pbf.writeStringField(9, obj.token);
    if (obj.totalAmount1000) pbf.writeVarintField(10, obj.totalAmount1000);
    if (obj.totalCurrencyCode) pbf.writeStringField(11, obj.totalCurrencyCode);
    if (obj.contextInfo) pbf.writeMessage(17, ContextInfo.write, obj.contextInfo);
};

Message.OrderMessage.OrderStatus = {
    "INQUIRY": {
        "value": 1,
        "options": {}
    }
};

Message.OrderMessage.OrderSurface = {
    "CATALOG": {
        "value": 1,
        "options": {}
    }
};

// Message.PaymentInviteMessage ========================================

Message.PaymentInviteMessage = {};

Message.PaymentInviteMessage.read = function (pbf, end) {
    return pbf.readFields(Message.PaymentInviteMessage._readField, {serviceType: 0, expiryTimestamp: 0}, end);
};
Message.PaymentInviteMessage._readField = function (tag, obj, pbf) {
    if (tag === 1) obj.serviceType = pbf.readVarint();
    else if (tag === 2) obj.expiryTimestamp = pbf.readVarint(true);
};
Message.PaymentInviteMessage.write = function (obj, pbf) {
    if (obj.serviceType) pbf.writeVarintField(1, obj.serviceType);
    if (obj.expiryTimestamp) pbf.writeVarintField(2, obj.expiryTimestamp);
};

Message.PaymentInviteMessage.ServiceType = {
    "UNKNOWN": {
        "value": 0,
        "options": {}
    },
    "FBPAY": {
        "value": 1,
        "options": {}
    },
    "NOVI": {
        "value": 2,
        "options": {}
    },
    "UPI": {
        "value": 3,
        "options": {}
    }
};

// Message.PeerDataOperationRequestMessage ========================================

Message.PeerDataOperationRequestMessage = {};

Message.PeerDataOperationRequestMessage.read = function (pbf, end) {
    return pbf.readFields(Message.PeerDataOperationRequestMessage._readField, {peerDataOperationRequestType: 0, requestStickerReupload: [], requestUrlPreview: [], historySyncOnDemandRequest: null, placeholderMessageResendRequest: []}, end);
};
Message.PeerDataOperationRequestMessage._readField = function (tag, obj, pbf) {
    if (tag === 1) obj.peerDataOperationRequestType = pbf.readVarint();
    else if (tag === 2) obj.requestStickerReupload.push(Message.PeerDataOperationRequestMessage.RequestStickerReupload.read(pbf, pbf.readVarint() + pbf.pos));
    else if (tag === 3) obj.requestUrlPreview.push(Message.PeerDataOperationRequestMessage.RequestUrlPreview.read(pbf, pbf.readVarint() + pbf.pos));
    else if (tag === 4) obj.historySyncOnDemandRequest = Message.PeerDataOperationRequestMessage.HistorySyncOnDemandRequest.read(pbf, pbf.readVarint() + pbf.pos);
    else if (tag === 5) obj.placeholderMessageResendRequest.push(Message.PeerDataOperationRequestMessage.PlaceholderMessageResendRequest.read(pbf, pbf.readVarint() + pbf.pos));
};
Message.PeerDataOperationRequestMessage.write = function (obj, pbf) {
    if (obj.peerDataOperationRequestType) pbf.writeVarintField(1, obj.peerDataOperationRequestType);
    if (obj.requestStickerReupload) for (var i = 0; i < obj.requestStickerReupload.length; i++) pbf.writeMessage(2, Message.PeerDataOperationRequestMessage.RequestStickerReupload.write, obj.requestStickerReupload[i]);
    if (obj.requestUrlPreview) for (i = 0; i < obj.requestUrlPreview.length; i++) pbf.writeMessage(3, Message.PeerDataOperationRequestMessage.RequestUrlPreview.write, obj.requestUrlPreview[i]);
    if (obj.historySyncOnDemandRequest) pbf.writeMessage(4, Message.PeerDataOperationRequestMessage.HistorySyncOnDemandRequest.write, obj.historySyncOnDemandRequest);
    if (obj.placeholderMessageResendRequest) for (i = 0; i < obj.placeholderMessageResendRequest.length; i++) pbf.writeMessage(5, Message.PeerDataOperationRequestMessage.PlaceholderMessageResendRequest.write, obj.placeholderMessageResendRequest[i]);
};

// Message.PeerDataOperationRequestMessage.HistorySyncOnDemandRequest ========================================

Message.PeerDataOperationRequestMessage.HistorySyncOnDemandRequest = {};

Message.PeerDataOperationRequestMessage.HistorySyncOnDemandRequest.read = function (pbf, end) {
    return pbf.readFields(Message.PeerDataOperationRequestMessage.HistorySyncOnDemandRequest._readField, {chatJid: "", oldestMsgId: "", oldestMsgFromMe: false, onDemandMsgCount: 0, oldestMsgTimestampMs: 0}, end);
};
Message.PeerDataOperationRequestMessage.HistorySyncOnDemandRequest._readField = function (tag, obj, pbf) {
    if (tag === 1) obj.chatJid = pbf.readString();
    else if (tag === 2) obj.oldestMsgId = pbf.readString();
    else if (tag === 3) obj.oldestMsgFromMe = pbf.readBoolean();
    else if (tag === 4) obj.onDemandMsgCount = pbf.readVarint(true);
    else if (tag === 5) obj.oldestMsgTimestampMs = pbf.readVarint(true);
};
Message.PeerDataOperationRequestMessage.HistorySyncOnDemandRequest.write = function (obj, pbf) {
    if (obj.chatJid) pbf.writeStringField(1, obj.chatJid);
    if (obj.oldestMsgId) pbf.writeStringField(2, obj.oldestMsgId);
    if (obj.oldestMsgFromMe) pbf.writeBooleanField(3, obj.oldestMsgFromMe);
    if (obj.onDemandMsgCount) pbf.writeVarintField(4, obj.onDemandMsgCount);
    if (obj.oldestMsgTimestampMs) pbf.writeVarintField(5, obj.oldestMsgTimestampMs);
};

// Message.PeerDataOperationRequestMessage.PlaceholderMessageResendRequest ========================================

Message.PeerDataOperationRequestMessage.PlaceholderMessageResendRequest = {};

Message.PeerDataOperationRequestMessage.PlaceholderMessageResendRequest.read = function (pbf, end) {
    return pbf.readFields(Message.PeerDataOperationRequestMessage.PlaceholderMessageResendRequest._readField, {messageKey: null}, end);
};
Message.PeerDataOperationRequestMessage.PlaceholderMessageResendRequest._readField = function (tag, obj, pbf) {
    if (tag === 1) obj.messageKey = MessageKey.read(pbf, pbf.readVarint() + pbf.pos);
};
Message.PeerDataOperationRequestMessage.PlaceholderMessageResendRequest.write = function (obj, pbf) {
    if (obj.messageKey) pbf.writeMessage(1, MessageKey.write, obj.messageKey);
};

// Message.PeerDataOperationRequestMessage.RequestStickerReupload ========================================

Message.PeerDataOperationRequestMessage.RequestStickerReupload = {};

Message.PeerDataOperationRequestMessage.RequestStickerReupload.read = function (pbf, end) {
    return pbf.readFields(Message.PeerDataOperationRequestMessage.RequestStickerReupload._readField, {fileSha256: ""}, end);
};
Message.PeerDataOperationRequestMessage.RequestStickerReupload._readField = function (tag, obj, pbf) {
    if (tag === 1) obj.fileSha256 = pbf.readString();
};
Message.PeerDataOperationRequestMessage.RequestStickerReupload.write = function (obj, pbf) {
    if (obj.fileSha256) pbf.writeStringField(1, obj.fileSha256);
};

// Message.PeerDataOperationRequestMessage.RequestUrlPreview ========================================

Message.PeerDataOperationRequestMessage.RequestUrlPreview = {};

Message.PeerDataOperationRequestMessage.RequestUrlPreview.read = function (pbf, end) {
    return pbf.readFields(Message.PeerDataOperationRequestMessage.RequestUrlPreview._readField, {url: "", includeHqThumbnail: false}, end);
};
Message.PeerDataOperationRequestMessage.RequestUrlPreview._readField = function (tag, obj, pbf) {
    if (tag === 1) obj.url = pbf.readString();
    else if (tag === 2) obj.includeHqThumbnail = pbf.readBoolean();
};
Message.PeerDataOperationRequestMessage.RequestUrlPreview.write = function (obj, pbf) {
    if (obj.url) pbf.writeStringField(1, obj.url);
    if (obj.includeHqThumbnail) pbf.writeBooleanField(2, obj.includeHqThumbnail);
};

// Message.PeerDataOperationRequestResponseMessage ========================================

Message.PeerDataOperationRequestResponseMessage = {};

Message.PeerDataOperationRequestResponseMessage.read = function (pbf, end) {
    return pbf.readFields(Message.PeerDataOperationRequestResponseMessage._readField, {peerDataOperationRequestType: 0, stanzaId: "", peerDataOperationResult: []}, end);
};
Message.PeerDataOperationRequestResponseMessage._readField = function (tag, obj, pbf) {
    if (tag === 1) obj.peerDataOperationRequestType = pbf.readVarint();
    else if (tag === 2) obj.stanzaId = pbf.readString();
    else if (tag === 3) obj.peerDataOperationResult.push(Message.PeerDataOperationRequestResponseMessage.PeerDataOperationResult.read(pbf, pbf.readVarint() + pbf.pos));
};
Message.PeerDataOperationRequestResponseMessage.write = function (obj, pbf) {
    if (obj.peerDataOperationRequestType) pbf.writeVarintField(1, obj.peerDataOperationRequestType);
    if (obj.stanzaId) pbf.writeStringField(2, obj.stanzaId);
    if (obj.peerDataOperationResult) for (var i = 0; i < obj.peerDataOperationResult.length; i++) pbf.writeMessage(3, Message.PeerDataOperationRequestResponseMessage.PeerDataOperationResult.write, obj.peerDataOperationResult[i]);
};

// Message.PeerDataOperationRequestResponseMessage.PeerDataOperationResult ========================================

Message.PeerDataOperationRequestResponseMessage.PeerDataOperationResult = {};

Message.PeerDataOperationRequestResponseMessage.PeerDataOperationResult.read = function (pbf, end) {
    return pbf.readFields(Message.PeerDataOperationRequestResponseMessage.PeerDataOperationResult._readField, {mediaUploadResult: 0, stickerMessage: null, linkPreviewResponse: null, placeholderMessageResendResponse: null}, end);
};
Message.PeerDataOperationRequestResponseMessage.PeerDataOperationResult._readField = function (tag, obj, pbf) {
    if (tag === 1) obj.mediaUploadResult = pbf.readVarint();
    else if (tag === 2) obj.stickerMessage = Message.StickerMessage.read(pbf, pbf.readVarint() + pbf.pos);
    else if (tag === 3) obj.linkPreviewResponse = Message.PeerDataOperationRequestResponseMessage.PeerDataOperationResult.LinkPreviewResponse.read(pbf, pbf.readVarint() + pbf.pos);
    else if (tag === 4) obj.placeholderMessageResendResponse = Message.PeerDataOperationRequestResponseMessage.PeerDataOperationResult.PlaceholderMessageResendResponse.read(pbf, pbf.readVarint() + pbf.pos);
};
Message.PeerDataOperationRequestResponseMessage.PeerDataOperationResult.write = function (obj, pbf) {
    if (obj.mediaUploadResult) pbf.writeVarintField(1, obj.mediaUploadResult);
    if (obj.stickerMessage) pbf.writeMessage(2, Message.StickerMessage.write, obj.stickerMessage);
    if (obj.linkPreviewResponse) pbf.writeMessage(3, Message.PeerDataOperationRequestResponseMessage.PeerDataOperationResult.LinkPreviewResponse.write, obj.linkPreviewResponse);
    if (obj.placeholderMessageResendResponse) pbf.writeMessage(4, Message.PeerDataOperationRequestResponseMessage.PeerDataOperationResult.PlaceholderMessageResendResponse.write, obj.placeholderMessageResendResponse);
};

// Message.PeerDataOperationRequestResponseMessage.PeerDataOperationResult.LinkPreviewResponse ========================================

Message.PeerDataOperationRequestResponseMessage.PeerDataOperationResult.LinkPreviewResponse = {};

Message.PeerDataOperationRequestResponseMessage.PeerDataOperationResult.LinkPreviewResponse.read = function (pbf, end) {
    return pbf.readFields(Message.PeerDataOperationRequestResponseMessage.PeerDataOperationResult.LinkPreviewResponse._readField, {url: "", title: "", description: "", thumbData: null, canonicalUrl: "", matchText: "", previewType: "", hqThumbnail: null}, end);
};
Message.PeerDataOperationRequestResponseMessage.PeerDataOperationResult.LinkPreviewResponse._readField = function (tag, obj, pbf) {
    if (tag === 1) obj.url = pbf.readString();
    else if (tag === 2) obj.title = pbf.readString();
    else if (tag === 3) obj.description = pbf.readString();
    else if (tag === 4) obj.thumbData = pbf.readBytes();
    else if (tag === 5) obj.canonicalUrl = pbf.readString();
    else if (tag === 6) obj.matchText = pbf.readString();
    else if (tag === 7) obj.previewType = pbf.readString();
    else if (tag === 8) obj.hqThumbnail = Message.PeerDataOperationRequestResponseMessage.PeerDataOperationResult.LinkPreviewResponse.LinkPreviewHighQualityThumbnail.read(pbf, pbf.readVarint() + pbf.pos);
};
Message.PeerDataOperationRequestResponseMessage.PeerDataOperationResult.LinkPreviewResponse.write = function (obj, pbf) {
    if (obj.url) pbf.writeStringField(1, obj.url);
    if (obj.title) pbf.writeStringField(2, obj.title);
    if (obj.description) pbf.writeStringField(3, obj.description);
    if (obj.thumbData) pbf.writeBytesField(4, obj.thumbData);
    if (obj.canonicalUrl) pbf.writeStringField(5, obj.canonicalUrl);
    if (obj.matchText) pbf.writeStringField(6, obj.matchText);
    if (obj.previewType) pbf.writeStringField(7, obj.previewType);
    if (obj.hqThumbnail) pbf.writeMessage(8, Message.PeerDataOperationRequestResponseMessage.PeerDataOperationResult.LinkPreviewResponse.LinkPreviewHighQualityThumbnail.write, obj.hqThumbnail);
};

// Message.PeerDataOperationRequestResponseMessage.PeerDataOperationResult.LinkPreviewResponse.LinkPreviewHighQualityThumbnail ========================================

Message.PeerDataOperationRequestResponseMessage.PeerDataOperationResult.LinkPreviewResponse.LinkPreviewHighQualityThumbnail = {};

Message.PeerDataOperationRequestResponseMessage.PeerDataOperationResult.LinkPreviewResponse.LinkPreviewHighQualityThumbnail.read = function (pbf, end) {
    return pbf.readFields(Message.PeerDataOperationRequestResponseMessage.PeerDataOperationResult.LinkPreviewResponse.LinkPreviewHighQualityThumbnail._readField, {directPath: "", thumbHash: "", encThumbHash: "", mediaKey: null, mediaKeyTimestampMs: 0, thumbWidth: 0, thumbHeight: 0}, end);
};
Message.PeerDataOperationRequestResponseMessage.PeerDataOperationResult.LinkPreviewResponse.LinkPreviewHighQualityThumbnail._readField = function (tag, obj, pbf) {
    if (tag === 1) obj.directPath = pbf.readString();
    else if (tag === 2) obj.thumbHash = pbf.readString();
    else if (tag === 3) obj.encThumbHash = pbf.readString();
    else if (tag === 4) obj.mediaKey = pbf.readBytes();
    else if (tag === 5) obj.mediaKeyTimestampMs = pbf.readVarint(true);
    else if (tag === 6) obj.thumbWidth = pbf.readVarint(true);
    else if (tag === 7) obj.thumbHeight = pbf.readVarint(true);
};
Message.PeerDataOperationRequestResponseMessage.PeerDataOperationResult.LinkPreviewResponse.LinkPreviewHighQualityThumbnail.write = function (obj, pbf) {
    if (obj.directPath) pbf.writeStringField(1, obj.directPath);
    if (obj.thumbHash) pbf.writeStringField(2, obj.thumbHash);
    if (obj.encThumbHash) pbf.writeStringField(3, obj.encThumbHash);
    if (obj.mediaKey) pbf.writeBytesField(4, obj.mediaKey);
    if (obj.mediaKeyTimestampMs) pbf.writeVarintField(5, obj.mediaKeyTimestampMs);
    if (obj.thumbWidth) pbf.writeVarintField(6, obj.thumbWidth);
    if (obj.thumbHeight) pbf.writeVarintField(7, obj.thumbHeight);
};

// Message.PeerDataOperationRequestResponseMessage.PeerDataOperationResult.PlaceholderMessageResendResponse ========================================

Message.PeerDataOperationRequestResponseMessage.PeerDataOperationResult.PlaceholderMessageResendResponse = {};

Message.PeerDataOperationRequestResponseMessage.PeerDataOperationResult.PlaceholderMessageResendResponse.read = function (pbf, end) {
    return pbf.readFields(Message.PeerDataOperationRequestResponseMessage.PeerDataOperationResult.PlaceholderMessageResendResponse._readField, {webMessageInfoBytes: null}, end);
};
Message.PeerDataOperationRequestResponseMessage.PeerDataOperationResult.PlaceholderMessageResendResponse._readField = function (tag, obj, pbf) {
    if (tag === 1) obj.webMessageInfoBytes = pbf.readBytes();
};
Message.PeerDataOperationRequestResponseMessage.PeerDataOperationResult.PlaceholderMessageResendResponse.write = function (obj, pbf) {
    if (obj.webMessageInfoBytes) pbf.writeBytesField(1, obj.webMessageInfoBytes);
};

// Message.PinInChatMessage ========================================

Message.PinInChatMessage = {};

Message.PinInChatMessage.read = function (pbf, end) {
    return pbf.readFields(Message.PinInChatMessage._readField, {key: null, type: 0, senderTimestampMs: 0}, end);
};
Message.PinInChatMessage._readField = function (tag, obj, pbf) {
    if (tag === 1) obj.key = MessageKey.read(pbf, pbf.readVarint() + pbf.pos);
    else if (tag === 2) obj.type = pbf.readVarint();
    else if (tag === 3) obj.senderTimestampMs = pbf.readVarint(true);
};
Message.PinInChatMessage.write = function (obj, pbf) {
    if (obj.key) pbf.writeMessage(1, MessageKey.write, obj.key);
    if (obj.type) pbf.writeVarintField(2, obj.type);
    if (obj.senderTimestampMs) pbf.writeVarintField(3, obj.senderTimestampMs);
};

Message.PinInChatMessage.Type = {
    "UNKNOWN_TYPE": {
        "value": 0,
        "options": {}
    },
    "PIN_FOR_ALL": {
        "value": 1,
        "options": {}
    },
    "UNPIN_FOR_ALL": {
        "value": 2,
        "options": {}
    }
};

// Message.PollCreationMessage ========================================

Message.PollCreationMessage = {};

Message.PollCreationMessage.read = function (pbf, end) {
    return pbf.readFields(Message.PollCreationMessage._readField, {encKey: null, name: "", options: [], selectableOptionsCount: 0, contextInfo: null}, end);
};
Message.PollCreationMessage._readField = function (tag, obj, pbf) {
    if (tag === 1) obj.encKey = pbf.readBytes();
    else if (tag === 2) obj.name = pbf.readString();
    else if (tag === 3) obj.options.push(Message.PollCreationMessage.Option.read(pbf, pbf.readVarint() + pbf.pos));
    else if (tag === 4) obj.selectableOptionsCount = pbf.readVarint();
    else if (tag === 5) obj.contextInfo = ContextInfo.read(pbf, pbf.readVarint() + pbf.pos);
};
Message.PollCreationMessage.write = function (obj, pbf) {
    if (obj.encKey) pbf.writeBytesField(1, obj.encKey);
    if (obj.name) pbf.writeStringField(2, obj.name);
    if (obj.options) for (var i = 0; i < obj.options.length; i++) pbf.writeMessage(3, Message.PollCreationMessage.Option.write, obj.options[i]);
    if (obj.selectableOptionsCount) pbf.writeVarintField(4, obj.selectableOptionsCount);
    if (obj.contextInfo) pbf.writeMessage(5, ContextInfo.write, obj.contextInfo);
};

// Message.PollCreationMessage.Option ========================================

Message.PollCreationMessage.Option = {};

Message.PollCreationMessage.Option.read = function (pbf, end) {
    return pbf.readFields(Message.PollCreationMessage.Option._readField, {optionName: ""}, end);
};
Message.PollCreationMessage.Option._readField = function (tag, obj, pbf) {
    if (tag === 1) obj.optionName = pbf.readString();
};
Message.PollCreationMessage.Option.write = function (obj, pbf) {
    if (obj.optionName) pbf.writeStringField(1, obj.optionName);
};

// Message.PollEncValue ========================================

Message.PollEncValue = {};

Message.PollEncValue.read = function (pbf, end) {
    return pbf.readFields(Message.PollEncValue._readField, {encPayload: null, encIv: null}, end);
};
Message.PollEncValue._readField = function (tag, obj, pbf) {
    if (tag === 1) obj.encPayload = pbf.readBytes();
    else if (tag === 2) obj.encIv = pbf.readBytes();
};
Message.PollEncValue.write = function (obj, pbf) {
    if (obj.encPayload) pbf.writeBytesField(1, obj.encPayload);
    if (obj.encIv) pbf.writeBytesField(2, obj.encIv);
};

// Message.PollUpdateMessage ========================================

Message.PollUpdateMessage = {};

Message.PollUpdateMessage.read = function (pbf, end) {
    return pbf.readFields(Message.PollUpdateMessage._readField, {pollCreationMessageKey: null, vote: null, metadata: null, senderTimestampMs: 0}, end);
};
Message.PollUpdateMessage._readField = function (tag, obj, pbf) {
    if (tag === 1) obj.pollCreationMessageKey = MessageKey.read(pbf, pbf.readVarint() + pbf.pos);
    else if (tag === 2) obj.vote = Message.PollEncValue.read(pbf, pbf.readVarint() + pbf.pos);
    else if (tag === 3) obj.metadata = Message.PollUpdateMessageMetadata.read(pbf, pbf.readVarint() + pbf.pos);
    else if (tag === 4) obj.senderTimestampMs = pbf.readVarint(true);
};
Message.PollUpdateMessage.write = function (obj, pbf) {
    if (obj.pollCreationMessageKey) pbf.writeMessage(1, MessageKey.write, obj.pollCreationMessageKey);
    if (obj.vote) pbf.writeMessage(2, Message.PollEncValue.write, obj.vote);
    if (obj.metadata) pbf.writeMessage(3, Message.PollUpdateMessageMetadata.write, obj.metadata);
    if (obj.senderTimestampMs) pbf.writeVarintField(4, obj.senderTimestampMs);
};

// Message.PollUpdateMessageMetadata ========================================

Message.PollUpdateMessageMetadata = {};

Message.PollUpdateMessageMetadata.read = function (pbf, end) {
    return pbf.readFields(Message.PollUpdateMessageMetadata._readField, {}, end);
};
Message.PollUpdateMessageMetadata._readField = function (tag, obj, pbf) {
};
Message.PollUpdateMessageMetadata.write = function (obj, pbf) {
};

// Message.PollVoteMessage ========================================

Message.PollVoteMessage = {};

Message.PollVoteMessage.read = function (pbf, end) {
    return pbf.readFields(Message.PollVoteMessage._readField, {selectedOptions: []}, end);
};
Message.PollVoteMessage._readField = function (tag, obj, pbf) {
    if (tag === 1) obj.selectedOptions.push(pbf.readBytes());
};
Message.PollVoteMessage.write = function (obj, pbf) {
    if (obj.selectedOptions) for (var i = 0; i < obj.selectedOptions.length; i++) pbf.writeBytesField(1, obj.selectedOptions[i]);
};

// Message.ProductMessage ========================================

Message.ProductMessage = {};

Message.ProductMessage.read = function (pbf, end) {
    return pbf.readFields(Message.ProductMessage._readField, {product: null, businessOwnerJid: "", catalog: null, body: "", footer: "", contextInfo: null}, end);
};
Message.ProductMessage._readField = function (tag, obj, pbf) {
    if (tag === 1) obj.product = Message.ProductMessage.ProductSnapshot.read(pbf, pbf.readVarint() + pbf.pos);
    else if (tag === 2) obj.businessOwnerJid = pbf.readString();
    else if (tag === 4) obj.catalog = Message.ProductMessage.CatalogSnapshot.read(pbf, pbf.readVarint() + pbf.pos);
    else if (tag === 5) obj.body = pbf.readString();
    else if (tag === 6) obj.footer = pbf.readString();
    else if (tag === 17) obj.contextInfo = ContextInfo.read(pbf, pbf.readVarint() + pbf.pos);
};
Message.ProductMessage.write = function (obj, pbf) {
    if (obj.product) pbf.writeMessage(1, Message.ProductMessage.ProductSnapshot.write, obj.product);
    if (obj.businessOwnerJid) pbf.writeStringField(2, obj.businessOwnerJid);
    if (obj.catalog) pbf.writeMessage(4, Message.ProductMessage.CatalogSnapshot.write, obj.catalog);
    if (obj.body) pbf.writeStringField(5, obj.body);
    if (obj.footer) pbf.writeStringField(6, obj.footer);
    if (obj.contextInfo) pbf.writeMessage(17, ContextInfo.write, obj.contextInfo);
};

// Message.ProductMessage.CatalogSnapshot ========================================

Message.ProductMessage.CatalogSnapshot = {};

Message.ProductMessage.CatalogSnapshot.read = function (pbf, end) {
    return pbf.readFields(Message.ProductMessage.CatalogSnapshot._readField, {catalogImage: null, title: "", description: ""}, end);
};
Message.ProductMessage.CatalogSnapshot._readField = function (tag, obj, pbf) {
    if (tag === 1) obj.catalogImage = Message.ImageMessage.read(pbf, pbf.readVarint() + pbf.pos);
    else if (tag === 2) obj.title = pbf.readString();
    else if (tag === 3) obj.description = pbf.readString();
};
Message.ProductMessage.CatalogSnapshot.write = function (obj, pbf) {
    if (obj.catalogImage) pbf.writeMessage(1, Message.ImageMessage.write, obj.catalogImage);
    if (obj.title) pbf.writeStringField(2, obj.title);
    if (obj.description) pbf.writeStringField(3, obj.description);
};

// Message.ProductMessage.ProductSnapshot ========================================

Message.ProductMessage.ProductSnapshot = {};

Message.ProductMessage.ProductSnapshot.read = function (pbf, end) {
    return pbf.readFields(Message.ProductMessage.ProductSnapshot._readField, {productImage: null, productId: "", title: "", description: "", currencyCode: "", priceAmount1000: 0, retailerId: "", url: "", productImageCount: 0, firstImageId: "", salePriceAmount1000: 0}, end);
};
Message.ProductMessage.ProductSnapshot._readField = function (tag, obj, pbf) {
    if (tag === 1) obj.productImage = Message.ImageMessage.read(pbf, pbf.readVarint() + pbf.pos);
    else if (tag === 2) obj.productId = pbf.readString();
    else if (tag === 3) obj.title = pbf.readString();
    else if (tag === 4) obj.description = pbf.readString();
    else if (tag === 5) obj.currencyCode = pbf.readString();
    else if (tag === 6) obj.priceAmount1000 = pbf.readVarint(true);
    else if (tag === 7) obj.retailerId = pbf.readString();
    else if (tag === 8) obj.url = pbf.readString();
    else if (tag === 9) obj.productImageCount = pbf.readVarint();
    else if (tag === 11) obj.firstImageId = pbf.readString();
    else if (tag === 12) obj.salePriceAmount1000 = pbf.readVarint(true);
};
Message.ProductMessage.ProductSnapshot.write = function (obj, pbf) {
    if (obj.productImage) pbf.writeMessage(1, Message.ImageMessage.write, obj.productImage);
    if (obj.productId) pbf.writeStringField(2, obj.productId);
    if (obj.title) pbf.writeStringField(3, obj.title);
    if (obj.description) pbf.writeStringField(4, obj.description);
    if (obj.currencyCode) pbf.writeStringField(5, obj.currencyCode);
    if (obj.priceAmount1000) pbf.writeVarintField(6, obj.priceAmount1000);
    if (obj.retailerId) pbf.writeStringField(7, obj.retailerId);
    if (obj.url) pbf.writeStringField(8, obj.url);
    if (obj.productImageCount) pbf.writeVarintField(9, obj.productImageCount);
    if (obj.firstImageId) pbf.writeStringField(11, obj.firstImageId);
    if (obj.salePriceAmount1000) pbf.writeVarintField(12, obj.salePriceAmount1000);
};

// Message.ProtocolMessage ========================================

Message.ProtocolMessage = {};

Message.ProtocolMessage.read = function (pbf, end) {
    return pbf.readFields(Message.ProtocolMessage._readField, {key: null, type: 0, ephemeralExpiration: 0, ephemeralSettingTimestamp: 0, historySyncNotification: null, appStateSyncKeyShare: null, appStateSyncKeyRequest: null, initialSecurityNotificationSettingSync: null, appStateFatalExceptionNotification: null, disappearingMode: null, editedMessage: null, timestampMs: 0, peerDataOperationRequestMessage: null, peerDataOperationRequestResponseMessage: null}, end);
};
Message.ProtocolMessage._readField = function (tag, obj, pbf) {
    if (tag === 1) obj.key = MessageKey.read(pbf, pbf.readVarint() + pbf.pos);
    else if (tag === 2) obj.type = pbf.readVarint();
    else if (tag === 4) obj.ephemeralExpiration = pbf.readVarint();
    else if (tag === 5) obj.ephemeralSettingTimestamp = pbf.readVarint(true);
    else if (tag === 6) obj.historySyncNotification = Message.HistorySyncNotification.read(pbf, pbf.readVarint() + pbf.pos);
    else if (tag === 7) obj.appStateSyncKeyShare = Message.AppStateSyncKeyShare.read(pbf, pbf.readVarint() + pbf.pos);
    else if (tag === 8) obj.appStateSyncKeyRequest = Message.AppStateSyncKeyRequest.read(pbf, pbf.readVarint() + pbf.pos);
    else if (tag === 9) obj.initialSecurityNotificationSettingSync = Message.InitialSecurityNotificationSettingSync.read(pbf, pbf.readVarint() + pbf.pos);
    else if (tag === 10) obj.appStateFatalExceptionNotification = Message.AppStateFatalExceptionNotification.read(pbf, pbf.readVarint() + pbf.pos);
    else if (tag === 11) obj.disappearingMode = DisappearingMode.read(pbf, pbf.readVarint() + pbf.pos);
    else if (tag === 14) obj.editedMessage = Message.read(pbf, pbf.readVarint() + pbf.pos);
    else if (tag === 15) obj.timestampMs = pbf.readVarint(true);
    else if (tag === 16) obj.peerDataOperationRequestMessage = Message.PeerDataOperationRequestMessage.read(pbf, pbf.readVarint() + pbf.pos);
    else if (tag === 17) obj.peerDataOperationRequestResponseMessage = Message.PeerDataOperationRequestResponseMessage.read(pbf, pbf.readVarint() + pbf.pos);
};
Message.ProtocolMessage.write = function (obj, pbf) {
    if (obj.key) pbf.writeMessage(1, MessageKey.write, obj.key);
    if (obj.type) pbf.writeVarintField(2, obj.type);
    if (obj.ephemeralExpiration) pbf.writeVarintField(4, obj.ephemeralExpiration);
    if (obj.ephemeralSettingTimestamp) pbf.writeVarintField(5, obj.ephemeralSettingTimestamp);
    if (obj.historySyncNotification) pbf.writeMessage(6, Message.HistorySyncNotification.write, obj.historySyncNotification);
    if (obj.appStateSyncKeyShare) pbf.writeMessage(7, Message.AppStateSyncKeyShare.write, obj.appStateSyncKeyShare);
    if (obj.appStateSyncKeyRequest) pbf.writeMessage(8, Message.AppStateSyncKeyRequest.write, obj.appStateSyncKeyRequest);
    if (obj.initialSecurityNotificationSettingSync) pbf.writeMessage(9, Message.InitialSecurityNotificationSettingSync.write, obj.initialSecurityNotificationSettingSync);
    if (obj.appStateFatalExceptionNotification) pbf.writeMessage(10, Message.AppStateFatalExceptionNotification.write, obj.appStateFatalExceptionNotification);
    if (obj.disappearingMode) pbf.writeMessage(11, DisappearingMode.write, obj.disappearingMode);
    if (obj.editedMessage) pbf.writeMessage(14, Message.write, obj.editedMessage);
    if (obj.timestampMs) pbf.writeVarintField(15, obj.timestampMs);
    if (obj.peerDataOperationRequestMessage) pbf.writeMessage(16, Message.PeerDataOperationRequestMessage.write, obj.peerDataOperationRequestMessage);
    if (obj.peerDataOperationRequestResponseMessage) pbf.writeMessage(17, Message.PeerDataOperationRequestResponseMessage.write, obj.peerDataOperationRequestResponseMessage);
};

Message.ProtocolMessage.Type = {
    "REVOKE": {
        "value": 0,
        "options": {}
    },
    "EPHEMERAL_SETTING": {
        "value": 3,
        "options": {}
    },
    "EPHEMERAL_SYNC_RESPONSE": {
        "value": 4,
        "options": {}
    },
    "HISTORY_SYNC_NOTIFICATION": {
        "value": 5,
        "options": {}
    },
    "APP_STATE_SYNC_KEY_SHARE": {
        "value": 6,
        "options": {}
    },
    "APP_STATE_SYNC_KEY_REQUEST": {
        "value": 7,
        "options": {}
    },
    "MSG_FANOUT_BACKFILL_REQUEST": {
        "value": 8,
        "options": {}
    },
    "INITIAL_SECURITY_NOTIFICATION_SETTING_SYNC": {
        "value": 9,
        "options": {}
    },
    "APP_STATE_FATAL_EXCEPTION_NOTIFICATION": {
        "value": 10,
        "options": {}
    },
    "SHARE_PHONE_NUMBER": {
        "value": 11,
        "options": {}
    },
    "MESSAGE_EDIT": {
        "value": 14,
        "options": {}
    },
    "PEER_DATA_OPERATION_REQUEST_MESSAGE": {
        "value": 16,
        "options": {}
    },
    "PEER_DATA_OPERATION_REQUEST_RESPONSE_MESSAGE": {
        "value": 17,
        "options": {}
    }
};

// Message.ReactionMessage ========================================

Message.ReactionMessage = {};

Message.ReactionMessage.read = function (pbf, end) {
    return pbf.readFields(Message.ReactionMessage._readField, {key: null, text: "", groupingKey: "", senderTimestampMs: 0}, end);
};
Message.ReactionMessage._readField = function (tag, obj, pbf) {
    if (tag === 1) obj.key = MessageKey.read(pbf, pbf.readVarint() + pbf.pos);
    else if (tag === 2) obj.text = pbf.readString();
    else if (tag === 3) obj.groupingKey = pbf.readString();
    else if (tag === 4) obj.senderTimestampMs = pbf.readVarint(true);
};
Message.ReactionMessage.write = function (obj, pbf) {
    if (obj.key) pbf.writeMessage(1, MessageKey.write, obj.key);
    if (obj.text) pbf.writeStringField(2, obj.text);
    if (obj.groupingKey) pbf.writeStringField(3, obj.groupingKey);
    if (obj.senderTimestampMs) pbf.writeVarintField(4, obj.senderTimestampMs);
};

// Message.RequestPaymentMessage ========================================

Message.RequestPaymentMessage = {};

Message.RequestPaymentMessage.read = function (pbf, end) {
    return pbf.readFields(Message.RequestPaymentMessage._readField, {noteMessage: null, currencyCodeIso4217: "", amount1000: 0, requestFrom: "", expiryTimestamp: 0, amount: null, background: null}, end);
};
Message.RequestPaymentMessage._readField = function (tag, obj, pbf) {
    if (tag === 4) obj.noteMessage = Message.read(pbf, pbf.readVarint() + pbf.pos);
    else if (tag === 1) obj.currencyCodeIso4217 = pbf.readString();
    else if (tag === 2) obj.amount1000 = pbf.readVarint();
    else if (tag === 3) obj.requestFrom = pbf.readString();
    else if (tag === 5) obj.expiryTimestamp = pbf.readVarint(true);
    else if (tag === 6) obj.amount = Money.read(pbf, pbf.readVarint() + pbf.pos);
    else if (tag === 7) obj.background = PaymentBackground.read(pbf, pbf.readVarint() + pbf.pos);
};
Message.RequestPaymentMessage.write = function (obj, pbf) {
    if (obj.noteMessage) pbf.writeMessage(4, Message.write, obj.noteMessage);
    if (obj.currencyCodeIso4217) pbf.writeStringField(1, obj.currencyCodeIso4217);
    if (obj.amount1000) pbf.writeVarintField(2, obj.amount1000);
    if (obj.requestFrom) pbf.writeStringField(3, obj.requestFrom);
    if (obj.expiryTimestamp) pbf.writeVarintField(5, obj.expiryTimestamp);
    if (obj.amount) pbf.writeMessage(6, Money.write, obj.amount);
    if (obj.background) pbf.writeMessage(7, PaymentBackground.write, obj.background);
};

// Message.RequestPhoneNumberMessage ========================================

Message.RequestPhoneNumberMessage = {};

Message.RequestPhoneNumberMessage.read = function (pbf, end) {
    return pbf.readFields(Message.RequestPhoneNumberMessage._readField, {contextInfo: null}, end);
};
Message.RequestPhoneNumberMessage._readField = function (tag, obj, pbf) {
    if (tag === 1) obj.contextInfo = ContextInfo.read(pbf, pbf.readVarint() + pbf.pos);
};
Message.RequestPhoneNumberMessage.write = function (obj, pbf) {
    if (obj.contextInfo) pbf.writeMessage(1, ContextInfo.write, obj.contextInfo);
};

// Message.ScheduledCallCreationMessage ========================================

Message.ScheduledCallCreationMessage = {};

Message.ScheduledCallCreationMessage.read = function (pbf, end) {
    return pbf.readFields(Message.ScheduledCallCreationMessage._readField, {scheduledTimestampMs: 0, callType: 0, title: ""}, end);
};
Message.ScheduledCallCreationMessage._readField = function (tag, obj, pbf) {
    if (tag === 1) obj.scheduledTimestampMs = pbf.readVarint(true);
    else if (tag === 2) obj.callType = pbf.readVarint();
    else if (tag === 3) obj.title = pbf.readString();
};
Message.ScheduledCallCreationMessage.write = function (obj, pbf) {
    if (obj.scheduledTimestampMs) pbf.writeVarintField(1, obj.scheduledTimestampMs);
    if (obj.callType) pbf.writeVarintField(2, obj.callType);
    if (obj.title) pbf.writeStringField(3, obj.title);
};

Message.ScheduledCallCreationMessage.CallType = {
    "UNKNOWN": {
        "value": 0,
        "options": {}
    },
    "VOICE": {
        "value": 1,
        "options": {}
    },
    "VIDEO": {
        "value": 2,
        "options": {}
    }
};

// Message.ScheduledCallEditMessage ========================================

Message.ScheduledCallEditMessage = {};

Message.ScheduledCallEditMessage.read = function (pbf, end) {
    return pbf.readFields(Message.ScheduledCallEditMessage._readField, {key: null, editType: 0}, end);
};
Message.ScheduledCallEditMessage._readField = function (tag, obj, pbf) {
    if (tag === 1) obj.key = MessageKey.read(pbf, pbf.readVarint() + pbf.pos);
    else if (tag === 2) obj.editType = pbf.readVarint();
};
Message.ScheduledCallEditMessage.write = function (obj, pbf) {
    if (obj.key) pbf.writeMessage(1, MessageKey.write, obj.key);
    if (obj.editType) pbf.writeVarintField(2, obj.editType);
};

Message.ScheduledCallEditMessage.EditType = {
    "UNKNOWN": {
        "value": 0,
        "options": {}
    },
    "CANCEL": {
        "value": 1,
        "options": {}
    }
};

// Message.SendPaymentMessage ========================================

Message.SendPaymentMessage = {};

Message.SendPaymentMessage.read = function (pbf, end) {
    return pbf.readFields(Message.SendPaymentMessage._readField, {noteMessage: null, requestMessageKey: null, background: null}, end);
};
Message.SendPaymentMessage._readField = function (tag, obj, pbf) {
    if (tag === 2) obj.noteMessage = Message.read(pbf, pbf.readVarint() + pbf.pos);
    else if (tag === 3) obj.requestMessageKey = MessageKey.read(pbf, pbf.readVarint() + pbf.pos);
    else if (tag === 4) obj.background = PaymentBackground.read(pbf, pbf.readVarint() + pbf.pos);
};
Message.SendPaymentMessage.write = function (obj, pbf) {
    if (obj.noteMessage) pbf.writeMessage(2, Message.write, obj.noteMessage);
    if (obj.requestMessageKey) pbf.writeMessage(3, MessageKey.write, obj.requestMessageKey);
    if (obj.background) pbf.writeMessage(4, PaymentBackground.write, obj.background);
};

// Message.SenderKeyDistributionMessage ========================================

Message.SenderKeyDistributionMessage = {};

Message.SenderKeyDistributionMessage.read = function (pbf, end) {
    return pbf.readFields(Message.SenderKeyDistributionMessage._readField, {groupId: "", axolotlSenderKeyDistributionMessage: null}, end);
};
Message.SenderKeyDistributionMessage._readField = function (tag, obj, pbf) {
    if (tag === 1) obj.groupId = pbf.readString();
    else if (tag === 2) obj.axolotlSenderKeyDistributionMessage = pbf.readBytes();
};
Message.SenderKeyDistributionMessage.write = function (obj, pbf) {
    if (obj.groupId) pbf.writeStringField(1, obj.groupId);
    if (obj.axolotlSenderKeyDistributionMessage) pbf.writeBytesField(2, obj.axolotlSenderKeyDistributionMessage);
};

// Message.StickerMessage ========================================

Message.StickerMessage = {};

Message.StickerMessage.read = function (pbf, end) {
    return pbf.readFields(Message.StickerMessage._readField, {url: "", fileSha256: null, fileEncSha256: null, mediaKey: null, mimetype: "", height: 0, width: 0, directPath: "", fileLength: 0, mediaKeyTimestamp: 0, firstFrameLength: 0, firstFrameSidecar: null, isAnimated: false, pngThumbnail: null, contextInfo: null, stickerSentTs: 0, isAvatar: false}, end);
};
Message.StickerMessage._readField = function (tag, obj, pbf) {
    if (tag === 1) obj.url = pbf.readString();
    else if (tag === 2) obj.fileSha256 = pbf.readBytes();
    else if (tag === 3) obj.fileEncSha256 = pbf.readBytes();
    else if (tag === 4) obj.mediaKey = pbf.readBytes();
    else if (tag === 5) obj.mimetype = pbf.readString();
    else if (tag === 6) obj.height = pbf.readVarint();
    else if (tag === 7) obj.width = pbf.readVarint();
    else if (tag === 8) obj.directPath = pbf.readString();
    else if (tag === 9) obj.fileLength = pbf.readVarint();
    else if (tag === 10) obj.mediaKeyTimestamp = pbf.readVarint(true);
    else if (tag === 11) obj.firstFrameLength = pbf.readVarint();
    else if (tag === 12) obj.firstFrameSidecar = pbf.readBytes();
    else if (tag === 13) obj.isAnimated = pbf.readBoolean();
    else if (tag === 16) obj.pngThumbnail = pbf.readBytes();
    else if (tag === 17) obj.contextInfo = ContextInfo.read(pbf, pbf.readVarint() + pbf.pos);
    else if (tag === 18) obj.stickerSentTs = pbf.readVarint(true);
    else if (tag === 19) obj.isAvatar = pbf.readBoolean();
};
Message.StickerMessage.write = function (obj, pbf) {
    if (obj.url) pbf.writeStringField(1, obj.url);
    if (obj.fileSha256) pbf.writeBytesField(2, obj.fileSha256);
    if (obj.fileEncSha256) pbf.writeBytesField(3, obj.fileEncSha256);
    if (obj.mediaKey) pbf.writeBytesField(4, obj.mediaKey);
    if (obj.mimetype) pbf.writeStringField(5, obj.mimetype);
    if (obj.height) pbf.writeVarintField(6, obj.height);
    if (obj.width) pbf.writeVarintField(7, obj.width);
    if (obj.directPath) pbf.writeStringField(8, obj.directPath);
    if (obj.fileLength) pbf.writeVarintField(9, obj.fileLength);
    if (obj.mediaKeyTimestamp) pbf.writeVarintField(10, obj.mediaKeyTimestamp);
    if (obj.firstFrameLength) pbf.writeVarintField(11, obj.firstFrameLength);
    if (obj.firstFrameSidecar) pbf.writeBytesField(12, obj.firstFrameSidecar);
    if (obj.isAnimated) pbf.writeBooleanField(13, obj.isAnimated);
    if (obj.pngThumbnail) pbf.writeBytesField(16, obj.pngThumbnail);
    if (obj.contextInfo) pbf.writeMessage(17, ContextInfo.write, obj.contextInfo);
    if (obj.stickerSentTs) pbf.writeVarintField(18, obj.stickerSentTs);
    if (obj.isAvatar) pbf.writeBooleanField(19, obj.isAvatar);
};

// Message.StickerSyncRMRMessage ========================================

Message.StickerSyncRMRMessage = {};

Message.StickerSyncRMRMessage.read = function (pbf, end) {
    return pbf.readFields(Message.StickerSyncRMRMessage._readField, {filehash: [], rmrSource: "", requestTimestamp: 0}, end);
};
Message.StickerSyncRMRMessage._readField = function (tag, obj, pbf) {
    if (tag === 1) obj.filehash.push(pbf.readString());
    else if (tag === 2) obj.rmrSource = pbf.readString();
    else if (tag === 3) obj.requestTimestamp = pbf.readVarint(true);
};
Message.StickerSyncRMRMessage.write = function (obj, pbf) {
    if (obj.filehash) for (var i = 0; i < obj.filehash.length; i++) pbf.writeStringField(1, obj.filehash[i]);
    if (obj.rmrSource) pbf.writeStringField(2, obj.rmrSource);
    if (obj.requestTimestamp) pbf.writeVarintField(3, obj.requestTimestamp);
};

// Message.TemplateButtonReplyMessage ========================================

Message.TemplateButtonReplyMessage = {};

Message.TemplateButtonReplyMessage.read = function (pbf, end) {
    return pbf.readFields(Message.TemplateButtonReplyMessage._readField, {selectedId: "", selectedDisplayText: "", contextInfo: null, selectedIndex: 0}, end);
};
Message.TemplateButtonReplyMessage._readField = function (tag, obj, pbf) {
    if (tag === 1) obj.selectedId = pbf.readString();
    else if (tag === 2) obj.selectedDisplayText = pbf.readString();
    else if (tag === 3) obj.contextInfo = ContextInfo.read(pbf, pbf.readVarint() + pbf.pos);
    else if (tag === 4) obj.selectedIndex = pbf.readVarint();
};
Message.TemplateButtonReplyMessage.write = function (obj, pbf) {
    if (obj.selectedId) pbf.writeStringField(1, obj.selectedId);
    if (obj.selectedDisplayText) pbf.writeStringField(2, obj.selectedDisplayText);
    if (obj.contextInfo) pbf.writeMessage(3, ContextInfo.write, obj.contextInfo);
    if (obj.selectedIndex) pbf.writeVarintField(4, obj.selectedIndex);
};

// Message.TemplateMessage ========================================

Message.TemplateMessage = {};

Message.TemplateMessage.read = function (pbf, end) {
    return pbf.readFields(Message.TemplateMessage._readField, {contextInfo: null, hydratedTemplate: null, templateId: "", fourRowTemplate: null, format: null, hydratedFourRowTemplate: null, interactiveMessageTemplate: null}, end);
};
Message.TemplateMessage._readField = function (tag, obj, pbf) {
    if (tag === 3) obj.contextInfo = ContextInfo.read(pbf, pbf.readVarint() + pbf.pos);
    else if (tag === 4) obj.hydratedTemplate = Message.TemplateMessage.HydratedFourRowTemplate.read(pbf, pbf.readVarint() + pbf.pos);
    else if (tag === 9) obj.templateId = pbf.readString();
    else if (tag === 1) obj.fourRowTemplate = Message.TemplateMessage.FourRowTemplate.read(pbf, pbf.readVarint() + pbf.pos), obj.format = "fourRowTemplate";
    else if (tag === 2) obj.hydratedFourRowTemplate = Message.TemplateMessage.HydratedFourRowTemplate.read(pbf, pbf.readVarint() + pbf.pos), obj.format = "hydratedFourRowTemplate";
    else if (tag === 5) obj.interactiveMessageTemplate = Message.InteractiveMessage.read(pbf, pbf.readVarint() + pbf.pos), obj.format = "interactiveMessageTemplate";
};
Message.TemplateMessage.write = function (obj, pbf) {
    if (obj.contextInfo) pbf.writeMessage(3, ContextInfo.write, obj.contextInfo);
    if (obj.hydratedTemplate) pbf.writeMessage(4, Message.TemplateMessage.HydratedFourRowTemplate.write, obj.hydratedTemplate);
    if (obj.templateId) pbf.writeStringField(9, obj.templateId);
    if (obj.fourRowTemplate) pbf.writeMessage(1, Message.TemplateMessage.FourRowTemplate.write, obj.fourRowTemplate);
    if (obj.hydratedFourRowTemplate) pbf.writeMessage(2, Message.TemplateMessage.HydratedFourRowTemplate.write, obj.hydratedFourRowTemplate);
    if (obj.interactiveMessageTemplate) pbf.writeMessage(5, Message.InteractiveMessage.write, obj.interactiveMessageTemplate);
};

// Message.TemplateMessage.FourRowTemplate ========================================

Message.TemplateMessage.FourRowTemplate = {};

Message.TemplateMessage.FourRowTemplate.read = function (pbf, end) {
    return pbf.readFields(Message.TemplateMessage.FourRowTemplate._readField, {content: null, footer: null, buttons: [], documentMessage: null, title: null, highlyStructuredMessage: null, imageMessage: null, videoMessage: null, locationMessage: null}, end);
};
Message.TemplateMessage.FourRowTemplate._readField = function (tag, obj, pbf) {
    if (tag === 6) obj.content = Message.HighlyStructuredMessage.read(pbf, pbf.readVarint() + pbf.pos);
    else if (tag === 7) obj.footer = Message.HighlyStructuredMessage.read(pbf, pbf.readVarint() + pbf.pos);
    else if (tag === 8) obj.buttons.push(TemplateButton.read(pbf, pbf.readVarint() + pbf.pos));
    else if (tag === 1) obj.documentMessage = Message.DocumentMessage.read(pbf, pbf.readVarint() + pbf.pos), obj.title = "documentMessage";
    else if (tag === 2) obj.highlyStructuredMessage = Message.HighlyStructuredMessage.read(pbf, pbf.readVarint() + pbf.pos), obj.title = "highlyStructuredMessage";
    else if (tag === 3) obj.imageMessage = Message.ImageMessage.read(pbf, pbf.readVarint() + pbf.pos), obj.title = "imageMessage";
    else if (tag === 4) obj.videoMessage = Message.VideoMessage.read(pbf, pbf.readVarint() + pbf.pos), obj.title = "videoMessage";
    else if (tag === 5) obj.locationMessage = Message.LocationMessage.read(pbf, pbf.readVarint() + pbf.pos), obj.title = "locationMessage";
};
Message.TemplateMessage.FourRowTemplate.write = function (obj, pbf) {
    if (obj.content) pbf.writeMessage(6, Message.HighlyStructuredMessage.write, obj.content);
    if (obj.footer) pbf.writeMessage(7, Message.HighlyStructuredMessage.write, obj.footer);
    if (obj.buttons) for (var i = 0; i < obj.buttons.length; i++) pbf.writeMessage(8, TemplateButton.write, obj.buttons[i]);
    if (obj.documentMessage) pbf.writeMessage(1, Message.DocumentMessage.write, obj.documentMessage);
    if (obj.highlyStructuredMessage) pbf.writeMessage(2, Message.HighlyStructuredMessage.write, obj.highlyStructuredMessage);
    if (obj.imageMessage) pbf.writeMessage(3, Message.ImageMessage.write, obj.imageMessage);
    if (obj.videoMessage) pbf.writeMessage(4, Message.VideoMessage.write, obj.videoMessage);
    if (obj.locationMessage) pbf.writeMessage(5, Message.LocationMessage.write, obj.locationMessage);
};

// Message.TemplateMessage.HydratedFourRowTemplate ========================================

Message.TemplateMessage.HydratedFourRowTemplate = {};

Message.TemplateMessage.HydratedFourRowTemplate.read = function (pbf, end) {
    return pbf.readFields(Message.TemplateMessage.HydratedFourRowTemplate._readField, {hydratedContentText: "", hydratedFooterText: "", hydratedButtons: [], templateId: "", documentMessage: null, title: null, hydratedTitleText: "", imageMessage: null, videoMessage: null, locationMessage: null}, end);
};
Message.TemplateMessage.HydratedFourRowTemplate._readField = function (tag, obj, pbf) {
    if (tag === 6) obj.hydratedContentText = pbf.readString();
    else if (tag === 7) obj.hydratedFooterText = pbf.readString();
    else if (tag === 8) obj.hydratedButtons.push(HydratedTemplateButton.read(pbf, pbf.readVarint() + pbf.pos));
    else if (tag === 9) obj.templateId = pbf.readString();
    else if (tag === 1) obj.documentMessage = Message.DocumentMessage.read(pbf, pbf.readVarint() + pbf.pos), obj.title = "documentMessage";
    else if (tag === 2) obj.hydratedTitleText = pbf.readString(), obj.title = "hydratedTitleText";
    else if (tag === 3) obj.imageMessage = Message.ImageMessage.read(pbf, pbf.readVarint() + pbf.pos), obj.title = "imageMessage";
    else if (tag === 4) obj.videoMessage = Message.VideoMessage.read(pbf, pbf.readVarint() + pbf.pos), obj.title = "videoMessage";
    else if (tag === 5) obj.locationMessage = Message.LocationMessage.read(pbf, pbf.readVarint() + pbf.pos), obj.title = "locationMessage";
};
Message.TemplateMessage.HydratedFourRowTemplate.write = function (obj, pbf) {
    if (obj.hydratedContentText) pbf.writeStringField(6, obj.hydratedContentText);
    if (obj.hydratedFooterText) pbf.writeStringField(7, obj.hydratedFooterText);
    if (obj.hydratedButtons) for (var i = 0; i < obj.hydratedButtons.length; i++) pbf.writeMessage(8, HydratedTemplateButton.write, obj.hydratedButtons[i]);
    if (obj.templateId) pbf.writeStringField(9, obj.templateId);
    if (obj.documentMessage) pbf.writeMessage(1, Message.DocumentMessage.write, obj.documentMessage);
    if (obj.hydratedTitleText) pbf.writeStringField(2, obj.hydratedTitleText);
    if (obj.imageMessage) pbf.writeMessage(3, Message.ImageMessage.write, obj.imageMessage);
    if (obj.videoMessage) pbf.writeMessage(4, Message.VideoMessage.write, obj.videoMessage);
    if (obj.locationMessage) pbf.writeMessage(5, Message.LocationMessage.write, obj.locationMessage);
};

// Message.VideoMessage ========================================

Message.VideoMessage = {};

Message.VideoMessage.read = function (pbf, end) {
    return pbf.readFields(Message.VideoMessage._readField, {url: "", mimetype: "", fileSha256: null, fileLength: 0, seconds: 0, mediaKey: null, caption: "", gifPlayback: false, height: 0, width: 0, fileEncSha256: null, interactiveAnnotations: [], directPath: "", mediaKeyTimestamp: 0, jpegThumbnail: null, contextInfo: null, streamingSidecar: null, gifAttribution: 0, viewOnce: false, thumbnailDirectPath: "", thumbnailSha256: null, thumbnailEncSha256: null, staticUrl: ""}, end);
};
Message.VideoMessage._readField = function (tag, obj, pbf) {
    if (tag === 1) obj.url = pbf.readString();
    else if (tag === 2) obj.mimetype = pbf.readString();
    else if (tag === 3) obj.fileSha256 = pbf.readBytes();
    else if (tag === 4) obj.fileLength = pbf.readVarint();
    else if (tag === 5) obj.seconds = pbf.readVarint();
    else if (tag === 6) obj.mediaKey = pbf.readBytes();
    else if (tag === 7) obj.caption = pbf.readString();
    else if (tag === 8) obj.gifPlayback = pbf.readBoolean();
    else if (tag === 9) obj.height = pbf.readVarint();
    else if (tag === 10) obj.width = pbf.readVarint();
    else if (tag === 11) obj.fileEncSha256 = pbf.readBytes();
    else if (tag === 12) obj.interactiveAnnotations.push(InteractiveAnnotation.read(pbf, pbf.readVarint() + pbf.pos));
    else if (tag === 13) obj.directPath = pbf.readString();
    else if (tag === 14) obj.mediaKeyTimestamp = pbf.readVarint(true);
    else if (tag === 16) obj.jpegThumbnail = pbf.readBytes();
    else if (tag === 17) obj.contextInfo = ContextInfo.read(pbf, pbf.readVarint() + pbf.pos);
    else if (tag === 18) obj.streamingSidecar = pbf.readBytes();
    else if (tag === 19) obj.gifAttribution = pbf.readVarint();
    else if (tag === 20) obj.viewOnce = pbf.readBoolean();
    else if (tag === 21) obj.thumbnailDirectPath = pbf.readString();
    else if (tag === 22) obj.thumbnailSha256 = pbf.readBytes();
    else if (tag === 23) obj.thumbnailEncSha256 = pbf.readBytes();
    else if (tag === 24) obj.staticUrl = pbf.readString();
};
Message.VideoMessage.write = function (obj, pbf) {
    if (obj.url) pbf.writeStringField(1, obj.url);
    if (obj.mimetype) pbf.writeStringField(2, obj.mimetype);
    if (obj.fileSha256) pbf.writeBytesField(3, obj.fileSha256);
    if (obj.fileLength) pbf.writeVarintField(4, obj.fileLength);
    if (obj.seconds) pbf.writeVarintField(5, obj.seconds);
    if (obj.mediaKey) pbf.writeBytesField(6, obj.mediaKey);
    if (obj.caption) pbf.writeStringField(7, obj.caption);
    if (obj.gifPlayback) pbf.writeBooleanField(8, obj.gifPlayback);
    if (obj.height) pbf.writeVarintField(9, obj.height);
    if (obj.width) pbf.writeVarintField(10, obj.width);
    if (obj.fileEncSha256) pbf.writeBytesField(11, obj.fileEncSha256);
    if (obj.interactiveAnnotations) for (var i = 0; i < obj.interactiveAnnotations.length; i++) pbf.writeMessage(12, InteractiveAnnotation.write, obj.interactiveAnnotations[i]);
    if (obj.directPath) pbf.writeStringField(13, obj.directPath);
    if (obj.mediaKeyTimestamp) pbf.writeVarintField(14, obj.mediaKeyTimestamp);
    if (obj.jpegThumbnail) pbf.writeBytesField(16, obj.jpegThumbnail);
    if (obj.contextInfo) pbf.writeMessage(17, ContextInfo.write, obj.contextInfo);
    if (obj.streamingSidecar) pbf.writeBytesField(18, obj.streamingSidecar);
    if (obj.gifAttribution) pbf.writeVarintField(19, obj.gifAttribution);
    if (obj.viewOnce) pbf.writeBooleanField(20, obj.viewOnce);
    if (obj.thumbnailDirectPath) pbf.writeStringField(21, obj.thumbnailDirectPath);
    if (obj.thumbnailSha256) pbf.writeBytesField(22, obj.thumbnailSha256);
    if (obj.thumbnailEncSha256) pbf.writeBytesField(23, obj.thumbnailEncSha256);
    if (obj.staticUrl) pbf.writeStringField(24, obj.staticUrl);
};

Message.VideoMessage.Attribution = {
    "NONE": {
        "value": 0,
        "options": {}
    },
    "GIPHY": {
        "value": 1,
        "options": {}
    },
    "TENOR": {
        "value": 2,
        "options": {}
    }
};

// MessageAddOnContextInfo ========================================

var MessageAddOnContextInfo = self.MessageAddOnContextInfo = {};

MessageAddOnContextInfo.read = function (pbf, end) {
    return pbf.readFields(MessageAddOnContextInfo._readField, {messageAddOnDurationInSecs: 0}, end);
};
MessageAddOnContextInfo._readField = function (tag, obj, pbf) {
    if (tag === 1) obj.messageAddOnDurationInSecs = pbf.readVarint();
};
MessageAddOnContextInfo.write = function (obj, pbf) {
    if (obj.messageAddOnDurationInSecs) pbf.writeVarintField(1, obj.messageAddOnDurationInSecs);
};

// MessageContextInfo ========================================

var MessageContextInfo = self.MessageContextInfo = {};

MessageContextInfo.read = function (pbf, end) {
    return pbf.readFields(MessageContextInfo._readField, {deviceListMetadata: null, deviceListMetadataVersion: 0, messageSecret: null, paddingBytes: null, messageAddOnDurationInSecs: 0}, end);
};
MessageContextInfo._readField = function (tag, obj, pbf) {
    if (tag === 1) obj.deviceListMetadata = DeviceListMetadata.read(pbf, pbf.readVarint() + pbf.pos);
    else if (tag === 2) obj.deviceListMetadataVersion = pbf.readVarint(true);
    else if (tag === 3) obj.messageSecret = pbf.readBytes();
    else if (tag === 4) obj.paddingBytes = pbf.readBytes();
    else if (tag === 5) obj.messageAddOnDurationInSecs = pbf.readVarint();
};
MessageContextInfo.write = function (obj, pbf) {
    if (obj.deviceListMetadata) pbf.writeMessage(1, DeviceListMetadata.write, obj.deviceListMetadata);
    if (obj.deviceListMetadataVersion) pbf.writeVarintField(2, obj.deviceListMetadataVersion);
    if (obj.messageSecret) pbf.writeBytesField(3, obj.messageSecret);
    if (obj.paddingBytes) pbf.writeBytesField(4, obj.paddingBytes);
    if (obj.messageAddOnDurationInSecs) pbf.writeVarintField(5, obj.messageAddOnDurationInSecs);
};

// MessageKey ========================================

var MessageKey = self.MessageKey = {};

MessageKey.read = function (pbf, end) {
    return pbf.readFields(MessageKey._readField, {remoteJid: "", fromMe: false, id: "", participant: ""}, end);
};
MessageKey._readField = function (tag, obj, pbf) {
    if (tag === 1) obj.remoteJid = pbf.readString();
    else if (tag === 2) obj.fromMe = pbf.readBoolean();
    else if (tag === 3) obj.id = pbf.readString();
    else if (tag === 4) obj.participant = pbf.readString();
};
MessageKey.write = function (obj, pbf) {
    if (obj.remoteJid) pbf.writeStringField(1, obj.remoteJid);
    if (obj.fromMe) pbf.writeBooleanField(2, obj.fromMe);
    if (obj.id) pbf.writeStringField(3, obj.id);
    if (obj.participant) pbf.writeStringField(4, obj.participant);
};

// Money ========================================

var Money = self.Money = {};

Money.read = function (pbf, end) {
    return pbf.readFields(Money._readField, {value: 0, offset: 0, currencyCode: ""}, end);
};
Money._readField = function (tag, obj, pbf) {
    if (tag === 1) obj.value = pbf.readVarint(true);
    else if (tag === 2) obj.offset = pbf.readVarint();
    else if (tag === 3) obj.currencyCode = pbf.readString();
};
Money.write = function (obj, pbf) {
    if (obj.value) pbf.writeVarintField(1, obj.value);
    if (obj.offset) pbf.writeVarintField(2, obj.offset);
    if (obj.currencyCode) pbf.writeStringField(3, obj.currencyCode);
};

// MsgOpaqueData ========================================

var MsgOpaqueData = self.MsgOpaqueData = {};

MsgOpaqueData.read = function (pbf, end) {
    return pbf.readFields(MsgOpaqueData._readField, {body: "", caption: "", lng: 0, isLive: false, lat: 0, paymentAmount1000: 0, paymentNoteMsgBody: "", canonicalUrl: "", matchedText: "", title: "", description: "", futureproofBuffer: null, clientUrl: "", loc: "", pollName: "", pollOptions: [], pollSelectableOptionsCount: 0, messageSecret: null, originalSelfAuthor: "", senderTimestampMs: 0, pollUpdateParentKey: "", encPollVote: null, isSentCagPollCreation: false, encReactionTargetMessageKey: "", encReactionEncPayload: null, encReactionEncIv: null}, end);
};
MsgOpaqueData._readField = function (tag, obj, pbf) {
    if (tag === 1) obj.body = pbf.readString();
    else if (tag === 3) obj.caption = pbf.readString();
    else if (tag === 5) obj.lng = pbf.readDouble();
    else if (tag === 6) obj.isLive = pbf.readBoolean();
    else if (tag === 7) obj.lat = pbf.readDouble();
    else if (tag === 8) obj.paymentAmount1000 = pbf.readVarint(true);
    else if (tag === 9) obj.paymentNoteMsgBody = pbf.readString();
    else if (tag === 10) obj.canonicalUrl = pbf.readString();
    else if (tag === 11) obj.matchedText = pbf.readString();
    else if (tag === 12) obj.title = pbf.readString();
    else if (tag === 13) obj.description = pbf.readString();
    else if (tag === 14) obj.futureproofBuffer = pbf.readBytes();
    else if (tag === 15) obj.clientUrl = pbf.readString();
    else if (tag === 16) obj.loc = pbf.readString();
    else if (tag === 17) obj.pollName = pbf.readString();
    else if (tag === 18) obj.pollOptions.push(MsgOpaqueData.PollOption.read(pbf, pbf.readVarint() + pbf.pos));
    else if (tag === 20) obj.pollSelectableOptionsCount = pbf.readVarint();
    else if (tag === 21) obj.messageSecret = pbf.readBytes();
    else if (tag === 51) obj.originalSelfAuthor = pbf.readString();
    else if (tag === 22) obj.senderTimestampMs = pbf.readVarint(true);
    else if (tag === 23) obj.pollUpdateParentKey = pbf.readString();
    else if (tag === 24) obj.encPollVote = PollEncValue.read(pbf, pbf.readVarint() + pbf.pos);
    else if (tag === 28) obj.isSentCagPollCreation = pbf.readBoolean();
    else if (tag === 25) obj.encReactionTargetMessageKey = pbf.readString();
    else if (tag === 26) obj.encReactionEncPayload = pbf.readBytes();
    else if (tag === 27) obj.encReactionEncIv = pbf.readBytes();
};
MsgOpaqueData.write = function (obj, pbf) {
    if (obj.body) pbf.writeStringField(1, obj.body);
    if (obj.caption) pbf.writeStringField(3, obj.caption);
    if (obj.lng) pbf.writeDoubleField(5, obj.lng);
    if (obj.isLive) pbf.writeBooleanField(6, obj.isLive);
    if (obj.lat) pbf.writeDoubleField(7, obj.lat);
    if (obj.paymentAmount1000) pbf.writeVarintField(8, obj.paymentAmount1000);
    if (obj.paymentNoteMsgBody) pbf.writeStringField(9, obj.paymentNoteMsgBody);
    if (obj.canonicalUrl) pbf.writeStringField(10, obj.canonicalUrl);
    if (obj.matchedText) pbf.writeStringField(11, obj.matchedText);
    if (obj.title) pbf.writeStringField(12, obj.title);
    if (obj.description) pbf.writeStringField(13, obj.description);
    if (obj.futureproofBuffer) pbf.writeBytesField(14, obj.futureproofBuffer);
    if (obj.clientUrl) pbf.writeStringField(15, obj.clientUrl);
    if (obj.loc) pbf.writeStringField(16, obj.loc);
    if (obj.pollName) pbf.writeStringField(17, obj.pollName);
    if (obj.pollOptions) for (var i = 0; i < obj.pollOptions.length; i++) pbf.writeMessage(18, MsgOpaqueData.PollOption.write, obj.pollOptions[i]);
    if (obj.pollSelectableOptionsCount) pbf.writeVarintField(20, obj.pollSelectableOptionsCount);
    if (obj.messageSecret) pbf.writeBytesField(21, obj.messageSecret);
    if (obj.originalSelfAuthor) pbf.writeStringField(51, obj.originalSelfAuthor);
    if (obj.senderTimestampMs) pbf.writeVarintField(22, obj.senderTimestampMs);
    if (obj.pollUpdateParentKey) pbf.writeStringField(23, obj.pollUpdateParentKey);
    if (obj.encPollVote) pbf.writeMessage(24, PollEncValue.write, obj.encPollVote);
    if (obj.isSentCagPollCreation) pbf.writeBooleanField(28, obj.isSentCagPollCreation);
    if (obj.encReactionTargetMessageKey) pbf.writeStringField(25, obj.encReactionTargetMessageKey);
    if (obj.encReactionEncPayload) pbf.writeBytesField(26, obj.encReactionEncPayload);
    if (obj.encReactionEncIv) pbf.writeBytesField(27, obj.encReactionEncIv);
};

// MsgOpaqueData.PollOption ========================================

MsgOpaqueData.PollOption = {};

MsgOpaqueData.PollOption.read = function (pbf, end) {
    return pbf.readFields(MsgOpaqueData.PollOption._readField, {name: ""}, end);
};
MsgOpaqueData.PollOption._readField = function (tag, obj, pbf) {
    if (tag === 1) obj.name = pbf.readString();
};
MsgOpaqueData.PollOption.write = function (obj, pbf) {
    if (obj.name) pbf.writeStringField(1, obj.name);
};

// MsgRowOpaqueData ========================================

var MsgRowOpaqueData = self.MsgRowOpaqueData = {};

MsgRowOpaqueData.read = function (pbf, end) {
    return pbf.readFields(MsgRowOpaqueData._readField, {currentMsg: null, quotedMsg: null}, end);
};
MsgRowOpaqueData._readField = function (tag, obj, pbf) {
    if (tag === 1) obj.currentMsg = MsgOpaqueData.read(pbf, pbf.readVarint() + pbf.pos);
    else if (tag === 2) obj.quotedMsg = MsgOpaqueData.read(pbf, pbf.readVarint() + pbf.pos);
};
MsgRowOpaqueData.write = function (obj, pbf) {
    if (obj.currentMsg) pbf.writeMessage(1, MsgOpaqueData.write, obj.currentMsg);
    if (obj.quotedMsg) pbf.writeMessage(2, MsgOpaqueData.write, obj.quotedMsg);
};

// NoiseCertificate ========================================

var NoiseCertificate = self.NoiseCertificate = {};

NoiseCertificate.read = function (pbf, end) {
    return pbf.readFields(NoiseCertificate._readField, {details: null, signature: null}, end);
};
NoiseCertificate._readField = function (tag, obj, pbf) {
    if (tag === 1) obj.details = pbf.readBytes();
    else if (tag === 2) obj.signature = pbf.readBytes();
};
NoiseCertificate.write = function (obj, pbf) {
    if (obj.details) pbf.writeBytesField(1, obj.details);
    if (obj.signature) pbf.writeBytesField(2, obj.signature);
};

// NoiseCertificate.Details ========================================

NoiseCertificate.Details = {};

NoiseCertificate.Details.read = function (pbf, end) {
    return pbf.readFields(NoiseCertificate.Details._readField, {serial: 0, issuer: "", expires: 0, subject: "", key: null}, end);
};
NoiseCertificate.Details._readField = function (tag, obj, pbf) {
    if (tag === 1) obj.serial = pbf.readVarint();
    else if (tag === 2) obj.issuer = pbf.readString();
    else if (tag === 3) obj.expires = pbf.readVarint();
    else if (tag === 4) obj.subject = pbf.readString();
    else if (tag === 5) obj.key = pbf.readBytes();
};
NoiseCertificate.Details.write = function (obj, pbf) {
    if (obj.serial) pbf.writeVarintField(1, obj.serial);
    if (obj.issuer) pbf.writeStringField(2, obj.issuer);
    if (obj.expires) pbf.writeVarintField(3, obj.expires);
    if (obj.subject) pbf.writeStringField(4, obj.subject);
    if (obj.key) pbf.writeBytesField(5, obj.key);
};

// NotificationMessageInfo ========================================

var NotificationMessageInfo = self.NotificationMessageInfo = {};

NotificationMessageInfo.read = function (pbf, end) {
    return pbf.readFields(NotificationMessageInfo._readField, {key: null, message: null, messageTimestamp: 0, participant: ""}, end);
};
NotificationMessageInfo._readField = function (tag, obj, pbf) {
    if (tag === 1) obj.key = MessageKey.read(pbf, pbf.readVarint() + pbf.pos);
    else if (tag === 2) obj.message = Message.read(pbf, pbf.readVarint() + pbf.pos);
    else if (tag === 3) obj.messageTimestamp = pbf.readVarint();
    else if (tag === 4) obj.participant = pbf.readString();
};
NotificationMessageInfo.write = function (obj, pbf) {
    if (obj.key) pbf.writeMessage(1, MessageKey.write, obj.key);
    if (obj.message) pbf.writeMessage(2, Message.write, obj.message);
    if (obj.messageTimestamp) pbf.writeVarintField(3, obj.messageTimestamp);
    if (obj.participant) pbf.writeStringField(4, obj.participant);
};

// NotificationSettings ========================================

var NotificationSettings = self.NotificationSettings = {};

NotificationSettings.read = function (pbf, end) {
    return pbf.readFields(NotificationSettings._readField, {messageVibrate: "", messagePopup: "", messageLight: "", lowPriorityNotifications: false, reactionsMuted: false, callVibrate: ""}, end);
};
NotificationSettings._readField = function (tag, obj, pbf) {
    if (tag === 1) obj.messageVibrate = pbf.readString();
    else if (tag === 2) obj.messagePopup = pbf.readString();
    else if (tag === 3) obj.messageLight = pbf.readString();
    else if (tag === 4) obj.lowPriorityNotifications = pbf.readBoolean();
    else if (tag === 5) obj.reactionsMuted = pbf.readBoolean();
    else if (tag === 6) obj.callVibrate = pbf.readString();
};
NotificationSettings.write = function (obj, pbf) {
    if (obj.messageVibrate) pbf.writeStringField(1, obj.messageVibrate);
    if (obj.messagePopup) pbf.writeStringField(2, obj.messagePopup);
    if (obj.messageLight) pbf.writeStringField(3, obj.messageLight);
    if (obj.lowPriorityNotifications) pbf.writeBooleanField(4, obj.lowPriorityNotifications);
    if (obj.reactionsMuted) pbf.writeBooleanField(5, obj.reactionsMuted);
    if (obj.callVibrate) pbf.writeStringField(6, obj.callVibrate);
};

// PastParticipant ========================================

var PastParticipant = self.PastParticipant = {};

PastParticipant.read = function (pbf, end) {
    return pbf.readFields(PastParticipant._readField, {userJid: "", leaveReason: 0, leaveTs: 0}, end);
};
PastParticipant._readField = function (tag, obj, pbf) {
    if (tag === 1) obj.userJid = pbf.readString();
    else if (tag === 2) obj.leaveReason = pbf.readVarint();
    else if (tag === 3) obj.leaveTs = pbf.readVarint();
};
PastParticipant.write = function (obj, pbf) {
    if (obj.userJid) pbf.writeStringField(1, obj.userJid);
    if (obj.leaveReason) pbf.writeVarintField(2, obj.leaveReason);
    if (obj.leaveTs) pbf.writeVarintField(3, obj.leaveTs);
};

PastParticipant.LeaveReason = {
    "LEFT": {
        "value": 0,
        "options": {}
    },
    "REMOVED": {
        "value": 1,
        "options": {}
    }
};

// PastParticipants ========================================

var PastParticipants = self.PastParticipants = {};

PastParticipants.read = function (pbf, end) {
    return pbf.readFields(PastParticipants._readField, {groupJid: "", pastParticipants: []}, end);
};
PastParticipants._readField = function (tag, obj, pbf) {
    if (tag === 1) obj.groupJid = pbf.readString();
    else if (tag === 2) obj.pastParticipants.push(PastParticipant.read(pbf, pbf.readVarint() + pbf.pos));
};
PastParticipants.write = function (obj, pbf) {
    if (obj.groupJid) pbf.writeStringField(1, obj.groupJid);
    if (obj.pastParticipants) for (var i = 0; i < obj.pastParticipants.length; i++) pbf.writeMessage(2, PastParticipant.write, obj.pastParticipants[i]);
};

// PaymentBackground ========================================

var PaymentBackground = self.PaymentBackground = {};

PaymentBackground.read = function (pbf, end) {
    return pbf.readFields(PaymentBackground._readField, {id: "", fileLength: 0, width: 0, height: 0, mimetype: "", placeholderArgb: 0, textArgb: 0, subtextArgb: 0, mediaData: null, type: 0}, end);
};
PaymentBackground._readField = function (tag, obj, pbf) {
    if (tag === 1) obj.id = pbf.readString();
    else if (tag === 2) obj.fileLength = pbf.readVarint();
    else if (tag === 3) obj.width = pbf.readVarint();
    else if (tag === 4) obj.height = pbf.readVarint();
    else if (tag === 5) obj.mimetype = pbf.readString();
    else if (tag === 6) obj.placeholderArgb = pbf.readFixed32();
    else if (tag === 7) obj.textArgb = pbf.readFixed32();
    else if (tag === 8) obj.subtextArgb = pbf.readFixed32();
    else if (tag === 9) obj.mediaData = PaymentBackground.MediaData.read(pbf, pbf.readVarint() + pbf.pos);
    else if (tag === 10) obj.type = pbf.readVarint();
};
PaymentBackground.write = function (obj, pbf) {
    if (obj.id) pbf.writeStringField(1, obj.id);
    if (obj.fileLength) pbf.writeVarintField(2, obj.fileLength);
    if (obj.width) pbf.writeVarintField(3, obj.width);
    if (obj.height) pbf.writeVarintField(4, obj.height);
    if (obj.mimetype) pbf.writeStringField(5, obj.mimetype);
    if (obj.placeholderArgb) pbf.writeFixed32Field(6, obj.placeholderArgb);
    if (obj.textArgb) pbf.writeFixed32Field(7, obj.textArgb);
    if (obj.subtextArgb) pbf.writeFixed32Field(8, obj.subtextArgb);
    if (obj.mediaData) pbf.writeMessage(9, PaymentBackground.MediaData.write, obj.mediaData);
    if (obj.type) pbf.writeVarintField(10, obj.type);
};

PaymentBackground.Type = {
    "UNKNOWN": {
        "value": 0,
        "options": {}
    },
    "DEFAULT": {
        "value": 1,
        "options": {}
    }
};

// PaymentBackground.MediaData ========================================

PaymentBackground.MediaData = {};

PaymentBackground.MediaData.read = function (pbf, end) {
    return pbf.readFields(PaymentBackground.MediaData._readField, {mediaKey: null, mediaKeyTimestamp: 0, fileSha256: null, fileEncSha256: null, directPath: ""}, end);
};
PaymentBackground.MediaData._readField = function (tag, obj, pbf) {
    if (tag === 1) obj.mediaKey = pbf.readBytes();
    else if (tag === 2) obj.mediaKeyTimestamp = pbf.readVarint(true);
    else if (tag === 3) obj.fileSha256 = pbf.readBytes();
    else if (tag === 4) obj.fileEncSha256 = pbf.readBytes();
    else if (tag === 5) obj.directPath = pbf.readString();
};
PaymentBackground.MediaData.write = function (obj, pbf) {
    if (obj.mediaKey) pbf.writeBytesField(1, obj.mediaKey);
    if (obj.mediaKeyTimestamp) pbf.writeVarintField(2, obj.mediaKeyTimestamp);
    if (obj.fileSha256) pbf.writeBytesField(3, obj.fileSha256);
    if (obj.fileEncSha256) pbf.writeBytesField(4, obj.fileEncSha256);
    if (obj.directPath) pbf.writeStringField(5, obj.directPath);
};

// PaymentInfo ========================================

var PaymentInfo = self.PaymentInfo = {};

PaymentInfo.read = function (pbf, end) {
    return pbf.readFields(PaymentInfo._readField, {currencyDeprecated: 0, amount1000: 0, receiverJid: "", status: 0, transactionTimestamp: 0, requestMessageKey: null, expiryTimestamp: 0, futureproofed: false, currency: "", txnStatus: 0, useNoviFiatFormat: false, primaryAmount: null, exchangeAmount: null}, end);
};
PaymentInfo._readField = function (tag, obj, pbf) {
    if (tag === 1) obj.currencyDeprecated = pbf.readVarint();
    else if (tag === 2) obj.amount1000 = pbf.readVarint();
    else if (tag === 3) obj.receiverJid = pbf.readString();
    else if (tag === 4) obj.status = pbf.readVarint();
    else if (tag === 5) obj.transactionTimestamp = pbf.readVarint();
    else if (tag === 6) obj.requestMessageKey = MessageKey.read(pbf, pbf.readVarint() + pbf.pos);
    else if (tag === 7) obj.expiryTimestamp = pbf.readVarint();
    else if (tag === 8) obj.futureproofed = pbf.readBoolean();
    else if (tag === 9) obj.currency = pbf.readString();
    else if (tag === 10) obj.txnStatus = pbf.readVarint();
    else if (tag === 11) obj.useNoviFiatFormat = pbf.readBoolean();
    else if (tag === 12) obj.primaryAmount = Money.read(pbf, pbf.readVarint() + pbf.pos);
    else if (tag === 13) obj.exchangeAmount = Money.read(pbf, pbf.readVarint() + pbf.pos);
};
PaymentInfo.write = function (obj, pbf) {
    if (obj.currencyDeprecated) pbf.writeVarintField(1, obj.currencyDeprecated);
    if (obj.amount1000) pbf.writeVarintField(2, obj.amount1000);
    if (obj.receiverJid) pbf.writeStringField(3, obj.receiverJid);
    if (obj.status) pbf.writeVarintField(4, obj.status);
    if (obj.transactionTimestamp) pbf.writeVarintField(5, obj.transactionTimestamp);
    if (obj.requestMessageKey) pbf.writeMessage(6, MessageKey.write, obj.requestMessageKey);
    if (obj.expiryTimestamp) pbf.writeVarintField(7, obj.expiryTimestamp);
    if (obj.futureproofed) pbf.writeBooleanField(8, obj.futureproofed);
    if (obj.currency) pbf.writeStringField(9, obj.currency);
    if (obj.txnStatus) pbf.writeVarintField(10, obj.txnStatus);
    if (obj.useNoviFiatFormat) pbf.writeBooleanField(11, obj.useNoviFiatFormat);
    if (obj.primaryAmount) pbf.writeMessage(12, Money.write, obj.primaryAmount);
    if (obj.exchangeAmount) pbf.writeMessage(13, Money.write, obj.exchangeAmount);
};

PaymentInfo.Currency = {
    "UNKNOWN_CURRENCY": {
        "value": 0,
        "options": {}
    },
    "INR": {
        "value": 1,
        "options": {}
    }
};

PaymentInfo.Status = {
    "UNKNOWN_STATUS": {
        "value": 0,
        "options": {}
    },
    "PROCESSING": {
        "value": 1,
        "options": {}
    },
    "SENT": {
        "value": 2,
        "options": {}
    },
    "NEED_TO_ACCEPT": {
        "value": 3,
        "options": {}
    },
    "COMPLETE": {
        "value": 4,
        "options": {}
    },
    "COULD_NOT_COMPLETE": {
        "value": 5,
        "options": {}
    },
    "REFUNDED": {
        "value": 6,
        "options": {}
    },
    "EXPIRED": {
        "value": 7,
        "options": {}
    },
    "REJECTED": {
        "value": 8,
        "options": {}
    },
    "CANCELLED": {
        "value": 9,
        "options": {}
    },
    "WAITING_FOR_PAYER": {
        "value": 10,
        "options": {}
    },
    "WAITING": {
        "value": 11,
        "options": {}
    }
};

PaymentInfo.TxnStatus = {
    "UNKNOWN": {
        "value": 0,
        "options": {}
    },
    "PENDING_SETUP": {
        "value": 1,
        "options": {}
    },
    "PENDING_RECEIVER_SETUP": {
        "value": 2,
        "options": {}
    },
    "INIT": {
        "value": 3,
        "options": {}
    },
    "SUCCESS": {
        "value": 4,
        "options": {}
    },
    "COMPLETED": {
        "value": 5,
        "options": {}
    },
    "FAILED": {
        "value": 6,
        "options": {}
    },
    "FAILED_RISK": {
        "value": 7,
        "options": {}
    },
    "FAILED_PROCESSING": {
        "value": 8,
        "options": {}
    },
    "FAILED_RECEIVER_PROCESSING": {
        "value": 9,
        "options": {}
    },
    "FAILED_DA": {
        "value": 10,
        "options": {}
    },
    "FAILED_DA_FINAL": {
        "value": 11,
        "options": {}
    },
    "REFUNDED_TXN": {
        "value": 12,
        "options": {}
    },
    "REFUND_FAILED": {
        "value": 13,
        "options": {}
    },
    "REFUND_FAILED_PROCESSING": {
        "value": 14,
        "options": {}
    },
    "REFUND_FAILED_DA": {
        "value": 15,
        "options": {}
    },
    "EXPIRED_TXN": {
        "value": 16,
        "options": {}
    },
    "AUTH_CANCELED": {
        "value": 17,
        "options": {}
    },
    "AUTH_CANCEL_FAILED_PROCESSING": {
        "value": 18,
        "options": {}
    },
    "AUTH_CANCEL_FAILED": {
        "value": 19,
        "options": {}
    },
    "COLLECT_INIT": {
        "value": 20,
        "options": {}
    },
    "COLLECT_SUCCESS": {
        "value": 21,
        "options": {}
    },
    "COLLECT_FAILED": {
        "value": 22,
        "options": {}
    },
    "COLLECT_FAILED_RISK": {
        "value": 23,
        "options": {}
    },
    "COLLECT_REJECTED": {
        "value": 24,
        "options": {}
    },
    "COLLECT_EXPIRED": {
        "value": 25,
        "options": {}
    },
    "COLLECT_CANCELED": {
        "value": 26,
        "options": {}
    },
    "COLLECT_CANCELLING": {
        "value": 27,
        "options": {}
    },
    "IN_REVIEW": {
        "value": 28,
        "options": {}
    },
    "REVERSAL_SUCCESS": {
        "value": 29,
        "options": {}
    },
    "REVERSAL_PENDING": {
        "value": 30,
        "options": {}
    },
    "REFUND_PENDING": {
        "value": 31,
        "options": {}
    }
};

// PhotoChange ========================================

var PhotoChange = self.PhotoChange = {};

PhotoChange.read = function (pbf, end) {
    return pbf.readFields(PhotoChange._readField, {oldPhoto: null, newPhoto: null, newPhotoId: 0}, end);
};
PhotoChange._readField = function (tag, obj, pbf) {
    if (tag === 1) obj.oldPhoto = pbf.readBytes();
    else if (tag === 2) obj.newPhoto = pbf.readBytes();
    else if (tag === 3) obj.newPhotoId = pbf.readVarint();
};
PhotoChange.write = function (obj, pbf) {
    if (obj.oldPhoto) pbf.writeBytesField(1, obj.oldPhoto);
    if (obj.newPhoto) pbf.writeBytesField(2, obj.newPhoto);
    if (obj.newPhotoId) pbf.writeVarintField(3, obj.newPhotoId);
};

// PinInChat ========================================

var PinInChat = self.PinInChat = {};

PinInChat.read = function (pbf, end) {
    return pbf.readFields(PinInChat._readField, {type: 0, key: null, senderTimestampMs: 0, serverTimestampMs: 0, messageAddOnContextInfo: null}, end);
};
PinInChat._readField = function (tag, obj, pbf) {
    if (tag === 1) obj.type = pbf.readVarint();
    else if (tag === 2) obj.key = MessageKey.read(pbf, pbf.readVarint() + pbf.pos);
    else if (tag === 3) obj.senderTimestampMs = pbf.readVarint(true);
    else if (tag === 4) obj.serverTimestampMs = pbf.readVarint(true);
    else if (tag === 5) obj.messageAddOnContextInfo = MessageAddOnContextInfo.read(pbf, pbf.readVarint() + pbf.pos);
};
PinInChat.write = function (obj, pbf) {
    if (obj.type) pbf.writeVarintField(1, obj.type);
    if (obj.key) pbf.writeMessage(2, MessageKey.write, obj.key);
    if (obj.senderTimestampMs) pbf.writeVarintField(3, obj.senderTimestampMs);
    if (obj.serverTimestampMs) pbf.writeVarintField(4, obj.serverTimestampMs);
    if (obj.messageAddOnContextInfo) pbf.writeMessage(5, MessageAddOnContextInfo.write, obj.messageAddOnContextInfo);
};

PinInChat.Type = {
    "UNKNOWN_TYPE": {
        "value": 0,
        "options": {}
    },
    "PIN_FOR_ALL": {
        "value": 1,
        "options": {}
    },
    "UNPIN_FOR_ALL": {
        "value": 2,
        "options": {}
    }
};

// Point ========================================

var Point = self.Point = {};

Point.read = function (pbf, end) {
    return pbf.readFields(Point._readField, {xDeprecated: 0, yDeprecated: 0, x: 0, y: 0}, end);
};
Point._readField = function (tag, obj, pbf) {
    if (tag === 1) obj.xDeprecated = pbf.readVarint(true);
    else if (tag === 2) obj.yDeprecated = pbf.readVarint(true);
    else if (tag === 3) obj.x = pbf.readDouble();
    else if (tag === 4) obj.y = pbf.readDouble();
};
Point.write = function (obj, pbf) {
    if (obj.xDeprecated) pbf.writeVarintField(1, obj.xDeprecated);
    if (obj.yDeprecated) pbf.writeVarintField(2, obj.yDeprecated);
    if (obj.x) pbf.writeDoubleField(3, obj.x);
    if (obj.y) pbf.writeDoubleField(4, obj.y);
};

// PollAdditionalMetadata ========================================

var PollAdditionalMetadata = self.PollAdditionalMetadata = {};

PollAdditionalMetadata.read = function (pbf, end) {
    return pbf.readFields(PollAdditionalMetadata._readField, {pollInvalidated: false}, end);
};
PollAdditionalMetadata._readField = function (tag, obj, pbf) {
    if (tag === 1) obj.pollInvalidated = pbf.readBoolean();
};
PollAdditionalMetadata.write = function (obj, pbf) {
    if (obj.pollInvalidated) pbf.writeBooleanField(1, obj.pollInvalidated);
};

// PollEncValue ========================================

var PollEncValue = self.PollEncValue = {};

PollEncValue.read = function (pbf, end) {
    return pbf.readFields(PollEncValue._readField, {encPayload: null, encIv: null}, end);
};
PollEncValue._readField = function (tag, obj, pbf) {
    if (tag === 1) obj.encPayload = pbf.readBytes();
    else if (tag === 2) obj.encIv = pbf.readBytes();
};
PollEncValue.write = function (obj, pbf) {
    if (obj.encPayload) pbf.writeBytesField(1, obj.encPayload);
    if (obj.encIv) pbf.writeBytesField(2, obj.encIv);
};

// PollUpdate ========================================

var PollUpdate = self.PollUpdate = {};

PollUpdate.read = function (pbf, end) {
    return pbf.readFields(PollUpdate._readField, {pollUpdateMessageKey: null, vote: null, senderTimestampMs: 0, serverTimestampMs: 0, unread: false}, end);
};
PollUpdate._readField = function (tag, obj, pbf) {
    if (tag === 1) obj.pollUpdateMessageKey = MessageKey.read(pbf, pbf.readVarint() + pbf.pos);
    else if (tag === 2) obj.vote = Message.PollVoteMessage.read(pbf, pbf.readVarint() + pbf.pos);
    else if (tag === 3) obj.senderTimestampMs = pbf.readVarint(true);
    else if (tag === 4) obj.serverTimestampMs = pbf.readVarint(true);
    else if (tag === 5) obj.unread = pbf.readBoolean();
};
PollUpdate.write = function (obj, pbf) {
    if (obj.pollUpdateMessageKey) pbf.writeMessage(1, MessageKey.write, obj.pollUpdateMessageKey);
    if (obj.vote) pbf.writeMessage(2, Message.PollVoteMessage.write, obj.vote);
    if (obj.senderTimestampMs) pbf.writeVarintField(3, obj.senderTimestampMs);
    if (obj.serverTimestampMs) pbf.writeVarintField(4, obj.serverTimestampMs);
    if (obj.unread) pbf.writeBooleanField(5, obj.unread);
};

// PreKeyRecordStructure ========================================

var PreKeyRecordStructure = self.PreKeyRecordStructure = {};

PreKeyRecordStructure.read = function (pbf, end) {
    return pbf.readFields(PreKeyRecordStructure._readField, {id: 0, publicKey: null, privateKey: null}, end);
};
PreKeyRecordStructure._readField = function (tag, obj, pbf) {
    if (tag === 1) obj.id = pbf.readVarint();
    else if (tag === 2) obj.publicKey = pbf.readBytes();
    else if (tag === 3) obj.privateKey = pbf.readBytes();
};
PreKeyRecordStructure.write = function (obj, pbf) {
    if (obj.id) pbf.writeVarintField(1, obj.id);
    if (obj.publicKey) pbf.writeBytesField(2, obj.publicKey);
    if (obj.privateKey) pbf.writeBytesField(3, obj.privateKey);
};

// PreKeySignalMessage ========================================

var PreKeySignalMessage = self.PreKeySignalMessage = {};

PreKeySignalMessage.read = function (pbf, end) {
    return pbf.readFields(PreKeySignalMessage._readField, {registrationId: 0, preKeyId: 0, signedPreKeyId: 0, baseKey: null, identityKey: null, message: null}, end);
};
PreKeySignalMessage._readField = function (tag, obj, pbf) {
    if (tag === 5) obj.registrationId = pbf.readVarint();
    else if (tag === 1) obj.preKeyId = pbf.readVarint();
    else if (tag === 6) obj.signedPreKeyId = pbf.readVarint();
    else if (tag === 2) obj.baseKey = pbf.readBytes();
    else if (tag === 3) obj.identityKey = pbf.readBytes();
    else if (tag === 4) obj.message = pbf.readBytes();
};
PreKeySignalMessage.write = function (obj, pbf) {
    if (obj.registrationId) pbf.writeVarintField(5, obj.registrationId);
    if (obj.preKeyId) pbf.writeVarintField(1, obj.preKeyId);
    if (obj.signedPreKeyId) pbf.writeVarintField(6, obj.signedPreKeyId);
    if (obj.baseKey) pbf.writeBytesField(2, obj.baseKey);
    if (obj.identityKey) pbf.writeBytesField(3, obj.identityKey);
    if (obj.message) pbf.writeBytesField(4, obj.message);
};

// Pushname ========================================

var Pushname = self.Pushname = {};

Pushname.read = function (pbf, end) {
    return pbf.readFields(Pushname._readField, {id: "", pushname: ""}, end);
};
Pushname._readField = function (tag, obj, pbf) {
    if (tag === 1) obj.id = pbf.readString();
    else if (tag === 2) obj.pushname = pbf.readString();
};
Pushname.write = function (obj, pbf) {
    if (obj.id) pbf.writeStringField(1, obj.id);
    if (obj.pushname) pbf.writeStringField(2, obj.pushname);
};

// Reaction ========================================

var Reaction = self.Reaction = {};

Reaction.read = function (pbf, end) {
    return pbf.readFields(Reaction._readField, {key: null, text: "", groupingKey: "", senderTimestampMs: 0, unread: false}, end);
};
Reaction._readField = function (tag, obj, pbf) {
    if (tag === 1) obj.key = MessageKey.read(pbf, pbf.readVarint() + pbf.pos);
    else if (tag === 2) obj.text = pbf.readString();
    else if (tag === 3) obj.groupingKey = pbf.readString();
    else if (tag === 4) obj.senderTimestampMs = pbf.readVarint(true);
    else if (tag === 5) obj.unread = pbf.readBoolean();
};
Reaction.write = function (obj, pbf) {
    if (obj.key) pbf.writeMessage(1, MessageKey.write, obj.key);
    if (obj.text) pbf.writeStringField(2, obj.text);
    if (obj.groupingKey) pbf.writeStringField(3, obj.groupingKey);
    if (obj.senderTimestampMs) pbf.writeVarintField(4, obj.senderTimestampMs);
    if (obj.unread) pbf.writeBooleanField(5, obj.unread);
};

// RecentEmojiWeight ========================================

var RecentEmojiWeight = self.RecentEmojiWeight = {};

RecentEmojiWeight.read = function (pbf, end) {
    return pbf.readFields(RecentEmojiWeight._readField, {emoji: "", weight: 0}, end);
};
RecentEmojiWeight._readField = function (tag, obj, pbf) {
    if (tag === 1) obj.emoji = pbf.readString();
    else if (tag === 2) obj.weight = pbf.readFloat();
};
RecentEmojiWeight.write = function (obj, pbf) {
    if (obj.emoji) pbf.writeStringField(1, obj.emoji);
    if (obj.weight) pbf.writeFloatField(2, obj.weight);
};

// RecordStructure ========================================

var RecordStructure = self.RecordStructure = {};

RecordStructure.read = function (pbf, end) {
    return pbf.readFields(RecordStructure._readField, {currentSession: null, previousSessions: []}, end);
};
RecordStructure._readField = function (tag, obj, pbf) {
    if (tag === 1) obj.currentSession = SessionStructure.read(pbf, pbf.readVarint() + pbf.pos);
    else if (tag === 2) obj.previousSessions.push(SessionStructure.read(pbf, pbf.readVarint() + pbf.pos));
};
RecordStructure.write = function (obj, pbf) {
    if (obj.currentSession) pbf.writeMessage(1, SessionStructure.write, obj.currentSession);
    if (obj.previousSessions) for (var i = 0; i < obj.previousSessions.length; i++) pbf.writeMessage(2, SessionStructure.write, obj.previousSessions[i]);
};

// SenderKeyDistributionMessage ========================================

var SenderKeyDistributionMessage = self.SenderKeyDistributionMessage = {};

SenderKeyDistributionMessage.read = function (pbf, end) {
    return pbf.readFields(SenderKeyDistributionMessage._readField, {id: 0, iteration: 0, chainKey: null, signingKey: null}, end);
};
SenderKeyDistributionMessage._readField = function (tag, obj, pbf) {
    if (tag === 1) obj.id = pbf.readVarint();
    else if (tag === 2) obj.iteration = pbf.readVarint();
    else if (tag === 3) obj.chainKey = pbf.readBytes();
    else if (tag === 4) obj.signingKey = pbf.readBytes();
};
SenderKeyDistributionMessage.write = function (obj, pbf) {
    if (obj.id) pbf.writeVarintField(1, obj.id);
    if (obj.iteration) pbf.writeVarintField(2, obj.iteration);
    if (obj.chainKey) pbf.writeBytesField(3, obj.chainKey);
    if (obj.signingKey) pbf.writeBytesField(4, obj.signingKey);
};

// SenderKeyMessage ========================================

var SenderKeyMessage = self.SenderKeyMessage = {};

SenderKeyMessage.read = function (pbf, end) {
    return pbf.readFields(SenderKeyMessage._readField, {id: 0, iteration: 0, ciphertext: null}, end);
};
SenderKeyMessage._readField = function (tag, obj, pbf) {
    if (tag === 1) obj.id = pbf.readVarint();
    else if (tag === 2) obj.iteration = pbf.readVarint();
    else if (tag === 3) obj.ciphertext = pbf.readBytes();
};
SenderKeyMessage.write = function (obj, pbf) {
    if (obj.id) pbf.writeVarintField(1, obj.id);
    if (obj.iteration) pbf.writeVarintField(2, obj.iteration);
    if (obj.ciphertext) pbf.writeBytesField(3, obj.ciphertext);
};

// SenderKeyRecordStructure ========================================

var SenderKeyRecordStructure = self.SenderKeyRecordStructure = {};

SenderKeyRecordStructure.read = function (pbf, end) {
    return pbf.readFields(SenderKeyRecordStructure._readField, {senderKeyStates: []}, end);
};
SenderKeyRecordStructure._readField = function (tag, obj, pbf) {
    if (tag === 1) obj.senderKeyStates.push(SenderKeyStateStructure.read(pbf, pbf.readVarint() + pbf.pos));
};
SenderKeyRecordStructure.write = function (obj, pbf) {
    if (obj.senderKeyStates) for (var i = 0; i < obj.senderKeyStates.length; i++) pbf.writeMessage(1, SenderKeyStateStructure.write, obj.senderKeyStates[i]);
};

// SenderKeyStateStructure ========================================

var SenderKeyStateStructure = self.SenderKeyStateStructure = {};

SenderKeyStateStructure.read = function (pbf, end) {
    return pbf.readFields(SenderKeyStateStructure._readField, {senderKeyId: 0, senderChainKey: null, senderSigningKey: null, senderMessageKeys: []}, end);
};
SenderKeyStateStructure._readField = function (tag, obj, pbf) {
    if (tag === 1) obj.senderKeyId = pbf.readVarint();
    else if (tag === 2) obj.senderChainKey = SenderKeyStateStructure.SenderChainKey.read(pbf, pbf.readVarint() + pbf.pos);
    else if (tag === 3) obj.senderSigningKey = SenderKeyStateStructure.SenderSigningKey.read(pbf, pbf.readVarint() + pbf.pos);
    else if (tag === 4) obj.senderMessageKeys.push(SenderKeyStateStructure.SenderMessageKey.read(pbf, pbf.readVarint() + pbf.pos));
};
SenderKeyStateStructure.write = function (obj, pbf) {
    if (obj.senderKeyId) pbf.writeVarintField(1, obj.senderKeyId);
    if (obj.senderChainKey) pbf.writeMessage(2, SenderKeyStateStructure.SenderChainKey.write, obj.senderChainKey);
    if (obj.senderSigningKey) pbf.writeMessage(3, SenderKeyStateStructure.SenderSigningKey.write, obj.senderSigningKey);
    if (obj.senderMessageKeys) for (var i = 0; i < obj.senderMessageKeys.length; i++) pbf.writeMessage(4, SenderKeyStateStructure.SenderMessageKey.write, obj.senderMessageKeys[i]);
};

// SenderKeyStateStructure.SenderChainKey ========================================

SenderKeyStateStructure.SenderChainKey = {};

SenderKeyStateStructure.SenderChainKey.read = function (pbf, end) {
    return pbf.readFields(SenderKeyStateStructure.SenderChainKey._readField, {iteration: 0, seed: null}, end);
};
SenderKeyStateStructure.SenderChainKey._readField = function (tag, obj, pbf) {
    if (tag === 1) obj.iteration = pbf.readVarint();
    else if (tag === 2) obj.seed = pbf.readBytes();
};
SenderKeyStateStructure.SenderChainKey.write = function (obj, pbf) {
    if (obj.iteration) pbf.writeVarintField(1, obj.iteration);
    if (obj.seed) pbf.writeBytesField(2, obj.seed);
};

// SenderKeyStateStructure.SenderMessageKey ========================================

SenderKeyStateStructure.SenderMessageKey = {};

SenderKeyStateStructure.SenderMessageKey.read = function (pbf, end) {
    return pbf.readFields(SenderKeyStateStructure.SenderMessageKey._readField, {iteration: 0, seed: null}, end);
};
SenderKeyStateStructure.SenderMessageKey._readField = function (tag, obj, pbf) {
    if (tag === 1) obj.iteration = pbf.readVarint();
    else if (tag === 2) obj.seed = pbf.readBytes();
};
SenderKeyStateStructure.SenderMessageKey.write = function (obj, pbf) {
    if (obj.iteration) pbf.writeVarintField(1, obj.iteration);
    if (obj.seed) pbf.writeBytesField(2, obj.seed);
};

// SenderKeyStateStructure.SenderSigningKey ========================================

SenderKeyStateStructure.SenderSigningKey = {};

SenderKeyStateStructure.SenderSigningKey.read = function (pbf, end) {
    return pbf.readFields(SenderKeyStateStructure.SenderSigningKey._readField, {public: null, private: null}, end);
};
SenderKeyStateStructure.SenderSigningKey._readField = function (tag, obj, pbf) {
    if (tag === 1) obj.public = pbf.readBytes();
    else if (tag === 2) obj.private = pbf.readBytes();
};
SenderKeyStateStructure.SenderSigningKey.write = function (obj, pbf) {
    if (obj.public) pbf.writeBytesField(1, obj.public);
    if (obj.private) pbf.writeBytesField(2, obj.private);
};

// ServerErrorReceipt ========================================

var ServerErrorReceipt = self.ServerErrorReceipt = {};

ServerErrorReceipt.read = function (pbf, end) {
    return pbf.readFields(ServerErrorReceipt._readField, {stanzaId: ""}, end);
};
ServerErrorReceipt._readField = function (tag, obj, pbf) {
    if (tag === 1) obj.stanzaId = pbf.readString();
};
ServerErrorReceipt.write = function (obj, pbf) {
    if (obj.stanzaId) pbf.writeStringField(1, obj.stanzaId);
};

// SessionStructure ========================================

var SessionStructure = self.SessionStructure = {};

SessionStructure.read = function (pbf, end) {
    return pbf.readFields(SessionStructure._readField, {sessionVersion: 0, localIdentityPublic: null, remoteIdentityPublic: null, rootKey: null, previousCounter: 0, senderChain: null, receiverChains: [], pendingKeyExchange: null, pendingPreKey: null, remoteRegistrationId: 0, localRegistrationId: 0, needsRefresh: false, aliceBaseKey: null}, end);
};
SessionStructure._readField = function (tag, obj, pbf) {
    if (tag === 1) obj.sessionVersion = pbf.readVarint();
    else if (tag === 2) obj.localIdentityPublic = pbf.readBytes();
    else if (tag === 3) obj.remoteIdentityPublic = pbf.readBytes();
    else if (tag === 4) obj.rootKey = pbf.readBytes();
    else if (tag === 5) obj.previousCounter = pbf.readVarint();
    else if (tag === 6) obj.senderChain = SessionStructure.Chain.read(pbf, pbf.readVarint() + pbf.pos);
    else if (tag === 7) obj.receiverChains.push(SessionStructure.Chain.read(pbf, pbf.readVarint() + pbf.pos));
    else if (tag === 8) obj.pendingKeyExchange = SessionStructure.PendingKeyExchange.read(pbf, pbf.readVarint() + pbf.pos);
    else if (tag === 9) obj.pendingPreKey = SessionStructure.PendingPreKey.read(pbf, pbf.readVarint() + pbf.pos);
    else if (tag === 10) obj.remoteRegistrationId = pbf.readVarint();
    else if (tag === 11) obj.localRegistrationId = pbf.readVarint();
    else if (tag === 12) obj.needsRefresh = pbf.readBoolean();
    else if (tag === 13) obj.aliceBaseKey = pbf.readBytes();
};
SessionStructure.write = function (obj, pbf) {
    if (obj.sessionVersion) pbf.writeVarintField(1, obj.sessionVersion);
    if (obj.localIdentityPublic) pbf.writeBytesField(2, obj.localIdentityPublic);
    if (obj.remoteIdentityPublic) pbf.writeBytesField(3, obj.remoteIdentityPublic);
    if (obj.rootKey) pbf.writeBytesField(4, obj.rootKey);
    if (obj.previousCounter) pbf.writeVarintField(5, obj.previousCounter);
    if (obj.senderChain) pbf.writeMessage(6, SessionStructure.Chain.write, obj.senderChain);
    if (obj.receiverChains) for (var i = 0; i < obj.receiverChains.length; i++) pbf.writeMessage(7, SessionStructure.Chain.write, obj.receiverChains[i]);
    if (obj.pendingKeyExchange) pbf.writeMessage(8, SessionStructure.PendingKeyExchange.write, obj.pendingKeyExchange);
    if (obj.pendingPreKey) pbf.writeMessage(9, SessionStructure.PendingPreKey.write, obj.pendingPreKey);
    if (obj.remoteRegistrationId) pbf.writeVarintField(10, obj.remoteRegistrationId);
    if (obj.localRegistrationId) pbf.writeVarintField(11, obj.localRegistrationId);
    if (obj.needsRefresh) pbf.writeBooleanField(12, obj.needsRefresh);
    if (obj.aliceBaseKey) pbf.writeBytesField(13, obj.aliceBaseKey);
};

// SessionStructure.Chain ========================================

SessionStructure.Chain = {};

SessionStructure.Chain.read = function (pbf, end) {
    return pbf.readFields(SessionStructure.Chain._readField, {senderRatchetKey: null, senderRatchetKeyPrivate: null, chainKey: null, messageKeys: []}, end);
};
SessionStructure.Chain._readField = function (tag, obj, pbf) {
    if (tag === 1) obj.senderRatchetKey = pbf.readBytes();
    else if (tag === 2) obj.senderRatchetKeyPrivate = pbf.readBytes();
    else if (tag === 3) obj.chainKey = SessionStructure.Chain.ChainKey.read(pbf, pbf.readVarint() + pbf.pos);
    else if (tag === 4) obj.messageKeys.push(SessionStructure.Chain.MessageKey.read(pbf, pbf.readVarint() + pbf.pos));
};
SessionStructure.Chain.write = function (obj, pbf) {
    if (obj.senderRatchetKey) pbf.writeBytesField(1, obj.senderRatchetKey);
    if (obj.senderRatchetKeyPrivate) pbf.writeBytesField(2, obj.senderRatchetKeyPrivate);
    if (obj.chainKey) pbf.writeMessage(3, SessionStructure.Chain.ChainKey.write, obj.chainKey);
    if (obj.messageKeys) for (var i = 0; i < obj.messageKeys.length; i++) pbf.writeMessage(4, SessionStructure.Chain.MessageKey.write, obj.messageKeys[i]);
};

// SessionStructure.Chain.ChainKey ========================================

SessionStructure.Chain.ChainKey = {};

SessionStructure.Chain.ChainKey.read = function (pbf, end) {
    return pbf.readFields(SessionStructure.Chain.ChainKey._readField, {index: 0, key: null}, end);
};
SessionStructure.Chain.ChainKey._readField = function (tag, obj, pbf) {
    if (tag === 1) obj.index = pbf.readVarint();
    else if (tag === 2) obj.key = pbf.readBytes();
};
SessionStructure.Chain.ChainKey.write = function (obj, pbf) {
    if (obj.index) pbf.writeVarintField(1, obj.index);
    if (obj.key) pbf.writeBytesField(2, obj.key);
};

// SessionStructure.Chain.MessageKey ========================================

SessionStructure.Chain.MessageKey = {};

SessionStructure.Chain.MessageKey.read = function (pbf, end) {
    return pbf.readFields(SessionStructure.Chain.MessageKey._readField, {index: 0, cipherKey: null, macKey: null, iv: null}, end);
};
SessionStructure.Chain.MessageKey._readField = function (tag, obj, pbf) {
    if (tag === 1) obj.index = pbf.readVarint();
    else if (tag === 2) obj.cipherKey = pbf.readBytes();
    else if (tag === 3) obj.macKey = pbf.readBytes();
    else if (tag === 4) obj.iv = pbf.readBytes();
};
SessionStructure.Chain.MessageKey.write = function (obj, pbf) {
    if (obj.index) pbf.writeVarintField(1, obj.index);
    if (obj.cipherKey) pbf.writeBytesField(2, obj.cipherKey);
    if (obj.macKey) pbf.writeBytesField(3, obj.macKey);
    if (obj.iv) pbf.writeBytesField(4, obj.iv);
};

// SessionStructure.PendingKeyExchange ========================================

SessionStructure.PendingKeyExchange = {};

SessionStructure.PendingKeyExchange.read = function (pbf, end) {
    return pbf.readFields(SessionStructure.PendingKeyExchange._readField, {sequence: 0, localBaseKey: null, localBaseKeyPrivate: null, localRatchetKey: null, localRatchetKeyPrivate: null, localIdentityKey: null, localIdentityKeyPrivate: null}, end);
};
SessionStructure.PendingKeyExchange._readField = function (tag, obj, pbf) {
    if (tag === 1) obj.sequence = pbf.readVarint();
    else if (tag === 2) obj.localBaseKey = pbf.readBytes();
    else if (tag === 3) obj.localBaseKeyPrivate = pbf.readBytes();
    else if (tag === 4) obj.localRatchetKey = pbf.readBytes();
    else if (tag === 5) obj.localRatchetKeyPrivate = pbf.readBytes();
    else if (tag === 7) obj.localIdentityKey = pbf.readBytes();
    else if (tag === 8) obj.localIdentityKeyPrivate = pbf.readBytes();
};
SessionStructure.PendingKeyExchange.write = function (obj, pbf) {
    if (obj.sequence) pbf.writeVarintField(1, obj.sequence);
    if (obj.localBaseKey) pbf.writeBytesField(2, obj.localBaseKey);
    if (obj.localBaseKeyPrivate) pbf.writeBytesField(3, obj.localBaseKeyPrivate);
    if (obj.localRatchetKey) pbf.writeBytesField(4, obj.localRatchetKey);
    if (obj.localRatchetKeyPrivate) pbf.writeBytesField(5, obj.localRatchetKeyPrivate);
    if (obj.localIdentityKey) pbf.writeBytesField(7, obj.localIdentityKey);
    if (obj.localIdentityKeyPrivate) pbf.writeBytesField(8, obj.localIdentityKeyPrivate);
};

// SessionStructure.PendingPreKey ========================================

SessionStructure.PendingPreKey = {};

SessionStructure.PendingPreKey.read = function (pbf, end) {
    return pbf.readFields(SessionStructure.PendingPreKey._readField, {preKeyId: 0, signedPreKeyId: 0, baseKey: null}, end);
};
SessionStructure.PendingPreKey._readField = function (tag, obj, pbf) {
    if (tag === 1) obj.preKeyId = pbf.readVarint();
    else if (tag === 3) obj.signedPreKeyId = pbf.readVarint(true);
    else if (tag === 2) obj.baseKey = pbf.readBytes();
};
SessionStructure.PendingPreKey.write = function (obj, pbf) {
    if (obj.preKeyId) pbf.writeVarintField(1, obj.preKeyId);
    if (obj.signedPreKeyId) pbf.writeVarintField(3, obj.signedPreKeyId);
    if (obj.baseKey) pbf.writeBytesField(2, obj.baseKey);
};

// SignalMessage ========================================

var SignalMessage = self.SignalMessage = {};

SignalMessage.read = function (pbf, end) {
    return pbf.readFields(SignalMessage._readField, {ratchetKey: null, counter: 0, previousCounter: 0, ciphertext: null}, end);
};
SignalMessage._readField = function (tag, obj, pbf) {
    if (tag === 1) obj.ratchetKey = pbf.readBytes();
    else if (tag === 2) obj.counter = pbf.readVarint();
    else if (tag === 3) obj.previousCounter = pbf.readVarint();
    else if (tag === 4) obj.ciphertext = pbf.readBytes();
};
SignalMessage.write = function (obj, pbf) {
    if (obj.ratchetKey) pbf.writeBytesField(1, obj.ratchetKey);
    if (obj.counter) pbf.writeVarintField(2, obj.counter);
    if (obj.previousCounter) pbf.writeVarintField(3, obj.previousCounter);
    if (obj.ciphertext) pbf.writeBytesField(4, obj.ciphertext);
};

// SignedPreKeyRecordStructure ========================================

var SignedPreKeyRecordStructure = self.SignedPreKeyRecordStructure = {};

SignedPreKeyRecordStructure.read = function (pbf, end) {
    return pbf.readFields(SignedPreKeyRecordStructure._readField, {id: 0, publicKey: null, privateKey: null, signature: null, timestamp: 0}, end);
};
SignedPreKeyRecordStructure._readField = function (tag, obj, pbf) {
    if (tag === 1) obj.id = pbf.readVarint();
    else if (tag === 2) obj.publicKey = pbf.readBytes();
    else if (tag === 3) obj.privateKey = pbf.readBytes();
    else if (tag === 4) obj.signature = pbf.readBytes();
    else if (tag === 5) obj.timestamp = pbf.readFixed64();
};
SignedPreKeyRecordStructure.write = function (obj, pbf) {
    if (obj.id) pbf.writeVarintField(1, obj.id);
    if (obj.publicKey) pbf.writeBytesField(2, obj.publicKey);
    if (obj.privateKey) pbf.writeBytesField(3, obj.privateKey);
    if (obj.signature) pbf.writeBytesField(4, obj.signature);
    if (obj.timestamp) pbf.writeFixed64Field(5, obj.timestamp);
};

// StatusPSA ========================================

var StatusPSA = self.StatusPSA = {};

StatusPSA.read = function (pbf, end) {
    return pbf.readFields(StatusPSA._readField, {campaignId: 0, campaignExpirationTimestamp: 0}, end);
};
StatusPSA._readField = function (tag, obj, pbf) {
    if (tag === 44) obj.campaignId = pbf.readVarint();
    else if (tag === 45) obj.campaignExpirationTimestamp = pbf.readVarint();
};
StatusPSA.write = function (obj, pbf) {
    if (obj.campaignId) pbf.writeVarintField(44, obj.campaignId);
    if (obj.campaignExpirationTimestamp) pbf.writeVarintField(45, obj.campaignExpirationTimestamp);
};

// StickerMetadata ========================================

var StickerMetadata = self.StickerMetadata = {};

StickerMetadata.read = function (pbf, end) {
    return pbf.readFields(StickerMetadata._readField, {url: "", fileSha256: null, fileEncSha256: null, mediaKey: null, mimetype: "", height: 0, width: 0, directPath: "", fileLength: 0, weight: 0, lastStickerSentTs: 0}, end);
};
StickerMetadata._readField = function (tag, obj, pbf) {
    if (tag === 1) obj.url = pbf.readString();
    else if (tag === 2) obj.fileSha256 = pbf.readBytes();
    else if (tag === 3) obj.fileEncSha256 = pbf.readBytes();
    else if (tag === 4) obj.mediaKey = pbf.readBytes();
    else if (tag === 5) obj.mimetype = pbf.readString();
    else if (tag === 6) obj.height = pbf.readVarint();
    else if (tag === 7) obj.width = pbf.readVarint();
    else if (tag === 8) obj.directPath = pbf.readString();
    else if (tag === 9) obj.fileLength = pbf.readVarint();
    else if (tag === 10) obj.weight = pbf.readFloat();
    else if (tag === 11) obj.lastStickerSentTs = pbf.readVarint(true);
};
StickerMetadata.write = function (obj, pbf) {
    if (obj.url) pbf.writeStringField(1, obj.url);
    if (obj.fileSha256) pbf.writeBytesField(2, obj.fileSha256);
    if (obj.fileEncSha256) pbf.writeBytesField(3, obj.fileEncSha256);
    if (obj.mediaKey) pbf.writeBytesField(4, obj.mediaKey);
    if (obj.mimetype) pbf.writeStringField(5, obj.mimetype);
    if (obj.height) pbf.writeVarintField(6, obj.height);
    if (obj.width) pbf.writeVarintField(7, obj.width);
    if (obj.directPath) pbf.writeStringField(8, obj.directPath);
    if (obj.fileLength) pbf.writeVarintField(9, obj.fileLength);
    if (obj.weight) pbf.writeFloatField(10, obj.weight);
    if (obj.lastStickerSentTs) pbf.writeVarintField(11, obj.lastStickerSentTs);
};

// SyncActionData ========================================

var SyncActionData = self.SyncActionData = {};

SyncActionData.read = function (pbf, end) {
    return pbf.readFields(SyncActionData._readField, {index: null, value: null, padding: null, version: 0}, end);
};
SyncActionData._readField = function (tag, obj, pbf) {
    if (tag === 1) obj.index = pbf.readBytes();
    else if (tag === 2) obj.value = SyncActionValue.read(pbf, pbf.readVarint() + pbf.pos);
    else if (tag === 3) obj.padding = pbf.readBytes();
    else if (tag === 4) obj.version = pbf.readVarint(true);
};
SyncActionData.write = function (obj, pbf) {
    if (obj.index) pbf.writeBytesField(1, obj.index);
    if (obj.value) pbf.writeMessage(2, SyncActionValue.write, obj.value);
    if (obj.padding) pbf.writeBytesField(3, obj.padding);
    if (obj.version) pbf.writeVarintField(4, obj.version);
};

// SyncActionValue ========================================

var SyncActionValue = self.SyncActionValue = {};

SyncActionValue.read = function (pbf, end) {
    return pbf.readFields(SyncActionValue._readField, {timestamp: 0, starAction: null, contactAction: null, muteAction: null, pinAction: null, securityNotificationSetting: null, pushNameSetting: null, quickReplyAction: null, recentEmojiWeightsAction: null, labelEditAction: null, labelAssociationAction: null, localeSetting: null, archiveChatAction: null, deleteMessageForMeAction: null, keyExpiration: null, markChatAsReadAction: null, clearChatAction: null, deleteChatAction: null, unarchiveChatsSetting: null, primaryFeature: null, androidUnsupportedActions: null, agentAction: null, subscriptionAction: null, userStatusMuteAction: null, timeFormatAction: null, nuxAction: null, primaryVersionAction: null, stickerAction: null, removeRecentStickerAction: null, chatAssignment: null, chatAssignmentOpenedStatus: null, pnForLidChatAction: null, marketingMessageAction: null, marketingMessageBroadcastAction: null, externalWebBetaAction: null, privacySettingRelayAllCalls: null}, end);
};
SyncActionValue._readField = function (tag, obj, pbf) {
    if (tag === 1) obj.timestamp = pbf.readVarint(true);
    else if (tag === 2) obj.starAction = SyncActionValue.StarAction.read(pbf, pbf.readVarint() + pbf.pos);
    else if (tag === 3) obj.contactAction = SyncActionValue.ContactAction.read(pbf, pbf.readVarint() + pbf.pos);
    else if (tag === 4) obj.muteAction = SyncActionValue.MuteAction.read(pbf, pbf.readVarint() + pbf.pos);
    else if (tag === 5) obj.pinAction = SyncActionValue.PinAction.read(pbf, pbf.readVarint() + pbf.pos);
    else if (tag === 6) obj.securityNotificationSetting = SyncActionValue.SecurityNotificationSetting.read(pbf, pbf.readVarint() + pbf.pos);
    else if (tag === 7) obj.pushNameSetting = SyncActionValue.PushNameSetting.read(pbf, pbf.readVarint() + pbf.pos);
    else if (tag === 8) obj.quickReplyAction = SyncActionValue.QuickReplyAction.read(pbf, pbf.readVarint() + pbf.pos);
    else if (tag === 11) obj.recentEmojiWeightsAction = SyncActionValue.RecentEmojiWeightsAction.read(pbf, pbf.readVarint() + pbf.pos);
    else if (tag === 14) obj.labelEditAction = SyncActionValue.LabelEditAction.read(pbf, pbf.readVarint() + pbf.pos);
    else if (tag === 15) obj.labelAssociationAction = SyncActionValue.LabelAssociationAction.read(pbf, pbf.readVarint() + pbf.pos);
    else if (tag === 16) obj.localeSetting = SyncActionValue.LocaleSetting.read(pbf, pbf.readVarint() + pbf.pos);
    else if (tag === 17) obj.archiveChatAction = SyncActionValue.ArchiveChatAction.read(pbf, pbf.readVarint() + pbf.pos);
    else if (tag === 18) obj.deleteMessageForMeAction = SyncActionValue.DeleteMessageForMeAction.read(pbf, pbf.readVarint() + pbf.pos);
    else if (tag === 19) obj.keyExpiration = SyncActionValue.KeyExpiration.read(pbf, pbf.readVarint() + pbf.pos);
    else if (tag === 20) obj.markChatAsReadAction = SyncActionValue.MarkChatAsReadAction.read(pbf, pbf.readVarint() + pbf.pos);
    else if (tag === 21) obj.clearChatAction = SyncActionValue.ClearChatAction.read(pbf, pbf.readVarint() + pbf.pos);
    else if (tag === 22) obj.deleteChatAction = SyncActionValue.DeleteChatAction.read(pbf, pbf.readVarint() + pbf.pos);
    else if (tag === 23) obj.unarchiveChatsSetting = SyncActionValue.UnarchiveChatsSetting.read(pbf, pbf.readVarint() + pbf.pos);
    else if (tag === 24) obj.primaryFeature = SyncActionValue.PrimaryFeature.read(pbf, pbf.readVarint() + pbf.pos);
    else if (tag === 26) obj.androidUnsupportedActions = SyncActionValue.AndroidUnsupportedActions.read(pbf, pbf.readVarint() + pbf.pos);
    else if (tag === 27) obj.agentAction = SyncActionValue.AgentAction.read(pbf, pbf.readVarint() + pbf.pos);
    else if (tag === 28) obj.subscriptionAction = SyncActionValue.SubscriptionAction.read(pbf, pbf.readVarint() + pbf.pos);
    else if (tag === 29) obj.userStatusMuteAction = SyncActionValue.UserStatusMuteAction.read(pbf, pbf.readVarint() + pbf.pos);
    else if (tag === 30) obj.timeFormatAction = SyncActionValue.TimeFormatAction.read(pbf, pbf.readVarint() + pbf.pos);
    else if (tag === 31) obj.nuxAction = SyncActionValue.NuxAction.read(pbf, pbf.readVarint() + pbf.pos);
    else if (tag === 32) obj.primaryVersionAction = SyncActionValue.PrimaryVersionAction.read(pbf, pbf.readVarint() + pbf.pos);
    else if (tag === 33) obj.stickerAction = SyncActionValue.StickerAction.read(pbf, pbf.readVarint() + pbf.pos);
    else if (tag === 34) obj.removeRecentStickerAction = SyncActionValue.RemoveRecentStickerAction.read(pbf, pbf.readVarint() + pbf.pos);
    else if (tag === 35) obj.chatAssignment = SyncActionValue.ChatAssignmentAction.read(pbf, pbf.readVarint() + pbf.pos);
    else if (tag === 36) obj.chatAssignmentOpenedStatus = SyncActionValue.ChatAssignmentOpenedStatusAction.read(pbf, pbf.readVarint() + pbf.pos);
    else if (tag === 37) obj.pnForLidChatAction = SyncActionValue.PnForLidChatAction.read(pbf, pbf.readVarint() + pbf.pos);
    else if (tag === 38) obj.marketingMessageAction = SyncActionValue.MarketingMessageAction.read(pbf, pbf.readVarint() + pbf.pos);
    else if (tag === 39) obj.marketingMessageBroadcastAction = SyncActionValue.MarketingMessageBroadcastAction.read(pbf, pbf.readVarint() + pbf.pos);
    else if (tag === 40) obj.externalWebBetaAction = SyncActionValue.ExternalWebBetaAction.read(pbf, pbf.readVarint() + pbf.pos);
    else if (tag === 41) obj.privacySettingRelayAllCalls = SyncActionValue.PrivacySettingRelayAllCalls.read(pbf, pbf.readVarint() + pbf.pos);
};
SyncActionValue.write = function (obj, pbf) {
    if (obj.timestamp) pbf.writeVarintField(1, obj.timestamp);
    if (obj.starAction) pbf.writeMessage(2, SyncActionValue.StarAction.write, obj.starAction);
    if (obj.contactAction) pbf.writeMessage(3, SyncActionValue.ContactAction.write, obj.contactAction);
    if (obj.muteAction) pbf.writeMessage(4, SyncActionValue.MuteAction.write, obj.muteAction);
    if (obj.pinAction) pbf.writeMessage(5, SyncActionValue.PinAction.write, obj.pinAction);
    if (obj.securityNotificationSetting) pbf.writeMessage(6, SyncActionValue.SecurityNotificationSetting.write, obj.securityNotificationSetting);
    if (obj.pushNameSetting) pbf.writeMessage(7, SyncActionValue.PushNameSetting.write, obj.pushNameSetting);
    if (obj.quickReplyAction) pbf.writeMessage(8, SyncActionValue.QuickReplyAction.write, obj.quickReplyAction);
    if (obj.recentEmojiWeightsAction) pbf.writeMessage(11, SyncActionValue.RecentEmojiWeightsAction.write, obj.recentEmojiWeightsAction);
    if (obj.labelEditAction) pbf.writeMessage(14, SyncActionValue.LabelEditAction.write, obj.labelEditAction);
    if (obj.labelAssociationAction) pbf.writeMessage(15, SyncActionValue.LabelAssociationAction.write, obj.labelAssociationAction);
    if (obj.localeSetting) pbf.writeMessage(16, SyncActionValue.LocaleSetting.write, obj.localeSetting);
    if (obj.archiveChatAction) pbf.writeMessage(17, SyncActionValue.ArchiveChatAction.write, obj.archiveChatAction);
    if (obj.deleteMessageForMeAction) pbf.writeMessage(18, SyncActionValue.DeleteMessageForMeAction.write, obj.deleteMessageForMeAction);
    if (obj.keyExpiration) pbf.writeMessage(19, SyncActionValue.KeyExpiration.write, obj.keyExpiration);
    if (obj.markChatAsReadAction) pbf.writeMessage(20, SyncActionValue.MarkChatAsReadAction.write, obj.markChatAsReadAction);
    if (obj.clearChatAction) pbf.writeMessage(21, SyncActionValue.ClearChatAction.write, obj.clearChatAction);
    if (obj.deleteChatAction) pbf.writeMessage(22, SyncActionValue.DeleteChatAction.write, obj.deleteChatAction);
    if (obj.unarchiveChatsSetting) pbf.writeMessage(23, SyncActionValue.UnarchiveChatsSetting.write, obj.unarchiveChatsSetting);
    if (obj.primaryFeature) pbf.writeMessage(24, SyncActionValue.PrimaryFeature.write, obj.primaryFeature);
    if (obj.androidUnsupportedActions) pbf.writeMessage(26, SyncActionValue.AndroidUnsupportedActions.write, obj.androidUnsupportedActions);
    if (obj.agentAction) pbf.writeMessage(27, SyncActionValue.AgentAction.write, obj.agentAction);
    if (obj.subscriptionAction) pbf.writeMessage(28, SyncActionValue.SubscriptionAction.write, obj.subscriptionAction);
    if (obj.userStatusMuteAction) pbf.writeMessage(29, SyncActionValue.UserStatusMuteAction.write, obj.userStatusMuteAction);
    if (obj.timeFormatAction) pbf.writeMessage(30, SyncActionValue.TimeFormatAction.write, obj.timeFormatAction);
    if (obj.nuxAction) pbf.writeMessage(31, SyncActionValue.NuxAction.write, obj.nuxAction);
    if (obj.primaryVersionAction) pbf.writeMessage(32, SyncActionValue.PrimaryVersionAction.write, obj.primaryVersionAction);
    if (obj.stickerAction) pbf.writeMessage(33, SyncActionValue.StickerAction.write, obj.stickerAction);
    if (obj.removeRecentStickerAction) pbf.writeMessage(34, SyncActionValue.RemoveRecentStickerAction.write, obj.removeRecentStickerAction);
    if (obj.chatAssignment) pbf.writeMessage(35, SyncActionValue.ChatAssignmentAction.write, obj.chatAssignment);
    if (obj.chatAssignmentOpenedStatus) pbf.writeMessage(36, SyncActionValue.ChatAssignmentOpenedStatusAction.write, obj.chatAssignmentOpenedStatus);
    if (obj.pnForLidChatAction) pbf.writeMessage(37, SyncActionValue.PnForLidChatAction.write, obj.pnForLidChatAction);
    if (obj.marketingMessageAction) pbf.writeMessage(38, SyncActionValue.MarketingMessageAction.write, obj.marketingMessageAction);
    if (obj.marketingMessageBroadcastAction) pbf.writeMessage(39, SyncActionValue.MarketingMessageBroadcastAction.write, obj.marketingMessageBroadcastAction);
    if (obj.externalWebBetaAction) pbf.writeMessage(40, SyncActionValue.ExternalWebBetaAction.write, obj.externalWebBetaAction);
    if (obj.privacySettingRelayAllCalls) pbf.writeMessage(41, SyncActionValue.PrivacySettingRelayAllCalls.write, obj.privacySettingRelayAllCalls);
};

// SyncActionValue.AgentAction ========================================

SyncActionValue.AgentAction = {};

SyncActionValue.AgentAction.read = function (pbf, end) {
    return pbf.readFields(SyncActionValue.AgentAction._readField, {name: "", deviceID: 0, isDeleted: false}, end);
};
SyncActionValue.AgentAction._readField = function (tag, obj, pbf) {
    if (tag === 1) obj.name = pbf.readString();
    else if (tag === 2) obj.deviceID = pbf.readVarint(true);
    else if (tag === 3) obj.isDeleted = pbf.readBoolean();
};
SyncActionValue.AgentAction.write = function (obj, pbf) {
    if (obj.name) pbf.writeStringField(1, obj.name);
    if (obj.deviceID) pbf.writeVarintField(2, obj.deviceID);
    if (obj.isDeleted) pbf.writeBooleanField(3, obj.isDeleted);
};

// SyncActionValue.AndroidUnsupportedActions ========================================

SyncActionValue.AndroidUnsupportedActions = {};

SyncActionValue.AndroidUnsupportedActions.read = function (pbf, end) {
    return pbf.readFields(SyncActionValue.AndroidUnsupportedActions._readField, {allowed: false}, end);
};
SyncActionValue.AndroidUnsupportedActions._readField = function (tag, obj, pbf) {
    if (tag === 1) obj.allowed = pbf.readBoolean();
};
SyncActionValue.AndroidUnsupportedActions.write = function (obj, pbf) {
    if (obj.allowed) pbf.writeBooleanField(1, obj.allowed);
};

// SyncActionValue.ArchiveChatAction ========================================

SyncActionValue.ArchiveChatAction = {};

SyncActionValue.ArchiveChatAction.read = function (pbf, end) {
    return pbf.readFields(SyncActionValue.ArchiveChatAction._readField, {archived: false, messageRange: null}, end);
};
SyncActionValue.ArchiveChatAction._readField = function (tag, obj, pbf) {
    if (tag === 1) obj.archived = pbf.readBoolean();
    else if (tag === 2) obj.messageRange = SyncActionValue.SyncActionMessageRange.read(pbf, pbf.readVarint() + pbf.pos);
};
SyncActionValue.ArchiveChatAction.write = function (obj, pbf) {
    if (obj.archived) pbf.writeBooleanField(1, obj.archived);
    if (obj.messageRange) pbf.writeMessage(2, SyncActionValue.SyncActionMessageRange.write, obj.messageRange);
};

// SyncActionValue.ChatAssignmentAction ========================================

SyncActionValue.ChatAssignmentAction = {};

SyncActionValue.ChatAssignmentAction.read = function (pbf, end) {
    return pbf.readFields(SyncActionValue.ChatAssignmentAction._readField, {deviceAgentID: ""}, end);
};
SyncActionValue.ChatAssignmentAction._readField = function (tag, obj, pbf) {
    if (tag === 1) obj.deviceAgentID = pbf.readString();
};
SyncActionValue.ChatAssignmentAction.write = function (obj, pbf) {
    if (obj.deviceAgentID) pbf.writeStringField(1, obj.deviceAgentID);
};

// SyncActionValue.ChatAssignmentOpenedStatusAction ========================================

SyncActionValue.ChatAssignmentOpenedStatusAction = {};

SyncActionValue.ChatAssignmentOpenedStatusAction.read = function (pbf, end) {
    return pbf.readFields(SyncActionValue.ChatAssignmentOpenedStatusAction._readField, {chatOpened: false}, end);
};
SyncActionValue.ChatAssignmentOpenedStatusAction._readField = function (tag, obj, pbf) {
    if (tag === 1) obj.chatOpened = pbf.readBoolean();
};
SyncActionValue.ChatAssignmentOpenedStatusAction.write = function (obj, pbf) {
    if (obj.chatOpened) pbf.writeBooleanField(1, obj.chatOpened);
};

// SyncActionValue.ClearChatAction ========================================

SyncActionValue.ClearChatAction = {};

SyncActionValue.ClearChatAction.read = function (pbf, end) {
    return pbf.readFields(SyncActionValue.ClearChatAction._readField, {messageRange: null}, end);
};
SyncActionValue.ClearChatAction._readField = function (tag, obj, pbf) {
    if (tag === 1) obj.messageRange = SyncActionValue.SyncActionMessageRange.read(pbf, pbf.readVarint() + pbf.pos);
};
SyncActionValue.ClearChatAction.write = function (obj, pbf) {
    if (obj.messageRange) pbf.writeMessage(1, SyncActionValue.SyncActionMessageRange.write, obj.messageRange);
};

// SyncActionValue.ContactAction ========================================

SyncActionValue.ContactAction = {};

SyncActionValue.ContactAction.read = function (pbf, end) {
    return pbf.readFields(SyncActionValue.ContactAction._readField, {fullName: "", firstName: "", lidJid: ""}, end);
};
SyncActionValue.ContactAction._readField = function (tag, obj, pbf) {
    if (tag === 1) obj.fullName = pbf.readString();
    else if (tag === 2) obj.firstName = pbf.readString();
    else if (tag === 3) obj.lidJid = pbf.readString();
};
SyncActionValue.ContactAction.write = function (obj, pbf) {
    if (obj.fullName) pbf.writeStringField(1, obj.fullName);
    if (obj.firstName) pbf.writeStringField(2, obj.firstName);
    if (obj.lidJid) pbf.writeStringField(3, obj.lidJid);
};

// SyncActionValue.DeleteChatAction ========================================

SyncActionValue.DeleteChatAction = {};

SyncActionValue.DeleteChatAction.read = function (pbf, end) {
    return pbf.readFields(SyncActionValue.DeleteChatAction._readField, {messageRange: null}, end);
};
SyncActionValue.DeleteChatAction._readField = function (tag, obj, pbf) {
    if (tag === 1) obj.messageRange = SyncActionValue.SyncActionMessageRange.read(pbf, pbf.readVarint() + pbf.pos);
};
SyncActionValue.DeleteChatAction.write = function (obj, pbf) {
    if (obj.messageRange) pbf.writeMessage(1, SyncActionValue.SyncActionMessageRange.write, obj.messageRange);
};

// SyncActionValue.DeleteMessageForMeAction ========================================

SyncActionValue.DeleteMessageForMeAction = {};

SyncActionValue.DeleteMessageForMeAction.read = function (pbf, end) {
    return pbf.readFields(SyncActionValue.DeleteMessageForMeAction._readField, {deleteMedia: false, messageTimestamp: 0}, end);
};
SyncActionValue.DeleteMessageForMeAction._readField = function (tag, obj, pbf) {
    if (tag === 1) obj.deleteMedia = pbf.readBoolean();
    else if (tag === 2) obj.messageTimestamp = pbf.readVarint(true);
};
SyncActionValue.DeleteMessageForMeAction.write = function (obj, pbf) {
    if (obj.deleteMedia) pbf.writeBooleanField(1, obj.deleteMedia);
    if (obj.messageTimestamp) pbf.writeVarintField(2, obj.messageTimestamp);
};

// SyncActionValue.ExternalWebBetaAction ========================================

SyncActionValue.ExternalWebBetaAction = {};

SyncActionValue.ExternalWebBetaAction.read = function (pbf, end) {
    return pbf.readFields(SyncActionValue.ExternalWebBetaAction._readField, {isOptIn: false}, end);
};
SyncActionValue.ExternalWebBetaAction._readField = function (tag, obj, pbf) {
    if (tag === 1) obj.isOptIn = pbf.readBoolean();
};
SyncActionValue.ExternalWebBetaAction.write = function (obj, pbf) {
    if (obj.isOptIn) pbf.writeBooleanField(1, obj.isOptIn);
};

// SyncActionValue.KeyExpiration ========================================

SyncActionValue.KeyExpiration = {};

SyncActionValue.KeyExpiration.read = function (pbf, end) {
    return pbf.readFields(SyncActionValue.KeyExpiration._readField, {expiredKeyEpoch: 0}, end);
};
SyncActionValue.KeyExpiration._readField = function (tag, obj, pbf) {
    if (tag === 1) obj.expiredKeyEpoch = pbf.readVarint(true);
};
SyncActionValue.KeyExpiration.write = function (obj, pbf) {
    if (obj.expiredKeyEpoch) pbf.writeVarintField(1, obj.expiredKeyEpoch);
};

// SyncActionValue.LabelAssociationAction ========================================

SyncActionValue.LabelAssociationAction = {};

SyncActionValue.LabelAssociationAction.read = function (pbf, end) {
    return pbf.readFields(SyncActionValue.LabelAssociationAction._readField, {labeled: false}, end);
};
SyncActionValue.LabelAssociationAction._readField = function (tag, obj, pbf) {
    if (tag === 1) obj.labeled = pbf.readBoolean();
};
SyncActionValue.LabelAssociationAction.write = function (obj, pbf) {
    if (obj.labeled) pbf.writeBooleanField(1, obj.labeled);
};

// SyncActionValue.LabelEditAction ========================================

SyncActionValue.LabelEditAction = {};

SyncActionValue.LabelEditAction.read = function (pbf, end) {
    return pbf.readFields(SyncActionValue.LabelEditAction._readField, {name: "", color: 0, predefinedId: 0, deleted: false}, end);
};
SyncActionValue.LabelEditAction._readField = function (tag, obj, pbf) {
    if (tag === 1) obj.name = pbf.readString();
    else if (tag === 2) obj.color = pbf.readVarint(true);
    else if (tag === 3) obj.predefinedId = pbf.readVarint(true);
    else if (tag === 4) obj.deleted = pbf.readBoolean();
};
SyncActionValue.LabelEditAction.write = function (obj, pbf) {
    if (obj.name) pbf.writeStringField(1, obj.name);
    if (obj.color) pbf.writeVarintField(2, obj.color);
    if (obj.predefinedId) pbf.writeVarintField(3, obj.predefinedId);
    if (obj.deleted) pbf.writeBooleanField(4, obj.deleted);
};

// SyncActionValue.LocaleSetting ========================================

SyncActionValue.LocaleSetting = {};

SyncActionValue.LocaleSetting.read = function (pbf, end) {
    return pbf.readFields(SyncActionValue.LocaleSetting._readField, {locale: ""}, end);
};
SyncActionValue.LocaleSetting._readField = function (tag, obj, pbf) {
    if (tag === 1) obj.locale = pbf.readString();
};
SyncActionValue.LocaleSetting.write = function (obj, pbf) {
    if (obj.locale) pbf.writeStringField(1, obj.locale);
};

// SyncActionValue.MarkChatAsReadAction ========================================

SyncActionValue.MarkChatAsReadAction = {};

SyncActionValue.MarkChatAsReadAction.read = function (pbf, end) {
    return pbf.readFields(SyncActionValue.MarkChatAsReadAction._readField, {read: false, messageRange: null}, end);
};
SyncActionValue.MarkChatAsReadAction._readField = function (tag, obj, pbf) {
    if (tag === 1) obj.read = pbf.readBoolean();
    else if (tag === 2) obj.messageRange = SyncActionValue.SyncActionMessageRange.read(pbf, pbf.readVarint() + pbf.pos);
};
SyncActionValue.MarkChatAsReadAction.write = function (obj, pbf) {
    if (obj.read) pbf.writeBooleanField(1, obj.read);
    if (obj.messageRange) pbf.writeMessage(2, SyncActionValue.SyncActionMessageRange.write, obj.messageRange);
};

// SyncActionValue.MarketingMessageAction ========================================

SyncActionValue.MarketingMessageAction = {};

SyncActionValue.MarketingMessageAction.read = function (pbf, end) {
    return pbf.readFields(SyncActionValue.MarketingMessageAction._readField, {name: "", message: "", type: 0, createdAt: 0, lastSentAt: 0, isDeleted: false, mediaId: ""}, end);
};
SyncActionValue.MarketingMessageAction._readField = function (tag, obj, pbf) {
    if (tag === 1) obj.name = pbf.readString();
    else if (tag === 2) obj.message = pbf.readString();
    else if (tag === 3) obj.type = pbf.readVarint();
    else if (tag === 4) obj.createdAt = pbf.readVarint(true);
    else if (tag === 5) obj.lastSentAt = pbf.readVarint(true);
    else if (tag === 6) obj.isDeleted = pbf.readBoolean();
    else if (tag === 7) obj.mediaId = pbf.readString();
};
SyncActionValue.MarketingMessageAction.write = function (obj, pbf) {
    if (obj.name) pbf.writeStringField(1, obj.name);
    if (obj.message) pbf.writeStringField(2, obj.message);
    if (obj.type) pbf.writeVarintField(3, obj.type);
    if (obj.createdAt) pbf.writeVarintField(4, obj.createdAt);
    if (obj.lastSentAt) pbf.writeVarintField(5, obj.lastSentAt);
    if (obj.isDeleted) pbf.writeBooleanField(6, obj.isDeleted);
    if (obj.mediaId) pbf.writeStringField(7, obj.mediaId);
};

SyncActionValue.MarketingMessageAction.MarketingMessagePrototypeType = {
    "PERSONALIZED": {
        "value": 0,
        "options": {}
    }
};

// SyncActionValue.MarketingMessageBroadcastAction ========================================

SyncActionValue.MarketingMessageBroadcastAction = {};

SyncActionValue.MarketingMessageBroadcastAction.read = function (pbf, end) {
    return pbf.readFields(SyncActionValue.MarketingMessageBroadcastAction._readField, {repliedCount: 0}, end);
};
SyncActionValue.MarketingMessageBroadcastAction._readField = function (tag, obj, pbf) {
    if (tag === 1) obj.repliedCount = pbf.readVarint(true);
};
SyncActionValue.MarketingMessageBroadcastAction.write = function (obj, pbf) {
    if (obj.repliedCount) pbf.writeVarintField(1, obj.repliedCount);
};

// SyncActionValue.MuteAction ========================================

SyncActionValue.MuteAction = {};

SyncActionValue.MuteAction.read = function (pbf, end) {
    return pbf.readFields(SyncActionValue.MuteAction._readField, {muted: false, muteEndTimestamp: 0, autoMuted: false}, end);
};
SyncActionValue.MuteAction._readField = function (tag, obj, pbf) {
    if (tag === 1) obj.muted = pbf.readBoolean();
    else if (tag === 2) obj.muteEndTimestamp = pbf.readVarint(true);
    else if (tag === 3) obj.autoMuted = pbf.readBoolean();
};
SyncActionValue.MuteAction.write = function (obj, pbf) {
    if (obj.muted) pbf.writeBooleanField(1, obj.muted);
    if (obj.muteEndTimestamp) pbf.writeVarintField(2, obj.muteEndTimestamp);
    if (obj.autoMuted) pbf.writeBooleanField(3, obj.autoMuted);
};

// SyncActionValue.NuxAction ========================================

SyncActionValue.NuxAction = {};

SyncActionValue.NuxAction.read = function (pbf, end) {
    return pbf.readFields(SyncActionValue.NuxAction._readField, {acknowledged: false}, end);
};
SyncActionValue.NuxAction._readField = function (tag, obj, pbf) {
    if (tag === 1) obj.acknowledged = pbf.readBoolean();
};
SyncActionValue.NuxAction.write = function (obj, pbf) {
    if (obj.acknowledged) pbf.writeBooleanField(1, obj.acknowledged);
};

// SyncActionValue.PinAction ========================================

SyncActionValue.PinAction = {};

SyncActionValue.PinAction.read = function (pbf, end) {
    return pbf.readFields(SyncActionValue.PinAction._readField, {pinned: false}, end);
};
SyncActionValue.PinAction._readField = function (tag, obj, pbf) {
    if (tag === 1) obj.pinned = pbf.readBoolean();
};
SyncActionValue.PinAction.write = function (obj, pbf) {
    if (obj.pinned) pbf.writeBooleanField(1, obj.pinned);
};

// SyncActionValue.PnForLidChatAction ========================================

SyncActionValue.PnForLidChatAction = {};

SyncActionValue.PnForLidChatAction.read = function (pbf, end) {
    return pbf.readFields(SyncActionValue.PnForLidChatAction._readField, {pnJid: ""}, end);
};
SyncActionValue.PnForLidChatAction._readField = function (tag, obj, pbf) {
    if (tag === 1) obj.pnJid = pbf.readString();
};
SyncActionValue.PnForLidChatAction.write = function (obj, pbf) {
    if (obj.pnJid) pbf.writeStringField(1, obj.pnJid);
};

// SyncActionValue.PrimaryFeature ========================================

SyncActionValue.PrimaryFeature = {};

SyncActionValue.PrimaryFeature.read = function (pbf, end) {
    return pbf.readFields(SyncActionValue.PrimaryFeature._readField, {flags: []}, end);
};
SyncActionValue.PrimaryFeature._readField = function (tag, obj, pbf) {
    if (tag === 1) obj.flags.push(pbf.readString());
};
SyncActionValue.PrimaryFeature.write = function (obj, pbf) {
    if (obj.flags) for (var i = 0; i < obj.flags.length; i++) pbf.writeStringField(1, obj.flags[i]);
};

// SyncActionValue.PrimaryVersionAction ========================================

SyncActionValue.PrimaryVersionAction = {};

SyncActionValue.PrimaryVersionAction.read = function (pbf, end) {
    return pbf.readFields(SyncActionValue.PrimaryVersionAction._readField, {version: ""}, end);
};
SyncActionValue.PrimaryVersionAction._readField = function (tag, obj, pbf) {
    if (tag === 1) obj.version = pbf.readString();
};
SyncActionValue.PrimaryVersionAction.write = function (obj, pbf) {
    if (obj.version) pbf.writeStringField(1, obj.version);
};

// SyncActionValue.PrivacySettingRelayAllCalls ========================================

SyncActionValue.PrivacySettingRelayAllCalls = {};

SyncActionValue.PrivacySettingRelayAllCalls.read = function (pbf, end) {
    return pbf.readFields(SyncActionValue.PrivacySettingRelayAllCalls._readField, {isEnabled: false}, end);
};
SyncActionValue.PrivacySettingRelayAllCalls._readField = function (tag, obj, pbf) {
    if (tag === 1) obj.isEnabled = pbf.readBoolean();
};
SyncActionValue.PrivacySettingRelayAllCalls.write = function (obj, pbf) {
    if (obj.isEnabled) pbf.writeBooleanField(1, obj.isEnabled);
};

// SyncActionValue.PushNameSetting ========================================

SyncActionValue.PushNameSetting = {};

SyncActionValue.PushNameSetting.read = function (pbf, end) {
    return pbf.readFields(SyncActionValue.PushNameSetting._readField, {name: ""}, end);
};
SyncActionValue.PushNameSetting._readField = function (tag, obj, pbf) {
    if (tag === 1) obj.name = pbf.readString();
};
SyncActionValue.PushNameSetting.write = function (obj, pbf) {
    if (obj.name) pbf.writeStringField(1, obj.name);
};

// SyncActionValue.QuickReplyAction ========================================

SyncActionValue.QuickReplyAction = {};

SyncActionValue.QuickReplyAction.read = function (pbf, end) {
    return pbf.readFields(SyncActionValue.QuickReplyAction._readField, {shortcut: "", message: "", keywords: [], count: 0, deleted: false}, end);
};
SyncActionValue.QuickReplyAction._readField = function (tag, obj, pbf) {
    if (tag === 1) obj.shortcut = pbf.readString();
    else if (tag === 2) obj.message = pbf.readString();
    else if (tag === 3) obj.keywords.push(pbf.readString());
    else if (tag === 4) obj.count = pbf.readVarint(true);
    else if (tag === 5) obj.deleted = pbf.readBoolean();
};
SyncActionValue.QuickReplyAction.write = function (obj, pbf) {
    if (obj.shortcut) pbf.writeStringField(1, obj.shortcut);
    if (obj.message) pbf.writeStringField(2, obj.message);
    if (obj.keywords) for (var i = 0; i < obj.keywords.length; i++) pbf.writeStringField(3, obj.keywords[i]);
    if (obj.count) pbf.writeVarintField(4, obj.count);
    if (obj.deleted) pbf.writeBooleanField(5, obj.deleted);
};

// SyncActionValue.RecentEmojiWeightsAction ========================================

SyncActionValue.RecentEmojiWeightsAction = {};

SyncActionValue.RecentEmojiWeightsAction.read = function (pbf, end) {
    return pbf.readFields(SyncActionValue.RecentEmojiWeightsAction._readField, {weights: []}, end);
};
SyncActionValue.RecentEmojiWeightsAction._readField = function (tag, obj, pbf) {
    if (tag === 1) obj.weights.push(RecentEmojiWeight.read(pbf, pbf.readVarint() + pbf.pos));
};
SyncActionValue.RecentEmojiWeightsAction.write = function (obj, pbf) {
    if (obj.weights) for (var i = 0; i < obj.weights.length; i++) pbf.writeMessage(1, RecentEmojiWeight.write, obj.weights[i]);
};

// SyncActionValue.RemoveRecentStickerAction ========================================

SyncActionValue.RemoveRecentStickerAction = {};

SyncActionValue.RemoveRecentStickerAction.read = function (pbf, end) {
    return pbf.readFields(SyncActionValue.RemoveRecentStickerAction._readField, {lastStickerSentTs: 0}, end);
};
SyncActionValue.RemoveRecentStickerAction._readField = function (tag, obj, pbf) {
    if (tag === 1) obj.lastStickerSentTs = pbf.readVarint(true);
};
SyncActionValue.RemoveRecentStickerAction.write = function (obj, pbf) {
    if (obj.lastStickerSentTs) pbf.writeVarintField(1, obj.lastStickerSentTs);
};

// SyncActionValue.SecurityNotificationSetting ========================================

SyncActionValue.SecurityNotificationSetting = {};

SyncActionValue.SecurityNotificationSetting.read = function (pbf, end) {
    return pbf.readFields(SyncActionValue.SecurityNotificationSetting._readField, {showNotification: false}, end);
};
SyncActionValue.SecurityNotificationSetting._readField = function (tag, obj, pbf) {
    if (tag === 1) obj.showNotification = pbf.readBoolean();
};
SyncActionValue.SecurityNotificationSetting.write = function (obj, pbf) {
    if (obj.showNotification) pbf.writeBooleanField(1, obj.showNotification);
};

// SyncActionValue.StarAction ========================================

SyncActionValue.StarAction = {};

SyncActionValue.StarAction.read = function (pbf, end) {
    return pbf.readFields(SyncActionValue.StarAction._readField, {starred: false}, end);
};
SyncActionValue.StarAction._readField = function (tag, obj, pbf) {
    if (tag === 1) obj.starred = pbf.readBoolean();
};
SyncActionValue.StarAction.write = function (obj, pbf) {
    if (obj.starred) pbf.writeBooleanField(1, obj.starred);
};

// SyncActionValue.StickerAction ========================================

SyncActionValue.StickerAction = {};

SyncActionValue.StickerAction.read = function (pbf, end) {
    return pbf.readFields(SyncActionValue.StickerAction._readField, {url: "", fileEncSha256: null, mediaKey: null, mimetype: "", height: 0, width: 0, directPath: "", fileLength: 0, isFavorite: false, deviceIdHint: 0}, end);
};
SyncActionValue.StickerAction._readField = function (tag, obj, pbf) {
    if (tag === 1) obj.url = pbf.readString();
    else if (tag === 2) obj.fileEncSha256 = pbf.readBytes();
    else if (tag === 3) obj.mediaKey = pbf.readBytes();
    else if (tag === 4) obj.mimetype = pbf.readString();
    else if (tag === 5) obj.height = pbf.readVarint();
    else if (tag === 6) obj.width = pbf.readVarint();
    else if (tag === 7) obj.directPath = pbf.readString();
    else if (tag === 8) obj.fileLength = pbf.readVarint();
    else if (tag === 9) obj.isFavorite = pbf.readBoolean();
    else if (tag === 10) obj.deviceIdHint = pbf.readVarint();
};
SyncActionValue.StickerAction.write = function (obj, pbf) {
    if (obj.url) pbf.writeStringField(1, obj.url);
    if (obj.fileEncSha256) pbf.writeBytesField(2, obj.fileEncSha256);
    if (obj.mediaKey) pbf.writeBytesField(3, obj.mediaKey);
    if (obj.mimetype) pbf.writeStringField(4, obj.mimetype);
    if (obj.height) pbf.writeVarintField(5, obj.height);
    if (obj.width) pbf.writeVarintField(6, obj.width);
    if (obj.directPath) pbf.writeStringField(7, obj.directPath);
    if (obj.fileLength) pbf.writeVarintField(8, obj.fileLength);
    if (obj.isFavorite) pbf.writeBooleanField(9, obj.isFavorite);
    if (obj.deviceIdHint) pbf.writeVarintField(10, obj.deviceIdHint);
};

// SyncActionValue.SubscriptionAction ========================================

SyncActionValue.SubscriptionAction = {};

SyncActionValue.SubscriptionAction.read = function (pbf, end) {
    return pbf.readFields(SyncActionValue.SubscriptionAction._readField, {isDeactivated: false, isAutoRenewing: false, expirationDate: 0}, end);
};
SyncActionValue.SubscriptionAction._readField = function (tag, obj, pbf) {
    if (tag === 1) obj.isDeactivated = pbf.readBoolean();
    else if (tag === 2) obj.isAutoRenewing = pbf.readBoolean();
    else if (tag === 3) obj.expirationDate = pbf.readVarint(true);
};
SyncActionValue.SubscriptionAction.write = function (obj, pbf) {
    if (obj.isDeactivated) pbf.writeBooleanField(1, obj.isDeactivated);
    if (obj.isAutoRenewing) pbf.writeBooleanField(2, obj.isAutoRenewing);
    if (obj.expirationDate) pbf.writeVarintField(3, obj.expirationDate);
};

// SyncActionValue.SyncActionMessage ========================================

SyncActionValue.SyncActionMessage = {};

SyncActionValue.SyncActionMessage.read = function (pbf, end) {
    return pbf.readFields(SyncActionValue.SyncActionMessage._readField, {key: null, timestamp: 0}, end);
};
SyncActionValue.SyncActionMessage._readField = function (tag, obj, pbf) {
    if (tag === 1) obj.key = MessageKey.read(pbf, pbf.readVarint() + pbf.pos);
    else if (tag === 2) obj.timestamp = pbf.readVarint(true);
};
SyncActionValue.SyncActionMessage.write = function (obj, pbf) {
    if (obj.key) pbf.writeMessage(1, MessageKey.write, obj.key);
    if (obj.timestamp) pbf.writeVarintField(2, obj.timestamp);
};

// SyncActionValue.SyncActionMessageRange ========================================

SyncActionValue.SyncActionMessageRange = {};

SyncActionValue.SyncActionMessageRange.read = function (pbf, end) {
    return pbf.readFields(SyncActionValue.SyncActionMessageRange._readField, {lastMessageTimestamp: 0, lastSystemMessageTimestamp: 0, messages: []}, end);
};
SyncActionValue.SyncActionMessageRange._readField = function (tag, obj, pbf) {
    if (tag === 1) obj.lastMessageTimestamp = pbf.readVarint(true);
    else if (tag === 2) obj.lastSystemMessageTimestamp = pbf.readVarint(true);
    else if (tag === 3) obj.messages.push(SyncActionValue.SyncActionMessage.read(pbf, pbf.readVarint() + pbf.pos));
};
SyncActionValue.SyncActionMessageRange.write = function (obj, pbf) {
    if (obj.lastMessageTimestamp) pbf.writeVarintField(1, obj.lastMessageTimestamp);
    if (obj.lastSystemMessageTimestamp) pbf.writeVarintField(2, obj.lastSystemMessageTimestamp);
    if (obj.messages) for (var i = 0; i < obj.messages.length; i++) pbf.writeMessage(3, SyncActionValue.SyncActionMessage.write, obj.messages[i]);
};

// SyncActionValue.TimeFormatAction ========================================

SyncActionValue.TimeFormatAction = {};

SyncActionValue.TimeFormatAction.read = function (pbf, end) {
    return pbf.readFields(SyncActionValue.TimeFormatAction._readField, {isTwentyFourHourFormatEnabled: false}, end);
};
SyncActionValue.TimeFormatAction._readField = function (tag, obj, pbf) {
    if (tag === 1) obj.isTwentyFourHourFormatEnabled = pbf.readBoolean();
};
SyncActionValue.TimeFormatAction.write = function (obj, pbf) {
    if (obj.isTwentyFourHourFormatEnabled) pbf.writeBooleanField(1, obj.isTwentyFourHourFormatEnabled);
};

// SyncActionValue.UnarchiveChatsSetting ========================================

SyncActionValue.UnarchiveChatsSetting = {};

SyncActionValue.UnarchiveChatsSetting.read = function (pbf, end) {
    return pbf.readFields(SyncActionValue.UnarchiveChatsSetting._readField, {unarchiveChats: false}, end);
};
SyncActionValue.UnarchiveChatsSetting._readField = function (tag, obj, pbf) {
    if (tag === 1) obj.unarchiveChats = pbf.readBoolean();
};
SyncActionValue.UnarchiveChatsSetting.write = function (obj, pbf) {
    if (obj.unarchiveChats) pbf.writeBooleanField(1, obj.unarchiveChats);
};

// SyncActionValue.UserStatusMuteAction ========================================

SyncActionValue.UserStatusMuteAction = {};

SyncActionValue.UserStatusMuteAction.read = function (pbf, end) {
    return pbf.readFields(SyncActionValue.UserStatusMuteAction._readField, {muted: false}, end);
};
SyncActionValue.UserStatusMuteAction._readField = function (tag, obj, pbf) {
    if (tag === 1) obj.muted = pbf.readBoolean();
};
SyncActionValue.UserStatusMuteAction.write = function (obj, pbf) {
    if (obj.muted) pbf.writeBooleanField(1, obj.muted);
};

// SyncdIndex ========================================

var SyncdIndex = self.SyncdIndex = {};

SyncdIndex.read = function (pbf, end) {
    return pbf.readFields(SyncdIndex._readField, {blob: null}, end);
};
SyncdIndex._readField = function (tag, obj, pbf) {
    if (tag === 1) obj.blob = pbf.readBytes();
};
SyncdIndex.write = function (obj, pbf) {
    if (obj.blob) pbf.writeBytesField(1, obj.blob);
};

// SyncdMutation ========================================

var SyncdMutation = self.SyncdMutation = {};

SyncdMutation.read = function (pbf, end) {
    return pbf.readFields(SyncdMutation._readField, {operation: 0, record: null}, end);
};
SyncdMutation._readField = function (tag, obj, pbf) {
    if (tag === 1) obj.operation = pbf.readVarint();
    else if (tag === 2) obj.record = SyncdRecord.read(pbf, pbf.readVarint() + pbf.pos);
};
SyncdMutation.write = function (obj, pbf) {
    if (obj.operation) pbf.writeVarintField(1, obj.operation);
    if (obj.record) pbf.writeMessage(2, SyncdRecord.write, obj.record);
};

SyncdMutation.SyncdOperation = {
    "SET": {
        "value": 0,
        "options": {}
    },
    "REMOVE": {
        "value": 1,
        "options": {}
    }
};

// SyncdMutations ========================================

var SyncdMutations = self.SyncdMutations = {};

SyncdMutations.read = function (pbf, end) {
    return pbf.readFields(SyncdMutations._readField, {mutations: []}, end);
};
SyncdMutations._readField = function (tag, obj, pbf) {
    if (tag === 1) obj.mutations.push(SyncdMutation.read(pbf, pbf.readVarint() + pbf.pos));
};
SyncdMutations.write = function (obj, pbf) {
    if (obj.mutations) for (var i = 0; i < obj.mutations.length; i++) pbf.writeMessage(1, SyncdMutation.write, obj.mutations[i]);
};

// SyncdPatch ========================================

var SyncdPatch = self.SyncdPatch = {};

SyncdPatch.read = function (pbf, end) {
    return pbf.readFields(SyncdPatch._readField, {version: null, mutations: [], externalMutations: null, snapshotMac: null, patchMac: null, keyId: null, exitCode: null, deviceIndex: 0}, end);
};
SyncdPatch._readField = function (tag, obj, pbf) {
    if (tag === 1) obj.version = SyncdVersion.read(pbf, pbf.readVarint() + pbf.pos);
    else if (tag === 2) obj.mutations.push(SyncdMutation.read(pbf, pbf.readVarint() + pbf.pos));
    else if (tag === 3) obj.externalMutations = ExternalBlobReference.read(pbf, pbf.readVarint() + pbf.pos);
    else if (tag === 4) obj.snapshotMac = pbf.readBytes();
    else if (tag === 5) obj.patchMac = pbf.readBytes();
    else if (tag === 6) obj.keyId = KeyId.read(pbf, pbf.readVarint() + pbf.pos);
    else if (tag === 7) obj.exitCode = ExitCode.read(pbf, pbf.readVarint() + pbf.pos);
    else if (tag === 8) obj.deviceIndex = pbf.readVarint();
};
SyncdPatch.write = function (obj, pbf) {
    if (obj.version) pbf.writeMessage(1, SyncdVersion.write, obj.version);
    if (obj.mutations) for (var i = 0; i < obj.mutations.length; i++) pbf.writeMessage(2, SyncdMutation.write, obj.mutations[i]);
    if (obj.externalMutations) pbf.writeMessage(3, ExternalBlobReference.write, obj.externalMutations);
    if (obj.snapshotMac) pbf.writeBytesField(4, obj.snapshotMac);
    if (obj.patchMac) pbf.writeBytesField(5, obj.patchMac);
    if (obj.keyId) pbf.writeMessage(6, KeyId.write, obj.keyId);
    if (obj.exitCode) pbf.writeMessage(7, ExitCode.write, obj.exitCode);
    if (obj.deviceIndex) pbf.writeVarintField(8, obj.deviceIndex);
};

// SyncdRecord ========================================

var SyncdRecord = self.SyncdRecord = {};

SyncdRecord.read = function (pbf, end) {
    return pbf.readFields(SyncdRecord._readField, {index: null, value: null, keyId: null}, end);
};
SyncdRecord._readField = function (tag, obj, pbf) {
    if (tag === 1) obj.index = SyncdIndex.read(pbf, pbf.readVarint() + pbf.pos);
    else if (tag === 2) obj.value = SyncdValue.read(pbf, pbf.readVarint() + pbf.pos);
    else if (tag === 3) obj.keyId = KeyId.read(pbf, pbf.readVarint() + pbf.pos);
};
SyncdRecord.write = function (obj, pbf) {
    if (obj.index) pbf.writeMessage(1, SyncdIndex.write, obj.index);
    if (obj.value) pbf.writeMessage(2, SyncdValue.write, obj.value);
    if (obj.keyId) pbf.writeMessage(3, KeyId.write, obj.keyId);
};

// SyncdSnapshot ========================================

var SyncdSnapshot = self.SyncdSnapshot = {};

SyncdSnapshot.read = function (pbf, end) {
    return pbf.readFields(SyncdSnapshot._readField, {version: null, records: [], mac: null, keyId: null}, end);
};
SyncdSnapshot._readField = function (tag, obj, pbf) {
    if (tag === 1) obj.version = SyncdVersion.read(pbf, pbf.readVarint() + pbf.pos);
    else if (tag === 2) obj.records.push(SyncdRecord.read(pbf, pbf.readVarint() + pbf.pos));
    else if (tag === 3) obj.mac = pbf.readBytes();
    else if (tag === 4) obj.keyId = KeyId.read(pbf, pbf.readVarint() + pbf.pos);
};
SyncdSnapshot.write = function (obj, pbf) {
    if (obj.version) pbf.writeMessage(1, SyncdVersion.write, obj.version);
    if (obj.records) for (var i = 0; i < obj.records.length; i++) pbf.writeMessage(2, SyncdRecord.write, obj.records[i]);
    if (obj.mac) pbf.writeBytesField(3, obj.mac);
    if (obj.keyId) pbf.writeMessage(4, KeyId.write, obj.keyId);
};

// SyncdValue ========================================

var SyncdValue = self.SyncdValue = {};

SyncdValue.read = function (pbf, end) {
    return pbf.readFields(SyncdValue._readField, {blob: null}, end);
};
SyncdValue._readField = function (tag, obj, pbf) {
    if (tag === 1) obj.blob = pbf.readBytes();
};
SyncdValue.write = function (obj, pbf) {
    if (obj.blob) pbf.writeBytesField(1, obj.blob);
};

// SyncdVersion ========================================

var SyncdVersion = self.SyncdVersion = {};

SyncdVersion.read = function (pbf, end) {
    return pbf.readFields(SyncdVersion._readField, {version: 0}, end);
};
SyncdVersion._readField = function (tag, obj, pbf) {
    if (tag === 1) obj.version = pbf.readVarint();
};
SyncdVersion.write = function (obj, pbf) {
    if (obj.version) pbf.writeVarintField(1, obj.version);
};

// TemplateButton ========================================

var TemplateButton = self.TemplateButton = {};

TemplateButton.read = function (pbf, end) {
    return pbf.readFields(TemplateButton._readField, {index: 0, quickReplyButton: null, button: null, urlButton: null, callButton: null}, end);
};
TemplateButton._readField = function (tag, obj, pbf) {
    if (tag === 4) obj.index = pbf.readVarint();
    else if (tag === 1) obj.quickReplyButton = TemplateButton.QuickReplyButton.read(pbf, pbf.readVarint() + pbf.pos), obj.button = "quickReplyButton";
    else if (tag === 2) obj.urlButton = TemplateButton.URLButton.read(pbf, pbf.readVarint() + pbf.pos), obj.button = "urlButton";
    else if (tag === 3) obj.callButton = TemplateButton.CallButton.read(pbf, pbf.readVarint() + pbf.pos), obj.button = "callButton";
};
TemplateButton.write = function (obj, pbf) {
    if (obj.index) pbf.writeVarintField(4, obj.index);
    if (obj.quickReplyButton) pbf.writeMessage(1, TemplateButton.QuickReplyButton.write, obj.quickReplyButton);
    if (obj.urlButton) pbf.writeMessage(2, TemplateButton.URLButton.write, obj.urlButton);
    if (obj.callButton) pbf.writeMessage(3, TemplateButton.CallButton.write, obj.callButton);
};

// TemplateButton.CallButton ========================================

TemplateButton.CallButton = {};

TemplateButton.CallButton.read = function (pbf, end) {
    return pbf.readFields(TemplateButton.CallButton._readField, {displayText: null, phoneNumber: null}, end);
};
TemplateButton.CallButton._readField = function (tag, obj, pbf) {
    if (tag === 1) obj.displayText = Message.HighlyStructuredMessage.read(pbf, pbf.readVarint() + pbf.pos);
    else if (tag === 2) obj.phoneNumber = Message.HighlyStructuredMessage.read(pbf, pbf.readVarint() + pbf.pos);
};
TemplateButton.CallButton.write = function (obj, pbf) {
    if (obj.displayText) pbf.writeMessage(1, Message.HighlyStructuredMessage.write, obj.displayText);
    if (obj.phoneNumber) pbf.writeMessage(2, Message.HighlyStructuredMessage.write, obj.phoneNumber);
};

// TemplateButton.QuickReplyButton ========================================

TemplateButton.QuickReplyButton = {};

TemplateButton.QuickReplyButton.read = function (pbf, end) {
    return pbf.readFields(TemplateButton.QuickReplyButton._readField, {displayText: null, id: ""}, end);
};
TemplateButton.QuickReplyButton._readField = function (tag, obj, pbf) {
    if (tag === 1) obj.displayText = Message.HighlyStructuredMessage.read(pbf, pbf.readVarint() + pbf.pos);
    else if (tag === 2) obj.id = pbf.readString();
};
TemplateButton.QuickReplyButton.write = function (obj, pbf) {
    if (obj.displayText) pbf.writeMessage(1, Message.HighlyStructuredMessage.write, obj.displayText);
    if (obj.id) pbf.writeStringField(2, obj.id);
};

// TemplateButton.URLButton ========================================

TemplateButton.URLButton = {};

TemplateButton.URLButton.read = function (pbf, end) {
    return pbf.readFields(TemplateButton.URLButton._readField, {displayText: null, url: null}, end);
};
TemplateButton.URLButton._readField = function (tag, obj, pbf) {
    if (tag === 1) obj.displayText = Message.HighlyStructuredMessage.read(pbf, pbf.readVarint() + pbf.pos);
    else if (tag === 2) obj.url = Message.HighlyStructuredMessage.read(pbf, pbf.readVarint() + pbf.pos);
};
TemplateButton.URLButton.write = function (obj, pbf) {
    if (obj.displayText) pbf.writeMessage(1, Message.HighlyStructuredMessage.write, obj.displayText);
    if (obj.url) pbf.writeMessage(2, Message.HighlyStructuredMessage.write, obj.url);
};

// UserReceipt ========================================

var UserReceipt = self.UserReceipt = {};

UserReceipt.read = function (pbf, end) {
    return pbf.readFields(UserReceipt._readField, {userJid: "", receiptTimestamp: 0, readTimestamp: 0, playedTimestamp: 0, pendingDeviceJid: [], deliveredDeviceJid: []}, end);
};
UserReceipt._readField = function (tag, obj, pbf) {
    if (tag === 1) obj.userJid = pbf.readString();
    else if (tag === 2) obj.receiptTimestamp = pbf.readVarint(true);
    else if (tag === 3) obj.readTimestamp = pbf.readVarint(true);
    else if (tag === 4) obj.playedTimestamp = pbf.readVarint(true);
    else if (tag === 5) obj.pendingDeviceJid.push(pbf.readString());
    else if (tag === 6) obj.deliveredDeviceJid.push(pbf.readString());
};
UserReceipt.write = function (obj, pbf) {
    if (obj.userJid) pbf.writeStringField(1, obj.userJid);
    if (obj.receiptTimestamp) pbf.writeVarintField(2, obj.receiptTimestamp);
    if (obj.readTimestamp) pbf.writeVarintField(3, obj.readTimestamp);
    if (obj.playedTimestamp) pbf.writeVarintField(4, obj.playedTimestamp);
    if (obj.pendingDeviceJid) for (var i = 0; i < obj.pendingDeviceJid.length; i++) pbf.writeStringField(5, obj.pendingDeviceJid[i]);
    if (obj.deliveredDeviceJid) for (i = 0; i < obj.deliveredDeviceJid.length; i++) pbf.writeStringField(6, obj.deliveredDeviceJid[i]);
};

// VerifiedNameCertificate ========================================

var VerifiedNameCertificate = self.VerifiedNameCertificate = {};

VerifiedNameCertificate.read = function (pbf, end) {
    return pbf.readFields(VerifiedNameCertificate._readField, {details: null, signature: null, serverSignature: null}, end);
};
VerifiedNameCertificate._readField = function (tag, obj, pbf) {
    if (tag === 1) obj.details = pbf.readBytes();
    else if (tag === 2) obj.signature = pbf.readBytes();
    else if (tag === 3) obj.serverSignature = pbf.readBytes();
};
VerifiedNameCertificate.write = function (obj, pbf) {
    if (obj.details) pbf.writeBytesField(1, obj.details);
    if (obj.signature) pbf.writeBytesField(2, obj.signature);
    if (obj.serverSignature) pbf.writeBytesField(3, obj.serverSignature);
};

// VerifiedNameCertificate.Details ========================================

VerifiedNameCertificate.Details = {};

VerifiedNameCertificate.Details.read = function (pbf, end) {
    return pbf.readFields(VerifiedNameCertificate.Details._readField, {serial: 0, issuer: "", verifiedName: "", localizedNames: [], issueTime: 0}, end);
};
VerifiedNameCertificate.Details._readField = function (tag, obj, pbf) {
    if (tag === 1) obj.serial = pbf.readVarint();
    else if (tag === 2) obj.issuer = pbf.readString();
    else if (tag === 4) obj.verifiedName = pbf.readString();
    else if (tag === 8) obj.localizedNames.push(LocalizedName.read(pbf, pbf.readVarint() + pbf.pos));
    else if (tag === 10) obj.issueTime = pbf.readVarint();
};
VerifiedNameCertificate.Details.write = function (obj, pbf) {
    if (obj.serial) pbf.writeVarintField(1, obj.serial);
    if (obj.issuer) pbf.writeStringField(2, obj.issuer);
    if (obj.verifiedName) pbf.writeStringField(4, obj.verifiedName);
    if (obj.localizedNames) for (var i = 0; i < obj.localizedNames.length; i++) pbf.writeMessage(8, LocalizedName.write, obj.localizedNames[i]);
    if (obj.issueTime) pbf.writeVarintField(10, obj.issueTime);
};

// WallpaperSettings ========================================

var WallpaperSettings = self.WallpaperSettings = {};

WallpaperSettings.read = function (pbf, end) {
    return pbf.readFields(WallpaperSettings._readField, {filename: "", opacity: 0}, end);
};
WallpaperSettings._readField = function (tag, obj, pbf) {
    if (tag === 1) obj.filename = pbf.readString();
    else if (tag === 2) obj.opacity = pbf.readVarint();
};
WallpaperSettings.write = function (obj, pbf) {
    if (obj.filename) pbf.writeStringField(1, obj.filename);
    if (obj.opacity) pbf.writeVarintField(2, obj.opacity);
};

// WebFeatures ========================================

var WebFeatures = self.WebFeatures = {};

WebFeatures.read = function (pbf, end) {
    return pbf.readFields(WebFeatures._readField, {labelsDisplay: 0, voipIndividualOutgoing: 0, groupsV3: 0, groupsV3Create: 0, changeNumberV2: 0, queryStatusV3Thumbnail: 0, liveLocations: 0, queryVname: 0, voipIndividualIncoming: 0, quickRepliesQuery: 0, payments: 0, stickerPackQuery: 0, liveLocationsFinal: 0, labelsEdit: 0, mediaUpload: 0, mediaUploadRichQuickReplies: 0, vnameV2: 0, videoPlaybackUrl: 0, statusRanking: 0, voipIndividualVideo: 0, thirdPartyStickers: 0, frequentlyForwardedSetting: 0, groupsV4JoinPermission: 0, recentStickers: 0, catalog: 0, starredStickers: 0, voipGroupCall: 0, templateMessage: 0, templateMessageInteractivity: 0, ephemeralMessages: 0, e2ENotificationSync: 0, recentStickersV2: 0, recentStickersV3: 0, userNotice: 0, support: 0, groupUiiCleanup: 0, groupDogfoodingInternalOnly: 0, settingsSync: 0, archiveV2: 0, ephemeralAllowGroupMembers: 0, ephemeral24HDuration: 0, mdForceUpgrade: 0, disappearingMode: 0, externalMdOptInAvailable: 0, noDeleteMessageTimeLimit: 0}, end);
};
WebFeatures._readField = function (tag, obj, pbf) {
    if (tag === 1) obj.labelsDisplay = pbf.readVarint();
    else if (tag === 2) obj.voipIndividualOutgoing = pbf.readVarint();
    else if (tag === 3) obj.groupsV3 = pbf.readVarint();
    else if (tag === 4) obj.groupsV3Create = pbf.readVarint();
    else if (tag === 5) obj.changeNumberV2 = pbf.readVarint();
    else if (tag === 6) obj.queryStatusV3Thumbnail = pbf.readVarint();
    else if (tag === 7) obj.liveLocations = pbf.readVarint();
    else if (tag === 8) obj.queryVname = pbf.readVarint();
    else if (tag === 9) obj.voipIndividualIncoming = pbf.readVarint();
    else if (tag === 10) obj.quickRepliesQuery = pbf.readVarint();
    else if (tag === 11) obj.payments = pbf.readVarint();
    else if (tag === 12) obj.stickerPackQuery = pbf.readVarint();
    else if (tag === 13) obj.liveLocationsFinal = pbf.readVarint();
    else if (tag === 14) obj.labelsEdit = pbf.readVarint();
    else if (tag === 15) obj.mediaUpload = pbf.readVarint();
    else if (tag === 18) obj.mediaUploadRichQuickReplies = pbf.readVarint();
    else if (tag === 19) obj.vnameV2 = pbf.readVarint();
    else if (tag === 20) obj.videoPlaybackUrl = pbf.readVarint();
    else if (tag === 21) obj.statusRanking = pbf.readVarint();
    else if (tag === 22) obj.voipIndividualVideo = pbf.readVarint();
    else if (tag === 23) obj.thirdPartyStickers = pbf.readVarint();
    else if (tag === 24) obj.frequentlyForwardedSetting = pbf.readVarint();
    else if (tag === 25) obj.groupsV4JoinPermission = pbf.readVarint();
    else if (tag === 26) obj.recentStickers = pbf.readVarint();
    else if (tag === 27) obj.catalog = pbf.readVarint();
    else if (tag === 28) obj.starredStickers = pbf.readVarint();
    else if (tag === 29) obj.voipGroupCall = pbf.readVarint();
    else if (tag === 30) obj.templateMessage = pbf.readVarint();
    else if (tag === 31) obj.templateMessageInteractivity = pbf.readVarint();
    else if (tag === 32) obj.ephemeralMessages = pbf.readVarint();
    else if (tag === 33) obj.e2ENotificationSync = pbf.readVarint();
    else if (tag === 34) obj.recentStickersV2 = pbf.readVarint();
    else if (tag === 36) obj.recentStickersV3 = pbf.readVarint();
    else if (tag === 37) obj.userNotice = pbf.readVarint();
    else if (tag === 39) obj.support = pbf.readVarint();
    else if (tag === 40) obj.groupUiiCleanup = pbf.readVarint();
    else if (tag === 41) obj.groupDogfoodingInternalOnly = pbf.readVarint();
    else if (tag === 42) obj.settingsSync = pbf.readVarint();
    else if (tag === 43) obj.archiveV2 = pbf.readVarint();
    else if (tag === 44) obj.ephemeralAllowGroupMembers = pbf.readVarint();
    else if (tag === 45) obj.ephemeral24HDuration = pbf.readVarint();
    else if (tag === 46) obj.mdForceUpgrade = pbf.readVarint();
    else if (tag === 47) obj.disappearingMode = pbf.readVarint();
    else if (tag === 48) obj.externalMdOptInAvailable = pbf.readVarint();
    else if (tag === 49) obj.noDeleteMessageTimeLimit = pbf.readVarint();
};
WebFeatures.write = function (obj, pbf) {
    if (obj.labelsDisplay) pbf.writeVarintField(1, obj.labelsDisplay);
    if (obj.voipIndividualOutgoing) pbf.writeVarintField(2, obj.voipIndividualOutgoing);
    if (obj.groupsV3) pbf.writeVarintField(3, obj.groupsV3);
    if (obj.groupsV3Create) pbf.writeVarintField(4, obj.groupsV3Create);
    if (obj.changeNumberV2) pbf.writeVarintField(5, obj.changeNumberV2);
    if (obj.queryStatusV3Thumbnail) pbf.writeVarintField(6, obj.queryStatusV3Thumbnail);
    if (obj.liveLocations) pbf.writeVarintField(7, obj.liveLocations);
    if (obj.queryVname) pbf.writeVarintField(8, obj.queryVname);
    if (obj.voipIndividualIncoming) pbf.writeVarintField(9, obj.voipIndividualIncoming);
    if (obj.quickRepliesQuery) pbf.writeVarintField(10, obj.quickRepliesQuery);
    if (obj.payments) pbf.writeVarintField(11, obj.payments);
    if (obj.stickerPackQuery) pbf.writeVarintField(12, obj.stickerPackQuery);
    if (obj.liveLocationsFinal) pbf.writeVarintField(13, obj.liveLocationsFinal);
    if (obj.labelsEdit) pbf.writeVarintField(14, obj.labelsEdit);
    if (obj.mediaUpload) pbf.writeVarintField(15, obj.mediaUpload);
    if (obj.mediaUploadRichQuickReplies) pbf.writeVarintField(18, obj.mediaUploadRichQuickReplies);
    if (obj.vnameV2) pbf.writeVarintField(19, obj.vnameV2);
    if (obj.videoPlaybackUrl) pbf.writeVarintField(20, obj.videoPlaybackUrl);
    if (obj.statusRanking) pbf.writeVarintField(21, obj.statusRanking);
    if (obj.voipIndividualVideo) pbf.writeVarintField(22, obj.voipIndividualVideo);
    if (obj.thirdPartyStickers) pbf.writeVarintField(23, obj.thirdPartyStickers);
    if (obj.frequentlyForwardedSetting) pbf.writeVarintField(24, obj.frequentlyForwardedSetting);
    if (obj.groupsV4JoinPermission) pbf.writeVarintField(25, obj.groupsV4JoinPermission);
    if (obj.recentStickers) pbf.writeVarintField(26, obj.recentStickers);
    if (obj.catalog) pbf.writeVarintField(27, obj.catalog);
    if (obj.starredStickers) pbf.writeVarintField(28, obj.starredStickers);
    if (obj.voipGroupCall) pbf.writeVarintField(29, obj.voipGroupCall);
    if (obj.templateMessage) pbf.writeVarintField(30, obj.templateMessage);
    if (obj.templateMessageInteractivity) pbf.writeVarintField(31, obj.templateMessageInteractivity);
    if (obj.ephemeralMessages) pbf.writeVarintField(32, obj.ephemeralMessages);
    if (obj.e2ENotificationSync) pbf.writeVarintField(33, obj.e2ENotificationSync);
    if (obj.recentStickersV2) pbf.writeVarintField(34, obj.recentStickersV2);
    if (obj.recentStickersV3) pbf.writeVarintField(36, obj.recentStickersV3);
    if (obj.userNotice) pbf.writeVarintField(37, obj.userNotice);
    if (obj.support) pbf.writeVarintField(39, obj.support);
    if (obj.groupUiiCleanup) pbf.writeVarintField(40, obj.groupUiiCleanup);
    if (obj.groupDogfoodingInternalOnly) pbf.writeVarintField(41, obj.groupDogfoodingInternalOnly);
    if (obj.settingsSync) pbf.writeVarintField(42, obj.settingsSync);
    if (obj.archiveV2) pbf.writeVarintField(43, obj.archiveV2);
    if (obj.ephemeralAllowGroupMembers) pbf.writeVarintField(44, obj.ephemeralAllowGroupMembers);
    if (obj.ephemeral24HDuration) pbf.writeVarintField(45, obj.ephemeral24HDuration);
    if (obj.mdForceUpgrade) pbf.writeVarintField(46, obj.mdForceUpgrade);
    if (obj.disappearingMode) pbf.writeVarintField(47, obj.disappearingMode);
    if (obj.externalMdOptInAvailable) pbf.writeVarintField(48, obj.externalMdOptInAvailable);
    if (obj.noDeleteMessageTimeLimit) pbf.writeVarintField(49, obj.noDeleteMessageTimeLimit);
};

WebFeatures.Flag = {
    "NOT_STARTED": {
        "value": 0,
        "options": {}
    },
    "FORCE_UPGRADE": {
        "value": 1,
        "options": {}
    },
    "DEVELOPMENT": {
        "value": 2,
        "options": {}
    },
    "PRODUCTION": {
        "value": 3,
        "options": {}
    }
};

// WebMessageInfo ========================================

var WebMessageInfo = self.WebMessageInfo = {};

WebMessageInfo.read = function (pbf, end) {
    return pbf.readFields(WebMessageInfo._readField, {key: null, message: null, messageTimestamp: 0, status: 0, participant: "", messageC2STimestamp: 0, ignore: false, starred: false, broadcast: false, pushName: "", mediaCiphertextSha256: null, multicast: false, urlText: false, urlNumber: false, messageStubType: 0, clearMedia: false, messageStubParameters: [], duration: 0, labels: [], paymentInfo: null, finalLiveLocation: null, quotedPaymentInfo: null, ephemeralStartTimestamp: 0, ephemeralDuration: 0, ephemeralOffToOn: false, ephemeralOutOfSync: false, bizPrivacyStatus: 0, verifiedBizName: "", mediaData: null, photoChange: null, userReceipt: [], reactions: [], quotedStickerData: null, futureproofData: null, statusPsa: null, pollUpdates: [], pollAdditionalMetadata: null, agentId: "", statusAlreadyViewed: false, messageSecret: null, keepInChat: null, originalSelfAuthorUserJidString: "", revokeMessageTimestamp: 0, pinInChat: null}, end);
};
WebMessageInfo._readField = function (tag, obj, pbf) {
    if (tag === 1) obj.key = MessageKey.read(pbf, pbf.readVarint() + pbf.pos);
    else if (tag === 2) obj.message = Message.read(pbf, pbf.readVarint() + pbf.pos);
    else if (tag === 3) obj.messageTimestamp = pbf.readVarint();
    else if (tag === 4) obj.status = pbf.readVarint();
    else if (tag === 5) obj.participant = pbf.readString();
    else if (tag === 6) obj.messageC2STimestamp = pbf.readVarint();
    else if (tag === 16) obj.ignore = pbf.readBoolean();
    else if (tag === 17) obj.starred = pbf.readBoolean();
    else if (tag === 18) obj.broadcast = pbf.readBoolean();
    else if (tag === 19) obj.pushName = pbf.readString();
    else if (tag === 20) obj.mediaCiphertextSha256 = pbf.readBytes();
    else if (tag === 21) obj.multicast = pbf.readBoolean();
    else if (tag === 22) obj.urlText = pbf.readBoolean();
    else if (tag === 23) obj.urlNumber = pbf.readBoolean();
    else if (tag === 24) obj.messageStubType = pbf.readVarint();
    else if (tag === 25) obj.clearMedia = pbf.readBoolean();
    else if (tag === 26) obj.messageStubParameters.push(pbf.readString());
    else if (tag === 27) obj.duration = pbf.readVarint();
    else if (tag === 28) obj.labels.push(pbf.readString());
    else if (tag === 29) obj.paymentInfo = PaymentInfo.read(pbf, pbf.readVarint() + pbf.pos);
    else if (tag === 30) obj.finalLiveLocation = Message.LiveLocationMessage.read(pbf, pbf.readVarint() + pbf.pos);
    else if (tag === 31) obj.quotedPaymentInfo = PaymentInfo.read(pbf, pbf.readVarint() + pbf.pos);
    else if (tag === 32) obj.ephemeralStartTimestamp = pbf.readVarint();
    else if (tag === 33) obj.ephemeralDuration = pbf.readVarint();
    else if (tag === 34) obj.ephemeralOffToOn = pbf.readBoolean();
    else if (tag === 35) obj.ephemeralOutOfSync = pbf.readBoolean();
    else if (tag === 36) obj.bizPrivacyStatus = pbf.readVarint();
    else if (tag === 37) obj.verifiedBizName = pbf.readString();
    else if (tag === 38) obj.mediaData = MediaData.read(pbf, pbf.readVarint() + pbf.pos);
    else if (tag === 39) obj.photoChange = PhotoChange.read(pbf, pbf.readVarint() + pbf.pos);
    else if (tag === 40) obj.userReceipt.push(UserReceipt.read(pbf, pbf.readVarint() + pbf.pos));
    else if (tag === 41) obj.reactions.push(Reaction.read(pbf, pbf.readVarint() + pbf.pos));
    else if (tag === 42) obj.quotedStickerData = MediaData.read(pbf, pbf.readVarint() + pbf.pos);
    else if (tag === 43) obj.futureproofData = pbf.readBytes();
    else if (tag === 44) obj.statusPsa = StatusPSA.read(pbf, pbf.readVarint() + pbf.pos);
    else if (tag === 45) obj.pollUpdates.push(PollUpdate.read(pbf, pbf.readVarint() + pbf.pos));
    else if (tag === 46) obj.pollAdditionalMetadata = PollAdditionalMetadata.read(pbf, pbf.readVarint() + pbf.pos);
    else if (tag === 47) obj.agentId = pbf.readString();
    else if (tag === 48) obj.statusAlreadyViewed = pbf.readBoolean();
    else if (tag === 49) obj.messageSecret = pbf.readBytes();
    else if (tag === 50) obj.keepInChat = KeepInChat.read(pbf, pbf.readVarint() + pbf.pos);
    else if (tag === 51) obj.originalSelfAuthorUserJidString = pbf.readString();
    else if (tag === 52) obj.revokeMessageTimestamp = pbf.readVarint();
    else if (tag === 54) obj.pinInChat = PinInChat.read(pbf, pbf.readVarint() + pbf.pos);
};
WebMessageInfo.write = function (obj, pbf) {
    if (obj.key) pbf.writeMessage(1, MessageKey.write, obj.key);
    if (obj.message) pbf.writeMessage(2, Message.write, obj.message);
    if (obj.messageTimestamp) pbf.writeVarintField(3, obj.messageTimestamp);
    if (obj.status) pbf.writeVarintField(4, obj.status);
    if (obj.participant) pbf.writeStringField(5, obj.participant);
    if (obj.messageC2STimestamp) pbf.writeVarintField(6, obj.messageC2STimestamp);
    if (obj.ignore) pbf.writeBooleanField(16, obj.ignore);
    if (obj.starred) pbf.writeBooleanField(17, obj.starred);
    if (obj.broadcast) pbf.writeBooleanField(18, obj.broadcast);
    if (obj.pushName) pbf.writeStringField(19, obj.pushName);
    if (obj.mediaCiphertextSha256) pbf.writeBytesField(20, obj.mediaCiphertextSha256);
    if (obj.multicast) pbf.writeBooleanField(21, obj.multicast);
    if (obj.urlText) pbf.writeBooleanField(22, obj.urlText);
    if (obj.urlNumber) pbf.writeBooleanField(23, obj.urlNumber);
    if (obj.messageStubType) pbf.writeVarintField(24, obj.messageStubType);
    if (obj.clearMedia) pbf.writeBooleanField(25, obj.clearMedia);
    if (obj.messageStubParameters) for (var i = 0; i < obj.messageStubParameters.length; i++) pbf.writeStringField(26, obj.messageStubParameters[i]);
    if (obj.duration) pbf.writeVarintField(27, obj.duration);
    if (obj.labels) for (i = 0; i < obj.labels.length; i++) pbf.writeStringField(28, obj.labels[i]);
    if (obj.paymentInfo) pbf.writeMessage(29, PaymentInfo.write, obj.paymentInfo);
    if (obj.finalLiveLocation) pbf.writeMessage(30, Message.LiveLocationMessage.write, obj.finalLiveLocation);
    if (obj.quotedPaymentInfo) pbf.writeMessage(31, PaymentInfo.write, obj.quotedPaymentInfo);
    if (obj.ephemeralStartTimestamp) pbf.writeVarintField(32, obj.ephemeralStartTimestamp);
    if (obj.ephemeralDuration) pbf.writeVarintField(33, obj.ephemeralDuration);
    if (obj.ephemeralOffToOn) pbf.writeBooleanField(34, obj.ephemeralOffToOn);
    if (obj.ephemeralOutOfSync) pbf.writeBooleanField(35, obj.ephemeralOutOfSync);
    if (obj.bizPrivacyStatus) pbf.writeVarintField(36, obj.bizPrivacyStatus);
    if (obj.verifiedBizName) pbf.writeStringField(37, obj.verifiedBizName);
    if (obj.mediaData) pbf.writeMessage(38, MediaData.write, obj.mediaData);
    if (obj.photoChange) pbf.writeMessage(39, PhotoChange.write, obj.photoChange);
    if (obj.userReceipt) for (i = 0; i < obj.userReceipt.length; i++) pbf.writeMessage(40, UserReceipt.write, obj.userReceipt[i]);
    if (obj.reactions) for (i = 0; i < obj.reactions.length; i++) pbf.writeMessage(41, Reaction.write, obj.reactions[i]);
    if (obj.quotedStickerData) pbf.writeMessage(42, MediaData.write, obj.quotedStickerData);
    if (obj.futureproofData) pbf.writeBytesField(43, obj.futureproofData);
    if (obj.statusPsa) pbf.writeMessage(44, StatusPSA.write, obj.statusPsa);
    if (obj.pollUpdates) for (i = 0; i < obj.pollUpdates.length; i++) pbf.writeMessage(45, PollUpdate.write, obj.pollUpdates[i]);
    if (obj.pollAdditionalMetadata) pbf.writeMessage(46, PollAdditionalMetadata.write, obj.pollAdditionalMetadata);
    if (obj.agentId) pbf.writeStringField(47, obj.agentId);
    if (obj.statusAlreadyViewed) pbf.writeBooleanField(48, obj.statusAlreadyViewed);
    if (obj.messageSecret) pbf.writeBytesField(49, obj.messageSecret);
    if (obj.keepInChat) pbf.writeMessage(50, KeepInChat.write, obj.keepInChat);
    if (obj.originalSelfAuthorUserJidString) pbf.writeStringField(51, obj.originalSelfAuthorUserJidString);
    if (obj.revokeMessageTimestamp) pbf.writeVarintField(52, obj.revokeMessageTimestamp);
    if (obj.pinInChat) pbf.writeMessage(54, PinInChat.write, obj.pinInChat);
};

WebMessageInfo.BizPrivacyStatus = {
    "E2EE": {
        "value": 0,
        "options": {}
    },
    "FB": {
        "value": 2,
        "options": {}
    },
    "BSP": {
        "value": 1,
        "options": {}
    },
    "BSP_AND_FB": {
        "value": 3,
        "options": {}
    }
};

WebMessageInfo.Status = {
    "ERROR": {
        "value": 0,
        "options": {}
    },
    "PENDING": {
        "value": 1,
        "options": {}
    },
    "SERVER_ACK": {
        "value": 2,
        "options": {}
    },
    "DELIVERY_ACK": {
        "value": 3,
        "options": {}
    },
    "READ": {
        "value": 4,
        "options": {}
    },
    "PLAYED": {
        "value": 5,
        "options": {}
    }
};

WebMessageInfo.StubType = {
    "UNKNOWN": {
        "value": 0,
        "options": {}
    },
    "REVOKE": {
        "value": 1,
        "options": {}
    },
    "CIPHERTEXT": {
        "value": 2,
        "options": {}
    },
    "FUTUREPROOF": {
        "value": 3,
        "options": {}
    },
    "NON_VERIFIED_TRANSITION": {
        "value": 4,
        "options": {}
    },
    "UNVERIFIED_TRANSITION": {
        "value": 5,
        "options": {}
    },
    "VERIFIED_TRANSITION": {
        "value": 6,
        "options": {}
    },
    "VERIFIED_LOW_UNKNOWN": {
        "value": 7,
        "options": {}
    },
    "VERIFIED_HIGH": {
        "value": 8,
        "options": {}
    },
    "VERIFIED_INITIAL_UNKNOWN": {
        "value": 9,
        "options": {}
    },
    "VERIFIED_INITIAL_LOW": {
        "value": 10,
        "options": {}
    },
    "VERIFIED_INITIAL_HIGH": {
        "value": 11,
        "options": {}
    },
    "VERIFIED_TRANSITION_ANY_TO_NONE": {
        "value": 12,
        "options": {}
    },
    "VERIFIED_TRANSITION_ANY_TO_HIGH": {
        "value": 13,
        "options": {}
    },
    "VERIFIED_TRANSITION_HIGH_TO_LOW": {
        "value": 14,
        "options": {}
    },
    "VERIFIED_TRANSITION_HIGH_TO_UNKNOWN": {
        "value": 15,
        "options": {}
    },
    "VERIFIED_TRANSITION_UNKNOWN_TO_LOW": {
        "value": 16,
        "options": {}
    },
    "VERIFIED_TRANSITION_LOW_TO_UNKNOWN": {
        "value": 17,
        "options": {}
    },
    "VERIFIED_TRANSITION_NONE_TO_LOW": {
        "value": 18,
        "options": {}
    },
    "VERIFIED_TRANSITION_NONE_TO_UNKNOWN": {
        "value": 19,
        "options": {}
    },
    "GROUP_CREATE": {
        "value": 20,
        "options": {}
    },
    "GROUP_CHANGE_SUBJECT": {
        "value": 21,
        "options": {}
    },
    "GROUP_CHANGE_ICON": {
        "value": 22,
        "options": {}
    },
    "GROUP_CHANGE_INVITE_LINK": {
        "value": 23,
        "options": {}
    },
    "GROUP_CHANGE_DESCRIPTION": {
        "value": 24,
        "options": {}
    },
    "GROUP_CHANGE_RESTRICT": {
        "value": 25,
        "options": {}
    },
    "GROUP_CHANGE_ANNOUNCE": {
        "value": 26,
        "options": {}
    },
    "GROUP_PARTICIPANT_ADD": {
        "value": 27,
        "options": {}
    },
    "GROUP_PARTICIPANT_REMOVE": {
        "value": 28,
        "options": {}
    },
    "GROUP_PARTICIPANT_PROMOTE": {
        "value": 29,
        "options": {}
    },
    "GROUP_PARTICIPANT_DEMOTE": {
        "value": 30,
        "options": {}
    },
    "GROUP_PARTICIPANT_INVITE": {
        "value": 31,
        "options": {}
    },
    "GROUP_PARTICIPANT_LEAVE": {
        "value": 32,
        "options": {}
    },
    "GROUP_PARTICIPANT_CHANGE_NUMBER": {
        "value": 33,
        "options": {}
    },
    "BROADCAST_CREATE": {
        "value": 34,
        "options": {}
    },
    "BROADCAST_ADD": {
        "value": 35,
        "options": {}
    },
    "BROADCAST_REMOVE": {
        "value": 36,
        "options": {}
    },
    "GENERIC_NOTIFICATION": {
        "value": 37,
        "options": {}
    },
    "E2E_IDENTITY_CHANGED": {
        "value": 38,
        "options": {}
    },
    "E2E_ENCRYPTED": {
        "value": 39,
        "options": {}
    },
    "CALL_MISSED_VOICE": {
        "value": 40,
        "options": {}
    },
    "CALL_MISSED_VIDEO": {
        "value": 41,
        "options": {}
    },
    "INDIVIDUAL_CHANGE_NUMBER": {
        "value": 42,
        "options": {}
    },
    "GROUP_DELETE": {
        "value": 43,
        "options": {}
    },
    "GROUP_ANNOUNCE_MODE_MESSAGE_BOUNCE": {
        "value": 44,
        "options": {}
    },
    "CALL_MISSED_GROUP_VOICE": {
        "value": 45,
        "options": {}
    },
    "CALL_MISSED_GROUP_VIDEO": {
        "value": 46,
        "options": {}
    },
    "PAYMENT_CIPHERTEXT": {
        "value": 47,
        "options": {}
    },
    "PAYMENT_FUTUREPROOF": {
        "value": 48,
        "options": {}
    },
    "PAYMENT_TRANSACTION_STATUS_UPDATE_FAILED": {
        "value": 49,
        "options": {}
    },
    "PAYMENT_TRANSACTION_STATUS_UPDATE_REFUNDED": {
        "value": 50,
        "options": {}
    },
    "PAYMENT_TRANSACTION_STATUS_UPDATE_REFUND_FAILED": {
        "value": 51,
        "options": {}
    },
    "PAYMENT_TRANSACTION_STATUS_RECEIVER_PENDING_SETUP": {
        "value": 52,
        "options": {}
    },
    "PAYMENT_TRANSACTION_STATUS_RECEIVER_SUCCESS_AFTER_HICCUP": {
        "value": 53,
        "options": {}
    },
    "PAYMENT_ACTION_ACCOUNT_SETUP_REMINDER": {
        "value": 54,
        "options": {}
    },
    "PAYMENT_ACTION_SEND_PAYMENT_REMINDER": {
        "value": 55,
        "options": {}
    },
    "PAYMENT_ACTION_SEND_PAYMENT_INVITATION": {
        "value": 56,
        "options": {}
    },
    "PAYMENT_ACTION_REQUEST_DECLINED": {
        "value": 57,
        "options": {}
    },
    "PAYMENT_ACTION_REQUEST_EXPIRED": {
        "value": 58,
        "options": {}
    },
    "PAYMENT_ACTION_REQUEST_CANCELLED": {
        "value": 59,
        "options": {}
    },
    "BIZ_VERIFIED_TRANSITION_TOP_TO_BOTTOM": {
        "value": 60,
        "options": {}
    },
    "BIZ_VERIFIED_TRANSITION_BOTTOM_TO_TOP": {
        "value": 61,
        "options": {}
    },
    "BIZ_INTRO_TOP": {
        "value": 62,
        "options": {}
    },
    "BIZ_INTRO_BOTTOM": {
        "value": 63,
        "options": {}
    },
    "BIZ_NAME_CHANGE": {
        "value": 64,
        "options": {}
    },
    "BIZ_MOVE_TO_CONSUMER_APP": {
        "value": 65,
        "options": {}
    },
    "BIZ_TWO_TIER_MIGRATION_TOP": {
        "value": 66,
        "options": {}
    },
    "BIZ_TWO_TIER_MIGRATION_BOTTOM": {
        "value": 67,
        "options": {}
    },
    "OVERSIZED": {
        "value": 68,
        "options": {}
    },
    "GROUP_CHANGE_NO_FREQUENTLY_FORWARDED": {
        "value": 69,
        "options": {}
    },
    "GROUP_V4_ADD_INVITE_SENT": {
        "value": 70,
        "options": {}
    },
    "GROUP_PARTICIPANT_ADD_REQUEST_JOIN": {
        "value": 71,
        "options": {}
    },
    "CHANGE_EPHEMERAL_SETTING": {
        "value": 72,
        "options": {}
    },
    "E2E_DEVICE_CHANGED": {
        "value": 73,
        "options": {}
    },
    "VIEWED_ONCE": {
        "value": 74,
        "options": {}
    },
    "E2E_ENCRYPTED_NOW": {
        "value": 75,
        "options": {}
    },
    "BLUE_MSG_BSP_FB_TO_BSP_PREMISE": {
        "value": 76,
        "options": {}
    },
    "BLUE_MSG_BSP_FB_TO_SELF_FB": {
        "value": 77,
        "options": {}
    },
    "BLUE_MSG_BSP_FB_TO_SELF_PREMISE": {
        "value": 78,
        "options": {}
    },
    "BLUE_MSG_BSP_FB_UNVERIFIED": {
        "value": 79,
        "options": {}
    },
    "BLUE_MSG_BSP_FB_UNVERIFIED_TO_SELF_PREMISE_VERIFIED": {
        "value": 80,
        "options": {}
    },
    "BLUE_MSG_BSP_FB_VERIFIED": {
        "value": 81,
        "options": {}
    },
    "BLUE_MSG_BSP_FB_VERIFIED_TO_SELF_PREMISE_UNVERIFIED": {
        "value": 82,
        "options": {}
    },
    "BLUE_MSG_BSP_PREMISE_TO_SELF_PREMISE": {
        "value": 83,
        "options": {}
    },
    "BLUE_MSG_BSP_PREMISE_UNVERIFIED": {
        "value": 84,
        "options": {}
    },
    "BLUE_MSG_BSP_PREMISE_UNVERIFIED_TO_SELF_PREMISE_VERIFIED": {
        "value": 85,
        "options": {}
    },
    "BLUE_MSG_BSP_PREMISE_VERIFIED": {
        "value": 86,
        "options": {}
    },
    "BLUE_MSG_BSP_PREMISE_VERIFIED_TO_SELF_PREMISE_UNVERIFIED": {
        "value": 87,
        "options": {}
    },
    "BLUE_MSG_CONSUMER_TO_BSP_FB_UNVERIFIED": {
        "value": 88,
        "options": {}
    },
    "BLUE_MSG_CONSUMER_TO_BSP_PREMISE_UNVERIFIED": {
        "value": 89,
        "options": {}
    },
    "BLUE_MSG_CONSUMER_TO_SELF_FB_UNVERIFIED": {
        "value": 90,
        "options": {}
    },
    "BLUE_MSG_CONSUMER_TO_SELF_PREMISE_UNVERIFIED": {
        "value": 91,
        "options": {}
    },
    "BLUE_MSG_SELF_FB_TO_BSP_PREMISE": {
        "value": 92,
        "options": {}
    },
    "BLUE_MSG_SELF_FB_TO_SELF_PREMISE": {
        "value": 93,
        "options": {}
    },
    "BLUE_MSG_SELF_FB_UNVERIFIED": {
        "value": 94,
        "options": {}
    },
    "BLUE_MSG_SELF_FB_UNVERIFIED_TO_SELF_PREMISE_VERIFIED": {
        "value": 95,
        "options": {}
    },
    "BLUE_MSG_SELF_FB_VERIFIED": {
        "value": 96,
        "options": {}
    },
    "BLUE_MSG_SELF_FB_VERIFIED_TO_SELF_PREMISE_UNVERIFIED": {
        "value": 97,
        "options": {}
    },
    "BLUE_MSG_SELF_PREMISE_TO_BSP_PREMISE": {
        "value": 98,
        "options": {}
    },
    "BLUE_MSG_SELF_PREMISE_UNVERIFIED": {
        "value": 99,
        "options": {}
    },
    "BLUE_MSG_SELF_PREMISE_VERIFIED": {
        "value": 100,
        "options": {}
    },
    "BLUE_MSG_TO_BSP_FB": {
        "value": 101,
        "options": {}
    },
    "BLUE_MSG_TO_CONSUMER": {
        "value": 102,
        "options": {}
    },
    "BLUE_MSG_TO_SELF_FB": {
        "value": 103,
        "options": {}
    },
    "BLUE_MSG_UNVERIFIED_TO_BSP_FB_VERIFIED": {
        "value": 104,
        "options": {}
    },
    "BLUE_MSG_UNVERIFIED_TO_BSP_PREMISE_VERIFIED": {
        "value": 105,
        "options": {}
    },
    "BLUE_MSG_UNVERIFIED_TO_SELF_FB_VERIFIED": {
        "value": 106,
        "options": {}
    },
    "BLUE_MSG_UNVERIFIED_TO_VERIFIED": {
        "value": 107,
        "options": {}
    },
    "BLUE_MSG_VERIFIED_TO_BSP_FB_UNVERIFIED": {
        "value": 108,
        "options": {}
    },
    "BLUE_MSG_VERIFIED_TO_BSP_PREMISE_UNVERIFIED": {
        "value": 109,
        "options": {}
    },
    "BLUE_MSG_VERIFIED_TO_SELF_FB_UNVERIFIED": {
        "value": 110,
        "options": {}
    },
    "BLUE_MSG_VERIFIED_TO_UNVERIFIED": {
        "value": 111,
        "options": {}
    },
    "BLUE_MSG_BSP_FB_UNVERIFIED_TO_BSP_PREMISE_VERIFIED": {
        "value": 112,
        "options": {}
    },
    "BLUE_MSG_BSP_FB_UNVERIFIED_TO_SELF_FB_VERIFIED": {
        "value": 113,
        "options": {}
    },
    "BLUE_MSG_BSP_FB_VERIFIED_TO_BSP_PREMISE_UNVERIFIED": {
        "value": 114,
        "options": {}
    },
    "BLUE_MSG_BSP_FB_VERIFIED_TO_SELF_FB_UNVERIFIED": {
        "value": 115,
        "options": {}
    },
    "BLUE_MSG_SELF_FB_UNVERIFIED_TO_BSP_PREMISE_VERIFIED": {
        "value": 116,
        "options": {}
    },
    "BLUE_MSG_SELF_FB_VERIFIED_TO_BSP_PREMISE_UNVERIFIED": {
        "value": 117,
        "options": {}
    },
    "E2E_IDENTITY_UNAVAILABLE": {
        "value": 118,
        "options": {}
    },
    "GROUP_CREATING": {
        "value": 119,
        "options": {}
    },
    "GROUP_CREATE_FAILED": {
        "value": 120,
        "options": {}
    },
    "GROUP_BOUNCED": {
        "value": 121,
        "options": {}
    },
    "BLOCK_CONTACT": {
        "value": 122,
        "options": {}
    },
    "EPHEMERAL_SETTING_NOT_APPLIED": {
        "value": 123,
        "options": {}
    },
    "SYNC_FAILED": {
        "value": 124,
        "options": {}
    },
    "SYNCING": {
        "value": 125,
        "options": {}
    },
    "BIZ_PRIVACY_MODE_INIT_FB": {
        "value": 126,
        "options": {}
    },
    "BIZ_PRIVACY_MODE_INIT_BSP": {
        "value": 127,
        "options": {}
    },
    "BIZ_PRIVACY_MODE_TO_FB": {
        "value": 128,
        "options": {}
    },
    "BIZ_PRIVACY_MODE_TO_BSP": {
        "value": 129,
        "options": {}
    },
    "DISAPPEARING_MODE": {
        "value": 130,
        "options": {}
    },
    "E2E_DEVICE_FETCH_FAILED": {
        "value": 131,
        "options": {}
    },
    "ADMIN_REVOKE": {
        "value": 132,
        "options": {}
    },
    "GROUP_INVITE_LINK_GROWTH_LOCKED": {
        "value": 133,
        "options": {}
    },
    "COMMUNITY_LINK_PARENT_GROUP": {
        "value": 134,
        "options": {}
    },
    "COMMUNITY_LINK_SIBLING_GROUP": {
        "value": 135,
        "options": {}
    },
    "COMMUNITY_LINK_SUB_GROUP": {
        "value": 136,
        "options": {}
    },
    "COMMUNITY_UNLINK_PARENT_GROUP": {
        "value": 137,
        "options": {}
    },
    "COMMUNITY_UNLINK_SIBLING_GROUP": {
        "value": 138,
        "options": {}
    },
    "COMMUNITY_UNLINK_SUB_GROUP": {
        "value": 139,
        "options": {}
    },
    "GROUP_PARTICIPANT_ACCEPT": {
        "value": 140,
        "options": {}
    },
    "GROUP_PARTICIPANT_LINKED_GROUP_JOIN": {
        "value": 141,
        "options": {}
    },
    "COMMUNITY_CREATE": {
        "value": 142,
        "options": {}
    },
    "EPHEMERAL_KEEP_IN_CHAT": {
        "value": 143,
        "options": {}
    },
    "GROUP_MEMBERSHIP_JOIN_APPROVAL_REQUEST": {
        "value": 144,
        "options": {}
    },
    "GROUP_MEMBERSHIP_JOIN_APPROVAL_MODE": {
        "value": 145,
        "options": {}
    },
    "INTEGRITY_UNLINK_PARENT_GROUP": {
        "value": 146,
        "options": {}
    },
    "COMMUNITY_PARTICIPANT_PROMOTE": {
        "value": 147,
        "options": {}
    },
    "COMMUNITY_PARTICIPANT_DEMOTE": {
        "value": 148,
        "options": {}
    },
    "COMMUNITY_PARENT_GROUP_DELETED": {
        "value": 149,
        "options": {}
    },
    "COMMUNITY_LINK_PARENT_GROUP_MEMBERSHIP_APPROVAL": {
        "value": 150,
        "options": {}
    },
    "GROUP_PARTICIPANT_JOINED_GROUP_AND_PARENT_GROUP": {
        "value": 151,
        "options": {}
    },
    "MASKED_THREAD_CREATED": {
        "value": 152,
        "options": {}
    },
    "MASKED_THREAD_UNMASKED": {
        "value": 153,
        "options": {}
    },
    "BIZ_CHAT_ASSIGNMENT": {
        "value": 154,
        "options": {}
    },
    "CHAT_PSA": {
        "value": 155,
        "options": {}
    },
    "CHAT_POLL_CREATION_MESSAGE": {
        "value": 156,
        "options": {}
    },
    "CAG_MASKED_THREAD_CREATED": {
        "value": 157,
        "options": {}
    },
    "COMMUNITY_PARENT_GROUP_SUBJECT_CHANGED": {
        "value": 158,
        "options": {}
    },
    "CAG_INVITE_AUTO_ADD": {
        "value": 159,
        "options": {}
    },
    "BIZ_CHAT_ASSIGNMENT_UNASSIGN": {
        "value": 160,
        "options": {}
    },
    "CAG_INVITE_AUTO_JOINED": {
        "value": 161,
        "options": {}
    },
    "SCHEDULED_CALL_START_MESSAGE": {
        "value": 162,
        "options": {}
    },
    "COMMUNITY_INVITE_RICH": {
        "value": 163,
        "options": {}
    },
    "COMMUNITY_INVITE_AUTO_ADD_RICH": {
        "value": 164,
        "options": {}
    },
    "SUB_GROUP_INVITE_RICH": {
        "value": 165,
        "options": {}
    },
    "SUB_GROUP_PARTICIPANT_ADD_RICH": {
        "value": 166,
        "options": {}
    },
    "COMMUNITY_LINK_PARENT_GROUP_RICH": {
        "value": 167,
        "options": {}
    },
    "COMMUNITY_PARTICIPANT_ADD_RICH": {
        "value": 168,
        "options": {}
    },
    "SILENCED_UNKNOWN_CALLER_AUDIO": {
        "value": 169,
        "options": {}
    },
    "SILENCED_UNKNOWN_CALLER_VIDEO": {
        "value": 170,
        "options": {}
    },
    "GROUP_MEMBER_ADD_MODE": {
        "value": 171,
        "options": {}
    },
    "GROUP_MEMBERSHIP_JOIN_APPROVAL_REQUEST_NON_ADMIN_ADD": {
        "value": 172,
        "options": {}
    },
    "COMMUNITY_CHANGE_DESCRIPTION": {
        "value": 173,
        "options": {}
    },
    "SENDER_INVITE": {
        "value": 174,
        "options": {}
    },
    "RECEIVER_INVITE": {
        "value": 175,
        "options": {}
    },
    "COMMUNITY_ALLOW_MEMBER_ADDED_GROUPS": {
        "value": 176,
        "options": {}
    },
    "PINNED_MESSAGE_IN_CHAT": {
        "value": 177,
        "options": {}
    },
    "PAYMENT_INVITE_SETUP_INVITER": {
        "value": 178,
        "options": {}
    },
    "PAYMENT_INVITE_SETUP_INVITEE_RECEIVE_ONLY": {
        "value": 179,
        "options": {}
    },
    "PAYMENT_INVITE_SETUP_INVITEE_SEND_AND_RECEIVE": {
        "value": 180,
        "options": {}
    },
    "LINKED_GROUP_CALL_START": {
        "value": 181,
        "options": {}
    },
    "REPORT_TO_ADMIN_ENABLED_STATUS": {
        "value": 182,
        "options": {}
    }
};

// WebNotificationsInfo ========================================

var WebNotificationsInfo = self.WebNotificationsInfo = {};

WebNotificationsInfo.read = function (pbf, end) {
    return pbf.readFields(WebNotificationsInfo._readField, {timestamp: 0, unreadChats: 0, notifyMessageCount: 0, notifyMessages: []}, end);
};
WebNotificationsInfo._readField = function (tag, obj, pbf) {
    if (tag === 2) obj.timestamp = pbf.readVarint();
    else if (tag === 3) obj.unreadChats = pbf.readVarint();
    else if (tag === 4) obj.notifyMessageCount = pbf.readVarint();
    else if (tag === 5) obj.notifyMessages.push(WebMessageInfo.read(pbf, pbf.readVarint() + pbf.pos));
};
WebNotificationsInfo.write = function (obj, pbf) {
    if (obj.timestamp) pbf.writeVarintField(2, obj.timestamp);
    if (obj.unreadChats) pbf.writeVarintField(3, obj.unreadChats);
    if (obj.notifyMessageCount) pbf.writeVarintField(4, obj.notifyMessageCount);
    if (obj.notifyMessages) for (var i = 0; i < obj.notifyMessages.length; i++) pbf.writeMessage(5, WebMessageInfo.write, obj.notifyMessages[i]);
};
